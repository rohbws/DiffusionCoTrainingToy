Launching training on one GPU.
Epoch 0: 100%|██████████| 395/395 [00:08<00:00, 49.23it/s, loss=0.701, lr=7.9e-5, step=394] 
Epoch 1: 100%|██████████| 395/395 [00:08<00:00, 47.97it/s, loss=0.429, lr=0.0001, step=789]
Epoch 2: 100%|██████████| 395/395 [00:07<00:00, 51.73it/s, loss=0.43, lr=0.0001, step=1184] 
Epoch 3: 100%|██████████| 395/395 [00:08<00:00, 47.46it/s, loss=0.35, lr=0.0001, step=1579]
Epoch 4: 100%|██████████| 395/395 [00:07<00:00, 51.19it/s, loss=0.447, lr=0.0001, step=1974]
Epoch 5: 100%|██████████| 395/395 [00:08<00:00, 49.06it/s, loss=0.41, lr=0.0001, step=2369]
Epoch 6: 100%|██████████| 395/395 [00:07<00:00, 51.58it/s, loss=0.4, lr=0.0001, step=2764]  
Epoch 7: 100%|██████████| 395/395 [00:07<00:00, 49.42it/s, loss=0.471, lr=0.0001, step=3159]
Epoch 8: 100%|██████████| 395/395 [00:07<00:00, 51.63it/s, loss=0.453, lr=9.99e-5, step=3554]
Epoch 9: 100%|██████████| 395/395 [00:08<00:00, 48.91it/s, loss=0.496, lr=9.99e-5, step=3949]
Epoch 10: 100%|██████████| 395/395 [00:07<00:00, 51.83it/s, loss=0.43, lr=9.99e-5, step=4344] 
Epoch 11: 100%|██████████| 395/395 [00:08<00:00, 48.23it/s, loss=0.447, lr=9.99e-5, step=4739]
Epoch 12: 100%|██████████| 395/395 [00:07<00:00, 53.14it/s, loss=0.48, lr=9.99e-5, step=5134] 
Epoch 13: 100%|██████████| 395/395 [00:08<00:00, 47.38it/s, loss=0.445, lr=9.98e-5, step=5529]
Epoch 14: 100%|██████████| 395/395 [00:07<00:00, 52.22it/s, loss=0.332, lr=9.98e-5, step=5924]
Epoch 15: 100%|██████████| 395/395 [00:08<00:00, 49.22it/s, loss=0.434, lr=9.98e-5, step=6319]
Epoch 16: 100%|██████████| 395/395 [00:07<00:00, 51.67it/s, loss=0.532, lr=9.98e-5, step=6714]
Epoch 17: 100%|██████████| 395/395 [00:08<00:00, 49.14it/s, loss=0.427, lr=9.97e-5, step=7109]
Epoch 18: 100%|██████████| 395/395 [00:07<00:00, 52.05it/s, loss=0.488, lr=9.97e-5, step=7504]
Epoch 19: 100%|██████████| 395/395 [00:08<00:00, 48.22it/s, loss=0.464, lr=9.97e-5, step=7899]
Epoch 20: 100%|██████████| 395/395 [00:07<00:00, 51.71it/s, loss=0.397, lr=9.96e-5, step=8294]
Epoch 21: 100%|██████████| 395/395 [00:08<00:00, 47.48it/s, loss=0.376, lr=9.96e-5, step=8689]
Epoch 22: 100%|██████████| 395/395 [00:07<00:00, 52.87it/s, loss=0.353, lr=9.95e-5, step=9084]
Epoch 23: 100%|██████████| 395/395 [00:08<00:00, 47.94it/s, loss=0.443, lr=9.95e-5, step=9479]
Epoch 24: 100%|██████████| 395/395 [00:07<00:00, 52.20it/s, loss=0.381, lr=9.94e-5, step=9874]
Epoch 25: 100%|██████████| 395/395 [00:08<00:00, 47.13it/s, loss=0.35, lr=9.94e-5, step=10269]
Epoch 26: 100%|██████████| 395/395 [00:07<00:00, 51.67it/s, loss=0.465, lr=9.93e-5, step=10664]
Epoch 27: 100%|██████████| 395/395 [00:08<00:00, 49.34it/s, loss=0.41, lr=9.93e-5, step=11059]
Epoch 28: 100%|██████████| 395/395 [00:07<00:00, 51.39it/s, loss=0.39, lr=9.92e-5, step=11454] 
Epoch 29: 100%|██████████| 395/395 [00:08<00:00, 48.59it/s, loss=0.355, lr=9.92e-5, step=11849]
Epoch 30: 100%|██████████| 395/395 [00:07<00:00, 51.94it/s, loss=0.355, lr=9.91e-5, step=12244]
Epoch 31: 100%|██████████| 395/395 [00:08<00:00, 48.24it/s, loss=0.381, lr=9.91e-5, step=12639]
Epoch 32: 100%|██████████| 395/395 [00:07<00:00, 52.37it/s, loss=0.437, lr=9.9e-5, step=13034] 
Epoch 33: 100%|██████████| 395/395 [00:08<00:00, 47.73it/s, loss=0.399, lr=9.89e-5, step=13429]
Epoch 34: 100%|██████████| 395/395 [00:07<00:00, 52.06it/s, loss=0.293, lr=9.89e-5, step=13824]
Epoch 35: 100%|██████████| 395/395 [00:08<00:00, 48.32it/s, loss=0.556, lr=9.88e-5, step=14219]
Epoch 36: 100%|██████████| 395/395 [00:07<00:00, 50.65it/s, loss=0.37, lr=9.87e-5, step=14614] 
Epoch 37: 100%|██████████| 395/395 [00:08<00:00, 47.89it/s, loss=0.388, lr=9.87e-5, step=15009]
Epoch 38: 100%|██████████| 395/395 [00:07<00:00, 51.85it/s, loss=0.534, lr=9.86e-5, step=15404]
Epoch 39: 100%|██████████| 395/395 [00:08<00:00, 48.34it/s, loss=0.372, lr=9.85e-5, step=15799]
Epoch 40: 100%|██████████| 395/395 [00:07<00:00, 52.11it/s, loss=0.42, lr=9.84e-5, step=16194] 
Epoch 41: 100%|██████████| 395/395 [00:08<00:00, 46.85it/s, loss=0.369, lr=9.84e-5, step=16589]
Epoch 42: 100%|██████████| 395/395 [00:07<00:00, 50.98it/s, loss=0.385, lr=9.83e-5, step=16984]
Epoch 43: 100%|██████████| 395/395 [00:08<00:00, 47.69it/s, loss=0.447, lr=9.82e-5, step=17379]
Epoch 44: 100%|██████████| 395/395 [00:07<00:00, 52.28it/s, loss=0.428, lr=9.81e-5, step=17774]
Epoch 45: 100%|██████████| 395/395 [00:08<00:00, 48.24it/s, loss=0.363, lr=9.8e-5, step=18169]
Epoch 46: 100%|██████████| 395/395 [00:07<00:00, 51.93it/s, loss=0.348, lr=9.79e-5, step=18564]
Epoch 47: 100%|██████████| 395/395 [00:08<00:00, 49.12it/s, loss=0.409, lr=9.78e-5, step=18959]
Epoch 48: 100%|██████████| 395/395 [00:07<00:00, 51.29it/s, loss=0.347, lr=9.78e-5, step=19354]
Epoch 49: 100%|██████████| 395/395 [00:08<00:00, 48.18it/s, loss=0.404, lr=9.77e-5, step=19749]
Epoch 50: 100%|██████████| 395/395 [00:07<00:00, 51.52it/s, loss=0.277, lr=9.76e-5, step=20144]
Epoch 51: 100%|██████████| 395/395 [00:08<00:00, 48.36it/s, loss=0.49, lr=9.75e-5, step=20539]
Epoch 52: 100%|██████████| 395/395 [00:07<00:00, 52.56it/s, loss=0.418, lr=9.74e-5, step=20934]
Epoch 53: 100%|██████████| 395/395 [00:08<00:00, 47.63it/s, loss=0.297, lr=9.73e-5, step=21329]
Epoch 54: 100%|██████████| 395/395 [00:07<00:00, 52.24it/s, loss=0.477, lr=9.72e-5, step=21724]
Epoch 55: 100%|██████████| 395/395 [00:08<00:00, 47.65it/s, loss=0.553, lr=9.71e-5, step=22119]
Epoch 56: 100%|██████████| 395/395 [00:07<00:00, 51.11it/s, loss=0.539, lr=9.7e-5, step=22514]]
Epoch 57: 100%|██████████| 395/395 [00:08<00:00, 48.74it/s, loss=0.559, lr=9.68e-5, step=22909]
Epoch 58: 100%|██████████| 395/395 [00:07<00:00, 51.21it/s, loss=0.316, lr=9.67e-5, step=23304]
Epoch 59: 100%|██████████| 395/395 [00:07<00:00, 49.43it/s, loss=0.463, lr=9.66e-5, step=23699]
Epoch 60: 100%|██████████| 395/395 [00:07<00:00, 50.82it/s, loss=0.517, lr=9.65e-5, step=24094]
Epoch 61: 100%|██████████| 395/395 [00:08<00:00, 49.22it/s, loss=0.329, lr=9.64e-5, step=24489]
Epoch 62: 100%|██████████| 395/395 [00:07<00:00, 50.77it/s, loss=0.421, lr=9.63e-5, step=24884]
Epoch 63: 100%|██████████| 395/395 [00:08<00:00, 47.29it/s, loss=0.399, lr=9.61e-5, step=25279]
Epoch 64: 100%|██████████| 395/395 [00:07<00:00, 52.03it/s, loss=0.415, lr=9.6e-5, step=25674] 
Epoch 65: 100%|██████████| 395/395 [00:08<00:00, 47.79it/s, loss=0.452, lr=9.59e-5, step=26069]
Epoch 66: 100%|██████████| 395/395 [00:07<00:00, 51.83it/s, loss=0.437, lr=9.58e-5, step=26464]
Epoch 67: 100%|██████████| 395/395 [00:08<00:00, 48.32it/s, loss=0.461, lr=9.56e-5, step=26859]
Epoch 68: 100%|██████████| 395/395 [00:07<00:00, 51.19it/s, loss=0.324, lr=9.55e-5, step=27254]
Epoch 69: 100%|██████████| 395/395 [00:08<00:00, 45.90it/s, loss=0.338, lr=9.54e-5, step=27649]
0it [00:00, ?it/s]███████| 395/395 [00:08<00:00, 46.99it/s, loss=0.338, lr=9.54e-5, step=27649]
Early stopping at epoch 69
0it [00:00, ?it/s]
torch.Size([256, 2]) torch.Size([256, 2])
0it [00:00, ?it/s]
0it [00:00, ?it/s]
0it [00:00, ?it/s]
1it [00:00, 160.44it/s]
1it [00:00, 178.42it/s]
0
1
1it [00:00, 137.28it/s]
0
1
1it [00:00, 110.59it/s]
tensor([[ 1.2806, -0.3700]], device='cuda:0')
tensor([[ 1.5164, -0.1179],
        [ 1.2475, -0.3865]], device='cuda:0')
1it [00:00, 125.89it/s]
tensor([[-0.3553, -0.0860]], device='cuda:0')
tensor([[[[-0.8074],
          [-0.5734]]]], device='cuda:0')
tensor([[-0.1976,  0.0690],
        [-0.6163, -0.3497]], device='cuda:0')
1it [00:00, 104.72it/s]
tensor([[-1.6531, -0.1289]], device='cuda:0')
torch.Size([1, 1, 2, 1])
tensor([[-1.5760, -0.0671],
        [-1.5671, -0.0580]], device='cuda:0')
1it [00:00, 105.43it/s]
tensor([[0.4613, 0.1287]], device='cuda:0')
torch.Size([1, 1, 2, 1])
torch.Size([1, 2])
tensor([[ 0.4423,  0.1131],
        [ 0.2296, -0.0996]], device='cuda:0')
0it [00:00, ?it/s]
tensor([[ 0.4017, -0.5880]], device='cuda:0')
torch.Size([2])
torch.Size([1, 2])
0it [00:00, ?it/s]
tensor([[-0.3768, -0.2803],
        [ 0.0107,  0.7906]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.3782, -0.3334],
        [-0.0853,  0.6676]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.3030, -0.1393],
        [-0.2183,  0.6691]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.4167, -0.2031],
        [-0.1654,  0.5147]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.4103, -0.2777],
        [-0.1845,  0.2016]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-4.4335e-01, -4.1657e-01],
        [ 3.6752e-04,  1.6832e-01]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.7645, -0.5068],
        [ 0.0408,  0.3631]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.0120, -0.5615],
        [ 0.1281,  0.3401]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.2290, -0.6369],
        [ 0.0465,  0.3837]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3508, -0.6742],
        [ 0.3326,  0.4820]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6451, -0.6847],
        [ 0.2853,  0.4381]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5902, -0.6146],
        [ 0.1891,  0.5431]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6610, -0.7600],
        [ 0.2258,  0.5979]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6102, -0.7582],
        [ 0.2006,  0.5512]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5720, -0.7683],
        [ 0.3304,  0.4133]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.2780, -0.5260],
        [ 0.1436,  0.5365]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5488, -0.4549],
        [ 0.3180,  0.5352]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5383, -0.7129],
        [ 0.1937,  0.5076]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5948, -0.6025],
        [ 0.1103,  0.4308]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5992, -0.5315],
        [ 0.3133,  0.3561]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9556, -0.3530],
        [ 0.6936,  0.5938]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0228, -0.5182],
        [ 0.7351,  0.5910]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9033, -0.3953],
        [ 0.8307,  0.5208]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7738, -0.4575],
        [ 0.8035,  0.5785]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9462, -0.5835],
        [ 0.6464,  0.6493]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1324, -0.6675],
        [ 0.6165,  0.7477]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2647, -0.5539],
        [ 0.3403,  0.4968]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3379, -0.8603],
        [ 0.4008,  0.6776]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3102, -0.8086],
        [ 0.5580,  0.8737]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3005, -0.6550],
        [ 0.4612,  0.8091]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2893, -0.6156],
        [ 0.1614,  0.9790]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0547, -0.8413],
        [ 0.2518,  0.9301]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9681, -0.7186],
        [ 0.1315,  0.8561]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8689, -0.6295],
        [ 0.1544,  1.0451]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9156, -0.4041],
        [-0.0123,  0.9240]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0606, -0.4907],
        [-0.1829,  1.0897]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1041, -0.1365],
        [-0.1287,  1.0685]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1311, -0.2015],
        [-0.0685,  0.9725]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2448, -0.3554],
        [-0.0337,  0.9732]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2061, -0.4036],
        [ 0.0468,  0.9857]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1793, -0.4009],
        [ 0.1251,  1.1852]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0261, -0.6771],
        [ 0.0995,  1.0966]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0538, -0.5677],
        [ 0.2102,  1.0989]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8216, -0.6556],
        [ 0.0924,  1.1861]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7660, -0.6942],
        [-0.1059,  1.2532]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8011, -0.6636],
        [ 0.0214,  1.1703]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9536, -0.5949],
        [-0.1108,  1.1893]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8422, -0.5931],
        [-0.0577,  0.9559]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9669, -0.5612],
        [-0.0145,  0.9855]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7414, -0.6388],
        [-0.0272,  0.7674]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6582, -0.5639],
        [-0.2922,  0.6828]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4767, -0.5829],
        [-0.5115,  0.6849]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5758, -0.3868],
        [-0.4667,  0.8322]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8217, -0.3400],
        [-0.3221,  0.7891]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1550, -0.4145],
        [-0.4833,  0.9707]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0747, -0.4753],
        [-0.6959,  1.1483]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9284, -0.3163],
        [-0.4321,  1.1173]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8386, -0.3470],
        [-0.3910,  0.9163]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7889, -0.1751],
        [-0.2802,  0.8013]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8441, -0.1014],
        [-0.2187,  0.6677]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7992, -0.3206],
        [-0.3901,  0.4930]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9992, -0.4679],
        [-0.5049,  0.5710]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1021, -0.4027],
        [-0.3323,  0.5310]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1112, -0.2627],
        [-0.0919,  0.4317]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2190, -0.2790],
        [ 0.0222,  0.3854]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3001,  0.1043],
        [-0.1594,  0.5228]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1410,  0.2388],
        [-0.1672,  0.6138]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0709,  0.4200],
        [-0.0337,  0.6514]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8778,  0.5275],
        [-0.1099,  0.7450]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7717,  0.6226],
        [-0.0186,  0.6765]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6006,  0.7006],
        [ 0.1521,  0.6284]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6001,  0.6075],
        [ 0.1907,  0.6313]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6582,  0.4890],
        [ 0.0524,  0.4191]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5568,  0.6140],
        [-0.0207,  0.1899]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6553,  0.7412],
        [ 0.0867,  0.2580]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7295,  0.7422],
        [-0.0559,  0.4906]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5749,  0.7025],
        [-0.1284,  0.5951]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6079,  0.9102],
        [-0.3703,  0.5076]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5956,  0.6620],
        [-0.3899,  0.6264]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3984,  0.7900],
        [-0.6187,  0.8440]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3281,  0.6962],
        [-0.5647,  0.7155]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.2115,  0.2182],
        [-0.4594,  0.5971]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.2206,  0.3041],
        [-0.5389,  0.5955]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4318,  0.1895],
        [-0.6778,  0.5418]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3847,  0.2662],
        [-0.8544,  0.4752]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3366,  0.0926],
        [-0.6557,  0.5585]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3513,  0.1660],
        [-0.7630,  0.6780]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5649,  0.1383],
        [-0.6591,  0.8213]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5862,  0.2211],
        [-0.7869,  0.9107]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8897,  0.2618],
        [-0.9173,  0.8598]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1562,  0.4969],
        [-0.9219,  0.9852]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0937,  0.6994],
        [-1.2040,  0.9024]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2742,  0.5920],
        [-1.2344,  0.7451]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0964,  0.5199],
        [-1.1707,  0.8504]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1862,  0.5129],
        [-1.2432,  1.0663]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1408,  0.6979],
        [-1.3214,  1.1402]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9400,  0.8335],
        [-1.2417,  1.3610]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1348,  0.7585],
        [-1.3318,  1.4158]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0637,  0.4806],
        [-1.1114,  1.2486]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0090,  0.6904],
        [-1.1692,  1.1471]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1243,  0.6816],
        [-1.1474,  1.1621]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2494,  0.4287],
        [-1.0851,  1.0669]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2012,  0.5130],
        [-0.9786,  1.3229]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2891,  0.3209],
        [-0.9759,  1.4400]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4008,  0.3939],
        [-0.7222,  1.5434]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4533,  0.4708],
        [-0.4197,  1.4411]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4533,  0.1719],
        [-0.3783,  1.4499]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4065,  0.3433],
        [-0.3069,  1.5154]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5635,  0.2600],
        [-0.4165,  1.6110]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.8413,  0.4948],
        [-0.5818,  1.9315]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6911,  0.5017],
        [-0.5931,  1.9093]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5084,  0.4815],
        [-0.7614,  1.8360]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4220,  0.4710],
        [-0.6673,  1.5878]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5072,  0.5274],
        [-0.8246,  1.6429]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6592,  0.5077],
        [-0.6667,  1.5301]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.8267,  0.7058],
        [-0.5344,  1.5873]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6399,  0.7242],
        [-0.4118,  1.4793]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4799,  0.7090],
        [-0.4975,  1.2209]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4086,  0.7390],
        [-0.3692,  1.0304]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3907,  0.5804],
        [-0.3930,  1.0698]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3461,  0.6743],
        [-0.4419,  1.0085]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1322,  0.4981],
        [-0.2552,  1.1503]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1458,  0.3119],
        [-0.3725,  1.0962]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9137,  0.2608],
        [-0.4511,  1.0093]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0356,  0.3252],
        [-0.4036,  1.0913]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0091,  0.1596],
        [-0.5130,  1.1639]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2894,  0.1630],
        [-0.2301,  1.0087]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5333,  0.1641],
        [-0.1926,  1.1908]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5681,  0.3025],
        [-0.2489,  1.1631]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4002,  0.1452],
        [-0.2836,  1.4181]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2577,  0.2602],
        [-0.0800,  1.5230]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3780,  0.2555],
        [-0.1107,  1.2814]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2715,  0.0529],
        [-0.4008,  1.0970]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1819,  0.1065],
        [-0.4017,  0.8762]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9919,  0.2245],
        [-0.1049,  0.9557]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9561,  0.0871],
        [-0.3018,  0.8331]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1048,  0.0709],
        [-0.1656,  0.8665]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0123,  0.0921],
        [-0.1639,  0.8937]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8882,  0.0119],
        [ 0.0111,  0.7243]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9776,  0.0688],
        [ 0.1665,  0.7601]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8477,  0.0362],
        [ 0.3235,  0.7425]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9698,  0.0770],
        [ 0.3268,  0.7346]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1509,  0.0073],
        [ 0.2413,  0.8060]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3076, -0.0096],
        [ 0.2092,  0.8176]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2827,  0.1605],
        [ 0.2273,  0.6986]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3429,  0.2324],
        [ 0.2350,  0.7365]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4210,  0.3096],
        [ 0.1751,  1.0162]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5270,  0.3712],
        [ 0.2457,  1.0402]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3807,  0.3934],
        [ 0.2078,  1.2962]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4610,  0.4010],
        [ 0.1775,  1.2837]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4240,  0.5307],
        [ 0.0434,  1.3638]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3286,  0.4432],
        [ 0.0058,  1.3917]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5354,  0.3351],
        [ 0.0788,  1.4448]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0805,  0.2234],
        [ 0.2417,  1.3586]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0149,  0.1755],
        [ 0.2487,  1.4262]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8698, -0.0625],
        [ 0.2664,  1.4886]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0557, -0.2524],
        [ 0.3628,  1.4042]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1999, -0.0348],
        [ 0.4085,  1.3938]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2455, -0.0900],
        [ 0.2770,  1.3941]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2553,  0.1011],
        [ 0.3939,  1.4952]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0906,  0.0556],
        [ 0.4522,  1.5017]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2717,  0.3348],
        [ 0.4985,  1.5864]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2373,  0.5570],
        [ 0.3921,  1.4142]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1821,  0.2976],
        [ 0.4852,  1.6490]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2592,  0.4582],
        [ 0.4183,  1.5848]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1844,  0.2476],
        [ 0.3095,  1.4651]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3296,  0.2355],
        [ 0.3397,  1.5629]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4531,  0.3802],
        [ 0.5532,  1.7751]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3007,  0.3283],
        [ 0.5974,  1.7391]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2868,  0.3951],
        [ 0.5357,  1.5912]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3063,  0.2202],
        [ 0.5124,  1.5214]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3713,  0.2555],
        [ 0.4237,  1.4058]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3024,  0.0666],
        [ 0.4130,  1.4156]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2579,  0.0051],
        [ 0.6955,  1.3869]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0941, -0.0511],
        [ 0.4732,  1.3823]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0609,  0.0066],
        [ 0.5496,  1.1415]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9361, -0.1011],
        [ 0.4405,  1.0122]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8768,  0.0455],
        [ 0.5748,  1.0365]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9828, -0.0515],
        [ 0.6241,  1.1601]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9318, -0.3334],
        [ 0.5462,  1.3617]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8171, -0.3900],
        [ 0.6040,  1.3168]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8640, -0.5330],
        [ 0.6412,  1.1369]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6533, -0.5967],
        [ 0.4030,  0.9796]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6306, -0.6734],
        [ 0.4242,  0.9494]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4591, -0.5300],
        [ 0.4209,  0.5740]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5545, -0.5124],
        [ 0.5278,  0.4620]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7340, -0.5691],
        [ 0.6173,  0.8662]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8974, -0.5430],
        [ 0.6637,  0.8994]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9661, -0.5116],
        [ 0.5953,  0.9303]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9214, -0.5100],
        [ 0.5740,  0.9895]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8089, -0.2139],
        [ 0.5471,  0.8847]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4822, -0.1862],
        [ 0.4911,  1.1065]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3744, -0.0688],
        [ 0.5663,  1.2573]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3072, -0.0495],
        [ 0.6933,  1.4534]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.1510,  0.0104],
        [ 0.5308,  1.5798]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.1367,  0.1224],
        [ 0.6303,  1.4999]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.0199,  0.3203],
        [ 0.7005,  1.2056]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.0794,  0.4253],
        [ 0.5817,  1.0298]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.2920,  0.5740],
        [ 0.7019,  1.0890]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.0808,  0.4458],
        [ 0.7359,  0.8192]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.2939,  0.2376],
        [ 0.7107,  0.7841]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3207,  0.2270],
        [ 0.8676,  0.8327]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4801,  0.3265],
        [ 0.5879,  1.0552]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6037,  0.4471],
        [ 0.6450,  1.0123]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5242,  0.2969],
        [ 0.6644,  1.0716]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4951,  0.4990],
        [ 0.6224,  1.1677]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4117,  0.4604],
        [ 0.4074,  1.1925]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3500,  0.5096],
        [ 0.5038,  1.1326]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.2175,  0.5295],
        [ 0.2916,  0.8326]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4407,  0.3625],
        [ 0.3662,  0.8415]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4618,  0.2339],
        [ 0.2034,  0.8066]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6406,  0.3398],
        [ 0.2446,  0.7555]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5825,  0.4231],
        [ 0.2428,  0.7810]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4833,  0.4936],
        [ 0.3032,  1.0046]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4654,  0.5896],
        [ 0.3387,  0.8442]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4073,  0.7092],
        [ 0.5609,  0.5778]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4158,  0.7235],
        [ 0.5683,  0.4092]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4812,  0.6063],
        [ 0.3982,  0.1044]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4014,  0.5445],
        [ 0.5603,  0.1437]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3709,  0.5095],
        [ 0.4773,  0.1287]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.1719,  0.7027],
        [ 0.4700, -0.0925]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.2635,  0.8164],
        [ 0.4475, -0.0719]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.1513,  0.7809],
        [ 0.4502,  0.0580]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.2692,  0.8281],
        [ 0.4247, -0.2588]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.1948,  0.9395],
        [ 0.4784, -0.2204]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3776,  1.1443],
        [ 0.4730, -0.1801]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5188,  0.9233],
        [ 0.2801, -0.2923]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4654,  0.8924],
        [ 0.3731, -0.4693]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3984,  0.8579],
        [ 0.2975, -0.6423]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5643,  0.8104],
        [ 0.4568, -0.6523]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4212,  0.6948],
        [ 0.4279, -0.7335]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5066,  0.8711],
        [ 0.3227, -0.7175]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5795,  0.9633],
        [ 0.4586, -0.5162]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7407,  1.0725],
        [ 0.4984, -0.3543]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7729,  1.2061],
        [ 0.3541, -0.3293]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6361,  1.2135],
        [ 0.1551, -0.3649]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7677,  1.3301],
        [ 0.0814, -0.4311]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8309,  1.4864],
        [ 0.2456, -0.6256]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7408,  1.4137],
        [ 0.5157, -0.7048]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7890,  1.4928],
        [ 0.5944, -0.6824]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8490,  1.2990],
        [ 0.6224, -0.3679]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0324,  1.3717],
        [ 0.7934, -0.1184]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2078e+00,  1.3872e+00],
        [ 6.8085e-01, -1.5106e-03]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3045,  1.4677],
        [ 0.5515, -0.0412]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3194,  1.6058],
        [ 0.6090, -0.1462]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3563,  1.5698],
        [ 0.6553, -0.1908]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4187,  1.7326],
        [ 0.5477, -0.0096]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5133,  1.7789],
        [ 0.3306, -0.0897]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5613,  1.7758],
        [ 0.2751, -0.2405]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6090,  1.9281],
        [ 0.1341, -0.3498]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.7293,  2.0356],
        [ 0.2368, -0.3145]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5663,  2.0547],
        [ 0.3603, -0.5051]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.7765,  2.0382],
        [ 0.3532, -0.5309]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6744,  2.0901],
        [ 0.3001, -0.3921]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.8362,  2.0892],
        [ 0.4002, -0.4568]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.8575,  2.0740],
        [ 0.4311, -0.4938]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.8094,  2.0914],
        [ 0.4141, -0.3702]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.8460,  2.1415],
        [ 0.5083, -0.3560]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.9765,  2.1797],
        [ 0.6353, -0.3702]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6842,  2.2178],
        [ 0.6109, -0.4315]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4651,  2.2077],
        [ 0.8066, -0.4562]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6210,  2.2640],
        [ 0.8413, -0.3331]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.7610,  2.3833],
        [ 0.8913, -0.3269]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.7026,  2.3993],
        [ 0.8419, -0.3106]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5940,  2.4883],
        [ 0.8038, -0.1525]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.8977,  2.5639],
        [ 0.7949, -0.0950]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.8360,  2.6943],
        [ 0.8103, -0.1272]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.7664,  2.7990],
        [ 0.9127, -0.1740]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.9645,  2.6898],
        [ 0.7305, -0.1530]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-3.0568,  2.6798],
        [ 0.5940, -0.1713]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.7196,  2.4497],
        [ 0.6780,  0.0322]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6671,  2.5690],
        [ 0.8013,  0.1962]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6426,  2.5019],
        [ 0.8473,  0.1066]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6454,  2.5388],
        [ 0.8853, -0.0189]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5152,  2.4780],
        [ 0.7891,  0.0275]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5069,  2.4423],
        [ 0.7171,  0.0603]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3739,  2.6367],
        [ 0.6321,  0.1376]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2065,  2.7568],
        [ 0.6596,  0.0434]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1856,  2.8291],
        [ 0.7653,  0.2164]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3238,  3.0057],
        [ 0.6586,  0.3741]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3084,  2.8070],
        [ 0.4873,  0.3578]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6058,  2.8413],
        [ 0.6721,  0.3252]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6786,  2.8093],
        [ 0.6202,  0.3374]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6623,  2.5565],
        [ 0.8849,  0.2877]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.8681,  2.3738],
        [ 0.9741,  0.1500]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.7527,  2.5101],
        [ 0.7425,  0.1292]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.7554,  2.7050],
        [ 0.7761,  0.0455]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.7777,  3.0152],
        [ 0.7630,  0.1321]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.8094,  2.9925],
        [ 0.8905,  0.1256]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6208,  2.8127],
        [ 0.9202,  0.1104]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4530,  2.8445],
        [ 1.2405,  0.1334]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4894,  2.8969],
        [ 1.2979, -0.0192]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4399,  2.8208],
        [ 1.1519, -0.3324]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5085,  2.8615],
        [ 1.0623, -0.3582]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4904,  2.9329],
        [ 1.2179, -0.4594]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4010,  3.0263],
        [ 1.1943, -0.5194]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4141,  3.1131],
        [ 1.1361, -0.5045]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3101,  3.0998],
        [ 1.0994, -0.5242]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2591,  2.9318],
        [ 1.2322, -0.2977]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3695,  3.0141],
        [ 1.0918, -0.4339]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3796,  3.2022],
        [ 1.1898, -0.4701]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3876,  3.1327],
        [ 1.3294, -0.6505]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3626,  3.1529],
        [ 1.4085, -0.5579]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2459,  3.0239],
        [ 1.5022, -0.6663]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2496,  3.0070],
        [ 1.4714, -0.6385]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2745,  3.2417],
        [ 1.4047, -0.5734]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3632,  3.1901],
        [ 1.3813, -0.3709]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3491,  3.1698],
        [ 1.3169, -0.2285]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1780,  3.2313],
        [ 1.3501, -0.2606]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1570,  3.2597],
        [ 1.3424, -0.3654]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0649,  3.0769],
        [ 1.4414, -0.4421]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3823,  3.0529],
        [ 1.5010, -0.4821]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3720,  3.0390],
        [ 1.6821, -0.3888]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3646,  2.9149],
        [ 1.6110, -0.5233]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2097,  3.0073],
        [ 1.7956, -0.6248]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2880,  2.9942],
        [ 1.7794, -0.6075]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5761,  3.0459],
        [ 1.8511, -0.4729]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2679,  3.2146],
        [ 1.7809, -0.5453]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2417,  3.2491],
        [ 1.7474, -0.7367]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1799,  3.2378],
        [ 1.9274, -0.6763]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2603,  3.1600],
        [ 1.8631, -0.6272]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0471,  3.1864],
        [ 1.8393, -0.8931]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0992,  3.2276],
        [ 1.9264, -0.9515]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1466,  3.0313],
        [ 1.7527, -0.7357]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1720,  3.1750],
        [ 1.8580, -0.8631]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1768,  3.2512],
        [ 1.6963, -0.6956]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1800,  3.2885],
        [ 1.8870, -0.6646]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1128,  3.3294],
        [ 1.9483, -0.7579]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1099,  3.4435],
        [ 1.8815, -0.6771]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1998,  3.5914],
        [ 1.9317, -0.5996]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2216,  3.4086],
        [ 1.9771, -0.5134]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0122,  3.4186],
        [ 1.9347, -0.4891]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0212,  3.5618],
        [ 2.1445, -0.2874]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0494,  3.6068],
        [ 2.1889, -0.2341]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0270,  3.4397],
        [ 2.2934,  0.0042]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9943,  3.3896],
        [ 2.4091, -0.0896]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8745,  3.3855],
        [ 2.3390,  0.0742]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8836,  3.3299],
        [ 2.4303,  0.1598]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9233,  3.2780],
        [ 2.4773, -0.0806]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8079,  3.2208],
        [ 2.3813, -0.0802]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7412,  3.4208],
        [ 2.5608, -0.0426]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0059,  3.3621],
        [ 2.5571, -0.2089]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9487,  3.2647],
        [ 2.7481, -0.2203]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0757,  3.1605],
        [ 2.5210, -0.1255]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1835,  3.1716],
        [ 2.7332,  0.0040]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3199,  3.3006],
        [ 2.8553,  0.1953]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4297,  3.2461],
        [ 2.8785,  0.1905]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2881,  3.5470],
        [ 2.9768,  0.3593]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2158,  3.4382],
        [ 2.8110,  0.3796]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2137,  3.3776],
        [ 2.8936,  0.4074]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1352,  3.3188],
        [ 3.1502,  0.4753]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0981,  3.0811],
        [ 3.0512,  0.4747]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9027,  2.8644],
        [ 3.0663,  0.4331]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0310,  2.9050],
        [ 3.0202,  0.4698]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9615,  2.8522],
        [ 3.1066,  0.4327]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8766,  2.8018],
        [ 3.0203,  0.5595]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9048,  2.5919],
        [ 3.1472,  0.5639]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8873,  2.5427],
        [ 2.9839,  0.4806]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8072,  2.5401],
        [ 2.8387,  0.5920]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8030,  2.5514],
        [ 2.9783,  0.8234]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6548,  2.6061],
        [ 3.0870,  0.9160]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6068,  2.6399],
        [ 3.2103,  1.0521]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6295,  2.4216],
        [ 3.3039,  1.1589]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7002,  2.2209],
        [ 3.4405,  1.1469]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6840,  2.0974],
        [ 3.5187,  1.3394]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7341,  2.1630],
        [ 3.6031,  1.1737]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7126,  2.1544],
        [ 3.6315,  1.2731]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7012,  2.0129],
        [ 3.5744,  1.1157]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7340,  2.1537],
        [ 3.5211,  1.0423]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8424,  2.3240],
        [ 3.3667,  0.8340]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8443,  2.3711],
        [ 3.2397,  0.9689]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9464,  2.2651],
        [ 3.3235,  0.8909]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9728,  2.2307],
        [ 3.3134,  0.9174]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8977,  1.9823],
        [ 3.2483,  0.9193]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6639,  1.8920],
        [ 3.2455,  1.0152]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6251,  1.9307],
        [ 3.3258,  0.9403]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7614,  2.0346],
        [ 3.2842,  0.7847]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7741,  1.8954],
        [ 3.3784,  0.9500]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8230,  1.9746],
        [ 3.4322,  0.8586]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9399,  2.1203],
        [ 3.3585,  0.7342]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9327,  2.3267],
        [ 3.2812,  0.6721]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7466,  2.2108],
        [ 3.1805,  0.6147]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7068,  2.0496],
        [ 3.2990,  0.6467]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8276,  2.0501],
        [ 3.1879,  0.4977]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7571,  1.9401],
        [ 3.1399,  0.4920]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7909,  2.1014],
        [ 3.1128,  0.5753]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7478,  2.0599],
        [ 3.0790,  0.4667]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6584,  2.2689],
        [ 2.9356,  0.3110]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8652,  2.2490],
        [ 3.1582,  0.1442]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9350,  2.2256],
        [ 3.0864,  0.2490]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9157,  2.0775],
        [ 3.1342,  0.2504]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9467,  2.0612],
        [ 3.1608,  0.3179]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0458,  2.0632],
        [ 3.1788,  0.3987]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0168,  2.2397],
        [ 3.1568,  0.4378]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1650,  2.2065],
        [ 2.9914,  0.6088]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2693,  2.1790],
        [ 3.0649,  0.3945]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3135,  2.0555],
        [ 3.1924,  0.2824]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3037,  1.9468],
        [ 3.2964,  0.3907]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2005,  2.1381],
        [ 3.2665,  0.5701]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2227,  2.1401],
        [ 3.3760,  0.5858]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4152,  1.9785],
        [ 3.2659,  0.5150]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4622,  1.9376],
        [ 2.9285,  0.4894]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4494,  1.7494],
        [ 2.8918,  0.4059]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2402,  1.8352],
        [ 2.8794,  0.4044]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4053,  1.9094],
        [ 2.7867,  0.3892]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2805,  1.6418],
        [ 2.7921,  0.4075]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2983,  1.5356],
        [ 2.7347,  0.4638]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4433,  1.6314],
        [ 2.5960,  0.5889]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3832,  1.6920],
        [ 2.5552,  0.6846]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3383,  1.7236],
        [ 2.4782,  0.5782]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4247,  1.8133],
        [ 2.4762,  0.4387]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4202,  1.8087],
        [ 2.2245,  0.3621]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4308,  1.6867],
        [ 2.1736,  0.2272]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4207,  1.4642],
        [ 2.1297,  0.2681]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5341,  1.3941],
        [ 2.0522,  0.2311]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.7780,  1.3019],
        [ 2.0874,  0.1727]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.7221,  1.5221],
        [ 2.1847,  0.1813]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.8028,  1.3216],
        [ 1.9995,  0.3527]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6388,  1.2335],
        [ 2.0571,  0.4931]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6160,  1.1071],
        [ 2.0774,  0.4774]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6749,  0.9970],
        [ 2.1891,  0.4793]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6738,  0.8005],
        [ 2.2481,  0.5926]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3944,  0.9338],
        [ 2.0011,  0.3999]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4458,  1.0977],
        [ 1.7534,  0.2890]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4891,  1.1430],
        [ 1.8162,  0.1864]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3866,  1.1488],
        [ 1.7901,  0.3688]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2310,  1.0600],
        [ 1.5650,  0.2141]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3248,  1.0740],
        [ 1.5933,  0.2512]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3775,  1.3299],
        [ 1.4940,  0.1760]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5995,  1.3961],
        [ 1.5657,  0.2576]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5931,  1.3264],
        [ 1.6206,  0.0505]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6916,  1.3309],
        [ 1.4770, -0.0052]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.7671,  1.3279],
        [ 1.6034,  0.0074]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5970,  1.3835],
        [ 1.5990, -0.0727]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5313,  1.1892],
        [ 1.5392,  0.0991]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4466,  1.0666],
        [ 1.4349,  0.2647]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4282,  1.1959],
        [ 1.4957,  0.3268]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3660,  1.1937],
        [ 1.5577,  0.4076]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3918,  1.3015],
        [ 1.4987,  0.4466]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4651,  1.4885],
        [ 1.5456,  0.3742]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3021,  1.6093],
        [ 1.5075,  0.5124]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3672,  1.6470],
        [ 1.5206,  0.5818]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4340,  1.7900],
        [ 1.6152,  0.5277]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3903,  1.6997],
        [ 1.3979,  0.5837]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3872,  1.5745],
        [ 1.3859,  0.6596]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2942,  1.7266],
        [ 1.2042,  0.7570]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0879,  1.7357],
        [ 1.1209,  0.9199]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9928,  1.9151],
        [ 1.1987,  0.9019]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1377,  2.0320],
        [ 1.2588,  0.8369]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9630,  2.1783],
        [ 1.1893,  0.7594]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9715,  2.1100],
        [ 1.3966,  0.7186]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9969,  1.7974],
        [ 1.4367,  0.6126]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8804,  1.7162],
        [ 1.3663,  0.5675]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7624,  1.7814],
        [ 1.2677,  0.6580]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7330,  1.8333],
        [ 1.1114,  0.7395]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7418,  1.6938],
        [ 0.9500,  0.7636]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7986,  1.8803],
        [ 0.9504,  0.9196]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8499,  1.8840],
        [ 1.0693,  1.0723]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9019,  1.8508],
        [ 1.0521,  0.8304]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9825,  1.7199],
        [ 0.7856,  0.9434]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9400,  1.7326],
        [ 0.9319,  0.8811]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0935,  1.6575],
        [ 0.9056,  0.8371]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0447,  1.5600],
        [ 0.8416,  0.7878]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2042,  1.5700],
        [ 0.7844,  0.7551]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1022,  1.4637],
        [ 0.7224,  0.5155]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1153,  1.5425],
        [ 0.5613,  0.4991]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0783,  1.6819],
        [ 0.3820,  0.4511]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0318,  1.6406],
        [ 0.3608,  0.4592]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0210,  1.6208],
        [ 0.1933,  0.5104]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9203,  1.7233],
        [ 0.1766,  0.4648]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8253,  1.5201],
        [ 0.1614,  0.4190]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9327,  1.4206],
        [ 0.2972,  0.4102]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8450,  1.3936],
        [ 0.2044,  0.4089]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8614,  1.3765],
        [ 0.2534,  0.3371]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8017,  1.4335],
        [ 0.2007,  0.3765]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7043,  1.4338],
        [ 0.1315,  0.1935]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5283,  1.5238],
        [ 0.0575,  0.1910]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5959,  1.4411],
        [ 0.0057,  0.2694]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5787,  1.2844],
        [-0.0133,  0.4860]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6345,  1.1374],
        [ 0.0428,  0.4967]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8290,  1.1481],
        [ 0.1457,  0.6730]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8729,  1.1340],
        [ 0.2333,  0.6584]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0781,  0.9744],
        [ 0.1291,  0.7352]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9840,  1.0734],
        [ 0.2626,  0.9300]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0514,  1.0903],
        [ 0.4105,  1.1100]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1566,  1.3841],
        [ 0.1873,  1.0163]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1165,  1.5493],
        [ 0.1836,  1.1156]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2629,  1.1823],
        [ 0.2331,  1.2185]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3194,  1.3003],
        [ 0.4619,  0.9051]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2087,  1.3213],
        [ 0.5074,  0.9366]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4057,  1.2582],
        [ 0.5163,  0.9165]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3562,  1.2552],
        [ 0.6040,  0.8858]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3526,  1.0742],
        [ 0.4678,  0.7352]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3891,  1.0515],
        [ 0.3165,  0.7514]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5615,  1.0710],
        [ 0.4879,  0.8522]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5656,  1.0799],
        [ 0.5560,  0.8935]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6409,  1.0976],
        [ 0.6780,  1.0170]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5933,  0.9181],
        [ 0.7224,  1.0285]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5852,  0.8224],
        [ 0.6786,  1.0210]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6947,  0.8838],
        [ 0.7847,  0.8501]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.7691,  0.7882],
        [ 0.7557,  0.8641]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.8368,  0.7878],
        [ 0.7155,  1.0597]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6057,  0.7656],
        [ 0.7547,  1.1551]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4024,  0.6657],
        [ 0.6997,  1.1755]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3248,  0.7839],
        [ 0.7534,  1.2925]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5037,  0.7096],
        [ 0.7238,  1.2469]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4058,  0.6971],
        [ 0.9005,  1.2062]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5333,  0.7196],
        [ 0.9404,  1.1531]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.7541,  0.8250],
        [ 1.0344,  1.2708]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.8576,  0.9871],
        [ 1.1484,  1.1308]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5476,  1.0096],
        [ 1.2290,  1.0959]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4168,  1.2043],
        [ 1.2506,  1.0591]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3335,  1.1588],
        [ 1.0812,  1.0022]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1846,  1.3323],
        [ 1.2054,  0.9320]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0275,  1.3020],
        [ 1.3251,  0.8918]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1001,  1.2429],
        [ 1.4197,  0.9278]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0579,  1.2409],
        [ 1.5170,  0.7441]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0071,  1.3543],
        [ 1.4674,  0.6462]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9983,  1.2669],
        [ 1.5317,  0.6214]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0648,  1.2445],
        [ 1.5571,  0.6339]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9580,  1.3553],
        [ 1.6399,  0.7332]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8615,  1.2909],
        [ 1.5366,  0.6078]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9074,  1.3542],
        [ 1.4912,  0.8531]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8325,  1.3676],
        [ 1.4969,  0.9696]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8354,  1.3671],
        [ 1.6194,  1.0039]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8798,  1.2311],
        [ 1.6441,  1.0730]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9483,  1.1372],
        [ 1.5266,  0.9979]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8819,  1.2303],
        [ 1.5340,  1.1210]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7897,  1.0718],
        [ 1.5288,  1.0182]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8386,  1.0905],
        [ 1.5511,  1.0709]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8217,  1.2348],
        [ 1.5253,  1.1523]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6327,  1.2806],
        [ 1.4873,  1.1502]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5256,  1.3140],
        [ 1.6100,  1.2249]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6482,  1.4744],
        [ 1.4698,  1.2090]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5289,  1.4869],
        [ 1.4604,  1.2855]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4952,  1.4693],
        [ 1.4595,  1.3002]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5785,  1.5433],
        [ 1.3675,  1.2271]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4173,  1.5628],
        [ 1.5212,  1.1515]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4012,  1.4763],
        [ 1.5724,  1.2316]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4728,  1.4500],
        [ 1.6420,  0.9938]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4194,  1.2996],
        [ 1.6657,  0.8721]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4041,  1.3422],
        [ 1.7967,  0.8660]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3810,  1.3804],
        [ 1.8942,  0.9514]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3790,  1.1445],
        [ 2.1289,  0.7866]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4687,  1.1327],
        [ 2.1982,  1.0002]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5172,  1.0771],
        [ 2.1172,  1.0991]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5777,  1.1679],
        [ 2.1929,  0.9873]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6045,  1.1806],
        [ 2.1614,  1.0584]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5002,  1.3479],
        [ 1.9951,  1.0491]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3926,  1.4255],
        [ 1.9433,  1.0660]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4945,  1.3901],
        [ 1.9725,  0.9761]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3990,  1.3306],
        [ 1.9856,  0.9157]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4484,  1.2617],
        [ 1.8639,  0.9235]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3995,  1.4193],
        [ 1.8700,  1.0309]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3542,  1.2842],
        [ 1.9622,  1.0354]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3707,  1.2557],
        [ 1.9445,  1.1332]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5326,  1.2681],
        [ 1.8944,  1.0549]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6675,  1.3458],
        [ 1.9936,  0.9311]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8076,  1.3396],
        [ 1.9346,  0.9177]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7701,  1.4868],
        [ 1.7136,  1.0945]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8467,  1.5742],
        [ 1.6606,  1.0338]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9497,  1.6954],
        [ 1.5832,  0.8954]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9544,  1.7572],
        [ 1.5901,  0.7572]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0607,  1.6780],
        [ 1.6519,  0.7591]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9861,  1.5527],
        [ 1.8088,  0.7307]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8451,  1.5689],
        [ 1.7340,  0.7748]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7408,  1.5216],
        [ 1.7562,  0.9156]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7908,  1.5649],
        [ 1.9914,  1.0566]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8566,  1.6054],
        [ 2.0514,  0.9906]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8125,  1.6855],
        [ 1.9906,  1.1576]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6441,  1.6052],
        [ 1.8720,  1.2219]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8403,  1.4948],
        [ 2.0214,  1.3971]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8236,  1.6192],
        [ 1.8900,  1.4638]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7265,  1.6107],
        [ 1.9060,  1.4390]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7984,  1.7448],
        [ 1.7038,  1.3131]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6370,  1.8503],
        [ 1.7151,  1.1573]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7370,  1.8118],
        [ 1.7473,  1.1158]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6062,  1.8762],
        [ 1.6573,  0.9746]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5147,  1.8372],
        [ 1.7751,  0.8886]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6468,  1.8528],
        [ 1.7313,  0.8014]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6577,  1.8069],
        [ 1.5959,  0.8290]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8365,  1.7114],
        [ 1.7255,  0.8419]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9379,  1.7662],
        [ 1.6910,  0.8819]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8689,  1.7101],
        [ 1.6945,  0.9636]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9769,  1.6871],
        [ 1.6854,  1.1148]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9141,  1.8600],
        [ 1.6976,  1.0143]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0492,  1.8771],
        [ 1.6859,  1.0346]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9315,  2.0357],
        [ 1.6718,  1.0495]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8262,  2.0025],
        [ 1.7157,  1.0371]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9318,  1.9970],
        [ 1.6110,  1.0319]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7558,  1.9551],
        [ 1.6796,  1.0211]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7907,  1.9207],
        [ 1.5727,  1.0037]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7506,  1.9602],
        [ 1.5254,  1.0703]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8747,  1.8679],
        [ 1.6051,  1.1652]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0229,  1.6594],
        [ 1.4549,  1.0861]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0855,  1.5827],
        [ 1.4543,  1.2352]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0368,  1.6071],
        [ 1.4677,  1.1823]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1662,  1.6550],
        [ 1.4089,  1.3223]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1222,  1.6119],
        [ 1.4787,  1.4026]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0242,  1.6743],
        [ 1.4582,  1.4610]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0224,  1.7118],
        [ 1.5968,  1.4442]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9837,  1.8019],
        [ 1.6682,  1.4734]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1059,  1.7250],
        [ 1.7273,  1.3502]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1676,  1.6769],
        [ 1.7328,  1.4725]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1646,  1.8204],
        [ 1.8164,  1.5703]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3344,  1.7907],
        [ 1.8492,  1.5855]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3979,  1.6259],
        [ 1.7810,  1.4463]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3726,  1.7235],
        [ 1.8799,  1.4203]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4880,  1.6797],
        [ 2.0492,  1.3366]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5258,  1.5805],
        [ 2.1085,  1.1983]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4922,  1.5923],
        [ 2.1134,  1.1448]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5254,  1.5892],
        [ 2.1662,  1.3284]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3665,  1.6646],
        [ 2.0534,  1.4650]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3975,  1.6640],
        [ 2.1068,  1.5122]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4932,  1.7106],
        [ 2.1043,  1.3939]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5194,  1.6426],
        [ 2.1667,  1.4307]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4215,  1.5425],
        [ 2.1021,  1.5381]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4148,  1.5869],
        [ 2.1568,  1.4152]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4856,  1.6358],
        [ 2.2443,  1.4306]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5729,  1.7129],
        [ 2.3928,  1.3616]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5830,  1.8020],
        [ 2.3577,  1.3942]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6780,  1.6612],
        [ 2.2585,  1.2741]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.7344,  1.6005],
        [ 2.1915,  1.3034]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6742,  1.4480],
        [ 1.9638,  1.2557]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.7554,  1.5959],
        [ 2.0389,  1.1994]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.8306,  1.5320],
        [ 2.1470,  1.3112]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.9456,  1.4155],
        [ 2.1565,  1.3387]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.8987,  1.3735],
        [ 2.0940,  1.2200]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.9041,  1.4182],
        [ 1.9877,  1.3865]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.9395,  1.4675],
        [ 2.1254,  1.2695]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.7273,  1.5414],
        [ 2.0906,  1.3006]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6825,  1.5593],
        [ 1.9569,  1.2896]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.8537,  1.5146],
        [ 1.9060,  1.2405]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.8677,  1.5213],
        [ 1.9276,  1.3223]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-3.0215,  1.5289],
        [ 2.0045,  1.3238]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-3.0695,  1.4189],
        [ 1.8652,  1.3945]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.9846,  1.4084],
        [ 1.8445,  1.4993]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.9778,  1.4529],
        [ 1.8168,  1.5470]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.8983,  1.3730],
        [ 1.7631,  1.5461]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.7053,  1.3774],
        [ 1.7421,  1.5344]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.7856,  1.2575],
        [ 1.7888,  1.5348]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.8060,  1.3023],
        [ 1.6390,  1.5672]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.8509,  1.3439],
        [ 1.7156,  1.6368]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.8397,  1.4205],
        [ 1.6684,  1.6346]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.7182,  1.3306],
        [ 1.4936,  1.6398]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6816,  1.3194],
        [ 1.5634,  1.6150]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6399,  1.3149],
        [ 1.6675,  1.7463]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.7821,  1.2676],
        [ 1.6525,  1.7601]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.8576,  1.2653],
        [ 1.4967,  1.5670]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.9053,  1.3084],
        [ 1.4290,  1.4890]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.9222,  1.1997],
        [ 1.5963,  1.6335]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-3.0522,  1.0731],
        [ 1.5765,  1.6231]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.9263,  1.2164],
        [ 1.6709,  1.5881]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.7688,  1.2284],
        [ 1.6618,  1.6741]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.8308,  1.1619],
        [ 1.5912,  1.6124]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.7647,  1.1019],
        [ 1.4967,  1.5915]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.7453,  1.0362],
        [ 1.6751,  1.5087]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.8147,  1.0615],
        [ 1.6074,  1.5141]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.7189,  1.0070],
        [ 1.5960,  1.4572]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.7789,  0.9696],
        [ 1.6494,  1.6989]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.7141,  0.9743],
        [ 1.7594,  1.8628]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.7049,  0.8181],
        [ 1.7704,  1.8483]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6063,  0.8379],
        [ 1.7735,  1.6906]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6540,  0.9473],
        [ 1.7189,  1.6702]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6721,  0.9541],
        [ 1.8161,  1.7418]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.7267,  0.9920],
        [ 1.8588,  1.9247]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.7072,  0.9987],
        [ 1.8330,  1.9693]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6585,  1.0178],
        [ 1.9153,  1.8913]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5640,  1.0072],
        [ 1.8992,  1.9005]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.5794,  1.1063],
        [ 1.7879,  1.9501]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.6006,  1.0659],
        [ 1.8315,  1.8260]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4746,  1.0429],
        [ 1.8517,  1.7567]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4198,  1.0234],
        [ 1.9078,  1.7037]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3633,  0.9288],
        [ 2.0063,  1.6692]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.4605,  0.9582],
        [ 2.0518,  1.7305]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3841,  0.8183],
        [ 1.9464,  1.7076]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3683,  0.8176],
        [ 1.9287,  1.5605]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.3594,  0.8254],
        [ 1.8862,  1.5385]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2363,  0.8860],
        [ 1.9384,  1.6107]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1238,  0.8909],
        [ 1.8552,  1.5501]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1252,  0.9596],
        [ 1.7471,  1.3809]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0271,  0.8991],
        [ 1.7531,  1.4496]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0765,  0.8659],
        [ 1.7722,  1.3915]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0718,  0.9410],
        [ 1.9103,  1.3052]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2150,  0.9445],
        [ 1.8096,  1.3738]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2684,  0.9020],
        [ 1.8389,  1.3954]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.2244,  0.8996],
        [ 1.8983,  1.4041]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.1210,  0.9622],
        [ 1.8652,  1.4338]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0213,  0.8040],
        [ 1.6828,  1.4066]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0416,  0.9336],
        [ 1.6876,  1.2819]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0891,  0.9058],
        [ 1.6062,  1.2074]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0947,  0.9049],
        [ 1.7317,  1.1539]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0754,  0.9428],
        [ 1.7408,  1.2064]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-2.0916,  1.0200],
        [ 1.7293,  1.2383]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9624,  0.9722],
        [ 1.6950,  1.2147]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.9099,  1.0226],
        [ 1.7997,  1.1978]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.8876,  0.8472],
        [ 1.7306,  1.2380]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7623,  0.8451],
        [ 1.6603,  1.2246]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7821,  0.8214],
        [ 1.6084,  1.2907]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7170,  0.8065],
        [ 1.6560,  1.1940]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6757,  0.7040],
        [ 1.5540,  1.0931]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.7309,  0.7232],
        [ 1.4880,  1.1043]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6360,  0.6522],
        [ 1.4588,  1.0908]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5983,  0.7546],
        [ 1.4572,  1.1066]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3410,  0.7131],
        [ 1.3721,  1.1698]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3077,  0.7603],
        [ 1.4126,  1.1914]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3322,  0.8179],
        [ 1.5148,  1.3154]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.2801,  0.8187],
        [ 1.4330,  1.4425]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.2472,  0.8650],
        [ 1.3422,  1.4555]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3307,  0.8859],
        [ 1.3838,  1.4649]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4867,  0.9236],
        [ 1.3541,  1.4703]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4833,  0.8021],
        [ 1.4571,  1.4583]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5208,  0.8435],
        [ 1.4678,  1.4196]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6324,  0.8806],
        [ 1.4748,  1.3980]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6259,  0.8842],
        [ 1.4716,  1.3545]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6643,  0.9202],
        [ 1.4371,  1.3921]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6020,  0.9043],
        [ 1.4614,  1.3248]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6144,  0.8283],
        [ 1.3745,  1.4363]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6452,  0.8891],
        [ 1.2273,  1.3925]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6684,  0.8643],
        [ 1.0168,  1.4439]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6269,  0.8485],
        [ 0.9669,  1.4417]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6866,  0.8817],
        [ 0.9799,  1.4903]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6732,  0.8558],
        [ 0.9698,  1.5893]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6577,  0.8892],
        [ 1.1194,  1.6882]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4972,  0.8998],
        [ 1.1152,  1.6657]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5091,  0.9403],
        [ 1.1735,  1.6755]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5809,  0.9063],
        [ 1.2975,  1.6342]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6646,  0.9050],
        [ 1.2601,  1.5771]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6129,  1.0051],
        [ 1.2526,  1.5124]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6032,  0.9517],
        [ 1.2333,  1.4947]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5901,  0.9401],
        [ 1.2827,  1.6182]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.6299,  0.9030],
        [ 1.3443,  1.6204]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5188,  0.8280],
        [ 1.3141,  1.5471]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5582,  0.8271],
        [ 1.2948,  1.4257]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5432,  0.6836],
        [ 1.4323,  1.4142]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5658,  0.7383],
        [ 1.4051,  1.5135]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4387,  0.7067],
        [ 1.4143,  1.5071]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3923,  0.7614],
        [ 1.5604,  1.4956]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5093,  0.7524],
        [ 1.6787,  1.6925]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.5357,  0.9086],
        [ 1.7058,  1.6335]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3909,  0.9338],
        [ 1.8086,  1.7801]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3187,  1.0067],
        [ 1.8164,  1.8388]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.1896,  1.0533],
        [ 1.9025,  1.7745]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3771,  1.1513],
        [ 1.8794,  1.6933]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3653,  1.1532],
        [ 1.8178,  1.6663]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.4320,  1.0854],
        [ 1.8138,  1.6234]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3938,  1.1333],
        [ 1.9185,  1.6963]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3124,  1.0094],
        [ 1.7844,  1.7001]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3289,  0.9236],
        [ 1.7698,  1.7269]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.3182,  0.7877],
        [ 1.8108,  1.6077]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.2697,  0.8758],
        [ 1.9173,  1.4807]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.2730,  0.8641],
        [ 1.9180,  1.4835]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.2486,  0.8760],
        [ 2.0500,  1.4176]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.1395,  0.8821],
        [ 1.9145,  1.3798]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.1880,  0.7860],
        [ 1.8384,  1.3923]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.2067,  0.8591],
        [ 1.7151,  1.3065]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.1193,  0.8696],
        [ 1.5714,  1.2830]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.1087,  0.9195],
        [ 1.5795,  1.3200]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.0351,  0.8232],
        [ 1.5727,  1.3594]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.0103,  0.7956],
        [ 1.5009,  1.3110]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.9832,  0.7242],
        [ 1.4751,  1.2195]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.8985,  0.7823],
        [ 1.3885,  1.1634]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.9422,  0.7164],
        [ 1.4850,  1.1672]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.9992,  0.6573],
        [ 1.6168,  1.0748]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.8884,  0.6964],
        [ 1.7806,  0.9911]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.8896,  0.7224],
        [ 1.7826,  0.9831]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.9375,  0.8317],
        [ 1.8156,  1.1738]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.8377,  0.8674],
        [ 1.8105,  1.2469]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.8999,  0.8836],
        [ 1.9455,  1.1948]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.9054,  0.8027],
        [ 2.0407,  1.1983]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.8332,  0.8397],
        [ 1.9859,  1.1603]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.8433,  0.8474],
        [ 1.8747,  1.0593]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.8014,  0.7647],
        [ 1.8171,  1.0616]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.8766,  0.8491],
        [ 1.8155,  1.1332]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.7743,  0.7965],
        [ 1.8257,  1.1151]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.7415,  0.7975],
        [ 1.8049,  1.0445]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.8685,  0.7788],
        [ 1.9347,  1.1270]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.8301,  0.7711],
        [ 1.9548,  1.1065]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.7918,  0.7823],
        [ 1.9317,  1.1079]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.8338,  0.8830],
        [ 1.9323,  1.1174]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.9115,  0.8751],
        [ 1.9828,  1.0679]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.7821,  0.8809],
        [ 2.0664,  1.1580]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.8036,  0.9988],
        [ 2.0239,  1.1453]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.7809,  1.0022],
        [ 1.9824,  1.1068]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.7980,  0.9917],
        [ 1.8996,  1.1293]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.8369,  1.0259],
        [ 1.8879,  1.0763]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.7839,  1.0591],
        [ 1.7469,  0.9430]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.7969,  1.0496],
        [ 1.7445,  0.9360]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.8013,  1.0231],
        [ 1.7114,  0.8396]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.9265,  1.1353],
        [ 1.6463,  0.8417]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.9753,  1.0698],
        [ 1.5962,  0.8658]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.0168,  1.0800],
        [ 1.5089,  0.8951]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.0303,  1.0593],
        [ 1.5009,  0.8869]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.0221,  1.0586],
        [ 1.4909,  0.9110]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.9957,  1.0521],
        [ 1.5423,  0.8929]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.0351,  1.0505],
        [ 1.4579,  0.9226]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.0923,  1.1003],
        [ 1.3638,  0.9505]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.1047,  1.1164],
        [ 1.2298,  0.9186]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.0695,  1.0285],
        [ 1.1546,  0.8875]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.0575,  1.0082],
        [ 1.1122,  0.9632]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.1365,  1.0213],
        [ 1.0356,  1.0049]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.2233,  0.9526],
        [ 0.9331,  1.0573]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.1247,  1.0314],
        [ 1.0112,  1.0142]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.1402,  0.9311],
        [ 0.9575,  0.9967]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.1507,  0.8932],
        [ 0.9180,  0.9182]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.1820,  0.8691],
        [ 0.9415,  0.9899]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.0965,  0.8711],
        [ 0.8367,  0.9655]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.1327,  0.8199],
        [ 0.7526,  0.9392]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.1636,  0.6863],
        [ 0.7170,  1.0226]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.1294,  0.7869],
        [ 0.6690,  0.9864]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.0630,  0.7329],
        [ 0.6697,  0.9404]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.0596,  0.7881],
        [ 0.6983,  0.9705]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.0798,  0.8171],
        [ 0.8126,  0.8721]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.0672,  0.7752],
        [ 0.9303,  0.8220]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.1292,  0.8244],
        [ 0.8670,  0.8704]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-1.0258,  0.8894],
        [ 0.7593,  0.8540]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.9649,  0.8592],
        [ 0.7343,  0.8807]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.9095,  0.8091],
        [ 0.7912,  0.8049]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.8922,  0.8013],
        [ 0.8056,  0.8815]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.8499,  0.7248],
        [ 0.8391,  0.9577]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.8370,  0.7598],
        [ 0.8760,  0.9418]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.7677,  0.6517],
        [ 0.7827,  1.0035]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.7310,  0.6758],
        [ 0.7274,  0.9739]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.7533,  0.7259],
        [ 0.8343,  0.9858]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.6760,  0.6843],
        [ 0.8287,  0.9908]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.6294,  0.6730],
        [ 0.8689,  0.9764]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.4938,  0.5671],
        [ 0.9190,  0.9868]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.4726,  0.4541],
        [ 0.8864,  0.9300]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.4954,  0.6001],
        [ 0.8710,  0.8836]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.4999,  0.5497],
        [ 0.8896,  0.9000]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.3443,  0.5534],
        [ 0.9045,  0.9453]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.2571,  0.5346],
        [ 0.9433,  0.9007]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.2692,  0.4816],
        [ 0.9416,  0.9912]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.2393,  0.5855],
        [ 0.9119,  0.9601]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.3284,  0.5078],
        [ 0.9022,  0.9614]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.3239,  0.5404],
        [ 0.8571,  0.9965]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.2861,  0.4917],
        [ 0.7663,  0.9308]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.3327,  0.5189],
        [ 0.7882,  0.9796]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.2092,  0.4860],
        [ 0.8477,  0.9923]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.1621,  0.4807],
        [ 0.8341,  1.0925]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.1483,  0.4225],
        [ 0.8575,  1.1345]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.1381,  0.4902],
        [ 0.8697,  1.0902]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.1277,  0.4103],
        [ 0.8635,  1.0876]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.2240,  0.3392],
        [ 0.9173,  1.3040]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.3047,  0.3276],
        [ 0.9798,  1.2706]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.3416,  0.3496],
        [ 0.9990,  1.3517]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.3596,  0.3536],
        [ 1.0217,  1.3523]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.3183,  0.3938],
        [ 1.0383,  1.3922]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.3597,  0.3928],
        [ 0.9996,  1.3928]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.3512,  0.3965],
        [ 1.0466,  1.2224]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.3543,  0.3906],
        [ 1.0696,  1.2695]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.3549,  0.4736],
        [ 1.0307,  1.2067]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.2291,  0.4874],
        [ 1.0800,  1.2743]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.2310,  0.4881],
        [ 1.1130,  1.2784]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.2709,  0.5734],
        [ 1.0914,  1.2692]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.2849,  0.6062],
        [ 1.0013,  1.3026]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.3284,  0.6614],
        [ 0.9932,  1.2836]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.2429,  0.6378],
        [ 0.9669,  1.2830]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.2282,  0.6563],
        [ 0.8785,  1.2538]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.2542,  0.6624],
        [ 0.9123,  1.2406]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.2651,  0.5792],
        [ 0.8434,  1.2116]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.3140,  0.5997],
        [ 0.7060,  1.2165]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.4017,  0.6222],
        [ 0.7042,  1.1982]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.4045,  0.5827],
        [ 0.6426,  1.1961]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.4783,  0.6027],
        [ 0.6680,  1.1591]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.5082,  0.6066],
        [ 0.7112,  1.1450]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.4745,  0.5387],
        [ 0.7387,  1.1264]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.5667,  0.4652],
        [ 0.7869,  1.1057]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.5233,  0.4395],
        [ 0.8042,  1.1393]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.5035,  0.4279],
        [ 0.7991,  1.0915]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.5492,  0.4834],
        [ 0.8833,  1.0787]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.4887,  0.4975],
        [ 0.8644,  1.0541]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.4666,  0.5261],
        [ 0.8799,  0.9977]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.4938,  0.4762],
        [ 0.9751,  1.0339]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.3890,  0.5733],
        [ 0.9845,  1.0669]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.3295,  0.5833],
        [ 0.9420,  0.9950]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.3060,  0.5965],
        [ 0.9627,  1.0082]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.2466,  0.6541],
        [ 0.8464,  0.9331]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.2607,  0.6662],
        [ 0.9029,  0.8665]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.2253,  0.6907],
        [ 1.0400,  0.8779]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.1704,  0.5825],
        [ 1.0529,  0.8073]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.1217,  0.5204],
        [ 1.0169,  0.7715]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.0939,  0.5038],
        [ 1.0000,  0.7571]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.1482,  0.5603],
        [ 0.8974,  0.8225]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.0276,  0.5671],
        [ 0.9221,  0.8113]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.0861,  0.5811],
        [ 0.9340,  0.7871]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.1065,  0.6021],
        [ 0.9229,  0.8001]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.1280,  0.6015],
        [ 0.9446,  0.7553]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.0894,  0.5198],
        [ 1.0174,  0.7433]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.1292,  0.4972],
        [ 0.9704,  0.6860]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.1902,  0.4552],
        [ 0.9354,  0.6659]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.2565,  0.3777],
        [ 0.9014,  0.6192]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.3143,  0.5093],
        [ 0.9149,  0.6284]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.2938,  0.5153],
        [ 0.8604,  0.6316]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.2662,  0.4449],
        [ 0.8246,  0.5217]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.2662,  0.4202],
        [ 0.8220,  0.4792]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.2460,  0.4684],
        [ 0.8728,  0.4682]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.2471,  0.4925],
        [ 0.8391,  0.4318]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.2460,  0.4128],
        [ 0.7643,  0.4062]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.2963,  0.3562],
        [ 0.7689,  0.4046]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.2071,  0.3565],
        [ 0.7923,  0.4261]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.1875,  0.3046],
        [ 0.7668,  0.4443]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.1320,  0.3315],
        [ 0.7869,  0.4396]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.1039,  0.3172],
        [ 0.8030,  0.4142]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.1121,  0.2456],
        [ 0.8219,  0.4125]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.0612,  0.2467],
        [ 0.8749,  0.4233]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.0740,  0.2824],
        [ 0.8840,  0.3592]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.0738,  0.3701],
        [ 0.8171,  0.3326]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.0902,  0.2860],
        [ 0.8381,  0.3434]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.0059,  0.3039],
        [ 0.7760,  0.3562]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.1129,  0.3480],
        [ 0.8439,  0.4002]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.0995,  0.4220],
        [ 0.8047,  0.3899]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[-0.0312,  0.4243],
        [ 0.8476,  0.3638]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.0038, 0.3928],
        [0.8388, 0.4104]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.0438, 0.3611],
        [0.8363, 0.4090]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.0731, 0.3735],
        [0.8843, 0.4358]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.0712, 0.4032],
        [0.8758, 0.4207]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.0524, 0.4263],
        [0.9261, 0.4416]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.0773, 0.4473],
        [0.8902, 0.4409]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.1369, 0.5363],
        [0.8701, 0.5325]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.0568, 0.5343],
        [0.9140, 0.5238]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.0274, 0.5324],
        [0.9152, 0.4968]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.0255, 0.5495],
        [0.9042, 0.4771]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.0895, 0.5225],
        [0.9746, 0.4914]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.0982, 0.6057],
        [0.9562, 0.4998]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.1640, 0.5717],
        [0.9779, 0.4895]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.1910, 0.5509],
        [0.9356, 0.4377]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2323, 0.5670],
        [0.9614, 0.4500]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2823, 0.5252],
        [0.9582, 0.4354]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2318, 0.5489],
        [0.9440, 0.4476]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2648, 0.5694],
        [0.9448, 0.4325]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2757, 0.5884],
        [0.8899, 0.4658]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2748, 0.6445],
        [0.8780, 0.4958]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2250, 0.6230],
        [0.8712, 0.4484]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2417, 0.6759],
        [0.9085, 0.4129]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.1940, 0.6858],
        [0.9188, 0.4085]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2508, 0.6831],
        [0.8495, 0.4438]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2101, 0.6451],
        [0.9009, 0.4370]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2231, 0.6211],
        [0.8488, 0.4326]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2345, 0.6270],
        [0.8079, 0.4797]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2287, 0.6337],
        [0.8111, 0.4536]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2376, 0.6095],
        [0.8122, 0.4275]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2070, 0.6275],
        [0.8604, 0.4222]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2738, 0.5648],
        [0.7862, 0.4629]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2447, 0.4909],
        [0.8032, 0.5019]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2515, 0.4806],
        [0.8168, 0.5176]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2057, 0.4251],
        [0.7108, 0.5602]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.1987, 0.4402],
        [0.7445, 0.5347]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.1974, 0.4421],
        [0.7220, 0.5093]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2709, 0.4647],
        [0.7478, 0.4540]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2577, 0.4861],
        [0.7420, 0.4365]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2586, 0.5333],
        [0.7735, 0.4903]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2375, 0.5110],
        [0.7057, 0.4139]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2586, 0.5211],
        [0.6903, 0.3912]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2903, 0.5241],
        [0.7026, 0.3727]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.3101, 0.5394],
        [0.7560, 0.4165]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2563, 0.6380],
        [0.7589, 0.4193]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2119, 0.6460],
        [0.7824, 0.4219]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2592, 0.6493],
        [0.7462, 0.4570]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2762, 0.6488],
        [0.7383, 0.4904]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2679, 0.6652],
        [0.7817, 0.5021]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.3055, 0.7179],
        [0.7944, 0.4897]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2782, 0.7723],
        [0.7729, 0.4607]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.2908, 0.7882],
        [0.8198, 0.4737]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.3222, 0.7618],
        [0.8109, 0.4936]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.3282, 0.7486],
        [0.8239, 0.4982]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.3388, 0.7296],
        [0.8487, 0.4410]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.3442, 0.7262],
        [0.7931, 0.4225]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.3489, 0.7415],
        [0.8419, 0.3975]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.4167, 0.7046],
        [0.8688, 0.3909]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.4130, 0.7009],
        [0.8709, 0.3486]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.4236, 0.6820],
        [0.8131, 0.3723]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.4626, 0.6548],
        [0.8374, 0.4287]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.4347, 0.6609],
        [0.8619, 0.4547]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.4357, 0.6348],
        [0.9106, 0.4522]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.4397, 0.6345],
        [0.9084, 0.4781]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.4312, 0.6769],
        [0.8687, 0.4621]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.4381, 0.6627],
        [0.8942, 0.4827]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.4486, 0.6476],
        [0.8808, 0.4820]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.4459, 0.6265],
        [0.8864, 0.4669]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.4373, 0.5740],
        [0.8864, 0.5088]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.4513, 0.5893],
        [0.8662, 0.5109]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.4595, 0.5871],
        [0.8892, 0.4833]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.4765, 0.5723],
        [0.9126, 0.4765]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.4916, 0.5894],
        [0.8803, 0.4709]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.4909, 0.5947],
        [0.8746, 0.4530]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.4593, 0.6106],
        [0.8953, 0.4832]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.4836, 0.6220],
        [0.9043, 0.4805]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.5036, 0.6051],
        [0.9012, 0.4815]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.4898, 0.6231],
        [0.8929, 0.4986]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.5029, 0.6244],
        [0.8944, 0.4979]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.5054, 0.6049],
        [0.8902, 0.4810]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.4996, 0.6086],
        [0.8896, 0.4820]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.5312, 0.5967],
        [0.8875, 0.4766]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.5606, 0.5730],
        [0.8920, 0.4766]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.5344, 0.5770],
        [0.8867, 0.4691]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.5297, 0.5691],
        [0.8664, 0.4715]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.5324, 0.5831],
        [0.8662, 0.4487]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.5408, 0.5747],
        [0.8608, 0.4590]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
tensor([[0.5337, 0.5678],
        [0.8574, 0.4767]], device='cuda:0')
torch.Size([2, 2])
torch.Size([2, 2])
1000it [00:04, 247.77it/s]
tensor([[ 0.9115,  0.3871],
        [ 0.2722, -0.0926]], device='cuda:0')
tensor([[ 0.7278,  0.5394],
        [ 0.7238, -2.1874]], device='cuda:0')
1000it [00:04, 245.96it/s]
tensor([[-0.3218, -0.1009],
        [-0.2375, -1.4091]], device='cuda:0')
tensor([[ 0.3531, -1.9578],
        [ 1.2767,  2.0904]])
tensor([[ 0.1220, -0.5924],
        [ 0.5306,  0.4351]])
1000it [00:04, 245.79it/s]
tensor([[0.9066, 0.3877],
        [0.9810, 0.7878]], device='cuda:0')
tensor([[2.5000, 2.0000],
        [2.5000, 2.0000]], device='cuda:0')
torch.Size([256])
torch.Size([256])
torch.Size([256, 2])
256
torch.Size([256])
1000it [00:04, 229.65it/s]
/tmp/ipykernel_52532/2790516992.py:36: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at ../torch/csrc/utils/tensor_new.cpp:278.)
  o = torch.tensor(self.o[idx], dtype=torch.float32)
tensor([[ 0.0420,  1.1833],
        [-1.6706,  1.0186]])
1000it [00:04, 234.22it/s]
tensor([[ 0.0420,  1.1833],
        [-1.6706,  1.0186]])
tensor([[-0.2506,  0.5043],
        [-0.2802,  0.2235]], device='cuda:0')
  0%|          | 0/100 [00:00<?, ?it/s]
1000it [00:04, 223.90it/s]:00<?, ?it/s]
999it [00:04, 220.27it/s]
tensor([[ 0.0420,  1.1833],
        [-1.6706,  1.0186]])
tensor([[-0.8933,  0.9618],
        [ 0.1354,  0.5040]], device='cuda:0')
tensor([[ 0.0420,  1.1833],
        [-1.6706,  1.0186]])
tensor([[-0.8933,  0.9618],
        [ 0.1354,  0.5040]], device='cuda:0')
0it [00:00, ?it/s]
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7153, -1.0803],
        [-0.0383,  0.4459]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.0510, -1.3419],
        [-0.2736,  0.3590]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5618, -1.3336],
        [-0.5792,  0.3092]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7640, -1.1227],
        [-0.1274,  0.4031]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5877, -1.0337],
        [-0.2474,  0.6126]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3905, -1.1331],
        [-0.0675,  0.8199]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.9275, -1.0166],
        [-0.1056,  0.3066]], device='cuda:0'), pred_original_sample=tensor([[ 1., -1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7593, -1.1547],
        [ 0.2063,  0.5519]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7819, -1.1450],
        [ 0.0974,  0.5572]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8372, -0.8759],
        [ 0.2815,  0.9757]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.9277, -1.0550],
        [ 0.1366,  1.1945]], device='cuda:0'), pred_original_sample=tensor([[ 1., -1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.2986, -0.9804],
        [ 0.4906,  0.7158]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.0507, -0.8475],
        [ 0.5046,  0.5827]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.2587, -0.8660],
        [ 0.4249,  0.5615]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.3851, -1.1409],
        [ 0.3528,  0.5417]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.4608, -1.3224],
        [ 0.3498,  1.0285]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.5191, -1.3178],
        [ 0.3676,  1.2023]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.1509, -1.4525],
        [ 0.2719,  0.8685]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.6404, -1.5012],
        [ 0.0172,  0.8848]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.6327, -1.3162],
        [ 0.1250,  0.5855]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.8701, -1.3320],
        [ 0.2512,  0.1442]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 2.1065, -1.5208],
        [ 0.2804,  0.4858]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 2.0115, -1.2735],
        [ 0.3481,  0.4359]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.6161, -1.3268],
        [ 0.5229,  0.5450]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.7237, -1.4402],
        [ 0.7361,  0.4441]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 2.1130, -1.2152],
        [ 0.6332,  0.0379]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 2.0053, -1.3019],
        [ 0.7617,  0.5011]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 2.0438, -1.1322],
        [ 0.7810,  0.0330]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.9728, -1.0011],
        [ 0.9659,  0.2957]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 2.0465, -1.0709],
        [ 0.9994,  0.5134]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  1.0000],
        [-1.0000,  0.4616]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 2.0735, -1.4306],
        [ 1.0271,  0.7242]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.8761, -1.0451],
        [ 0.9955,  0.7305]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.8680, -0.9857],
        [ 0.9395,  0.5498]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.5701, -1.1470],
        [ 0.7207,  0.4539]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.5730, -1.1487],
        [ 0.5300,  0.5609]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.1769, -1.0356],
        [ 0.3192,  0.8058]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.1226, -1.2124],
        [ 0.5257,  0.9891]], device='cuda:0'), pred_original_sample=tensor([[ 1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.3566, -0.7696],
        [ 0.1980,  1.1345]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.1345, -0.8515],
        [ 0.1467,  0.7931]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.1226, -0.8292],
        [-0.0878,  1.0821]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.9518, -0.8828],
        [-0.1945,  0.9853]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6428, -1.1679],
        [-0.0400,  0.8375]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4877, -0.9296],
        [ 0.0075,  0.8531]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6273, -0.9311],
        [ 0.6227,  0.9351]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8137, -0.5034],
        [ 0.5380,  1.1169]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7732, -0.8860],
        [ 0.3916,  0.9139]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5481, -0.5908],
        [ 0.5425,  1.2488]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6365, -0.9238],
        [ 0.6900,  1.6121]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [ 0.7516,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3634, -0.4167],
        [ 0.3290,  1.8177]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6376, -0.4658],
        [ 0.6697,  1.8528]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.1703],
        [ 1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3453, -0.5474],
        [ 0.6679,  1.6306]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1327, -0.4445],
        [ 0.8007,  1.9543]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5524, -0.4884],
        [ 0.7853,  1.6853]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.2270, 0.0773],
        [0.6718, 1.5373]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0807, -0.0933],
        [ 0.4043,  1.5342]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0088, -0.0420],
        [ 0.5298,  1.6109]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0762, -0.0903],
        [ 0.2383,  1.5905]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5144, -0.5942],
        [-0.0415,  1.8259]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7499, -0.6230],
        [ 0.0852,  2.1506]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7262, -0.7766],
        [-0.2877,  2.6780]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8798, -0.8915],
        [-0.1964,  2.4133]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5157, -0.9576],
        [ 0.0907,  2.4587]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.9464, -0.6148],
        [ 0.2747,  2.3159]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7754, -0.9294],
        [ 0.3654,  2.2732]], device='cuda:0'), pred_original_sample=tensor([[ 1., -1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.0624, -1.3129],
        [ 0.2847,  2.4843]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.1600, -1.0595],
        [ 0.3007,  2.3081]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.1456, -0.9901],
        [ 0.6918,  1.9771]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6995, -1.2186],
        [ 0.6091,  2.0570]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8192, -0.8770],
        [ 0.5375,  1.7790]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.9157, -0.7547],
        [ 0.3702,  1.9592]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7611, -0.7136],
        [ 0.6057,  1.7314]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4129, -1.2787],
        [ 0.1514,  1.5753]], device='cuda:0'), pred_original_sample=tensor([[-0.1147, -1.0000],
        [ 1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1311, -1.0650],
        [-0.0842,  1.6325]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0912, -0.9523],
        [ 0.0681,  1.3845]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2553, -0.5836],
        [ 0.4270,  1.0197]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [ 0.7397,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1239, -0.4180],
        [ 0.0387,  1.4305]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.1494],
        [-0.1309,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1960, -0.6060],
        [-0.0824,  1.3155]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1332, -0.2225],
        [ 0.0552,  1.6609]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2315, -0.4524],
        [ 0.3993,  1.7057]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4699, -0.4907],
        [-0.0518,  1.5255]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [ 0.3090,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4559, -0.2627],
        [ 0.1553,  1.3430]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2281, -0.3797],
        [ 0.0188,  1.3467]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [ 0.9073,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2191, -0.4203],
        [-0.1247,  1.2039]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-0.0362,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4506, -0.1374],
        [ 0.0921,  1.2975]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.8942],
        [ 1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2926, -0.1068],
        [ 0.0845,  1.4845]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.7338],
        [ 0.7200,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2934, -0.2361],
        [-0.2236,  1.5911]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [ 0.0688,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7655, -0.2475],
        [-0.4643,  1.3039]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5561, -0.2107],
        [ 0.0938,  1.3602]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5839, -0.1980],
        [-0.1388,  1.3740]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6781, -0.0155],
        [-0.3273,  1.2469]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.0826, -0.0562],
        [-0.0597,  1.3564]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.1613, -0.3380],
        [-0.1878,  1.6516]], device='cuda:0'), pred_original_sample=tensor([[ 0.6094,  1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.2771,  0.0673],
        [-0.3906,  1.2857]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.3479, -0.4465],
        [-0.2698,  1.0585]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 0.6073],
        [1.0000, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.1535, -0.0459],
        [-0.2587,  1.0316]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.9572, -0.2696],
        [ 0.0841,  1.3883]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.0123, -0.3725],
        [-0.2334,  1.4746]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8300, -0.2953],
        [ 0.0257,  1.3493]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  1.0000],
        [-0.8494,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6161, -0.0993],
        [ 0.1885,  1.5229]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.9950, -0.1644],
        [-0.3591,  1.4283]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6141, -0.4466],
        [ 0.0817,  1.6386]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8084, -0.3050],
        [-0.1081,  1.6600]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [ 0.9759,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7664, -0.2152],
        [-0.2313,  1.7746]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6778, -0.3388],
        [-0.2407,  1.7272]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-0.5911,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4383, -0.3394],
        [-0.1032,  1.7832]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6925, -0.5482],
        [-0.0300,  1.5516]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-0.3115,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4350, -0.6160],
        [ 0.0398,  1.6580]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [ 0.0592,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7748, -0.6269],
        [-0.1385,  1.4780]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7566, -0.3791],
        [ 0.0726,  1.5552]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-0.1602,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6234, -0.5821],
        [ 0.3715,  1.3319]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4574, -0.5219],
        [ 0.4181,  1.3634]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3527, -1.0012],
        [ 0.0727,  1.5515]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.6093],
        [ 1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1586, -0.6252],
        [ 0.0511,  1.7048]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3821, -0.9403],
        [-0.0532,  1.6479]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [ 0.5249,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1553, -0.7408],
        [ 0.2081,  1.4474]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1657, -1.1358],
        [-0.1564,  1.4230]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3146, -0.6792],
        [-0.0796,  1.1443]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6237, -1.2045],
        [ 0.0526,  1.2315]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1610, -0.9881],
        [-0.3496,  1.5233]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3439, -0.9136],
        [ 0.1513,  1.4149]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3594, -0.8629],
        [-0.2015,  1.4156]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5307, -0.4883],
        [-0.4452,  1.5141]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5000, -0.3991],
        [-0.2461,  1.1699]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2832, -0.4899],
        [-0.8007,  1.4059]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1669, -0.0497],
        [-0.8755,  1.2381]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0444, -0.1177],
        [-0.4325,  1.2755]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1938, -0.3104],
        [-0.3050,  1.1815]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1916,  0.0926],
        [-0.7575,  1.2418]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0613, -0.2220],
        [-0.8426,  0.9662]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1528, -0.3434],
        [-0.7408,  1.0382]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0368, -0.5583],
        [-0.8804,  0.8800]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2359, -0.7575],
        [-0.8592,  1.0776]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2474, -0.8049],
        [-1.0755,  1.0400]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2641, -0.6257],
        [-1.3457,  1.1263]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1154, -0.3227],
        [-1.0592,  1.2439]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.2923],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1288, -0.3013],
        [-1.2605,  1.3035]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8191, -0.0873],
        [-1.0891,  1.1109]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2573, -0.3179],
        [-1.3041,  1.2230]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5378, -0.2922],
        [-1.3760,  0.9552]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.2125],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3664, -0.0197],
        [-0.9985,  1.2760]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4989, -0.0020],
        [-1.0097,  1.2833]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2474, -0.1994],
        [-0.9905,  1.2137]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.6968],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4129, -0.4315],
        [-0.6532,  0.9413]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5601, -0.7248],
        [-1.0805,  0.6673]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4642, -0.5949],
        [-0.6375,  0.5472]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1773, -0.9465],
        [-0.8593,  0.4991]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2196, -0.5578],
        [-0.8464,  0.1890]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.7538],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0483, -0.4551],
        [-0.1758,  0.2021]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.3622],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0737, -0.5301],
        [-0.3259,  0.3272]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.2209],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1183, -0.5507],
        [-0.2815,  0.3444]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.6331],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1277, -0.4026],
        [-0.0492,  0.0414]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5192, -0.1915],
        [-0.4162, -0.0910]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0062, -0.5277],
        [-0.0754, -0.5140]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0348, -0.1934],
        [-0.2442, -0.3104]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-1.0000,  0.2815]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0425, -0.2709],
        [-0.0707, -0.6726]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0687,  0.0216],
        [-0.0084, -0.4960]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2727,  0.0301],
        [-0.1639, -0.6071]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0994,  0.0467],
        [-0.3517, -0.6395]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-1.0000,  0.2792]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0091,  0.0367],
        [-0.6729, -0.6260]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1514,  0.3147],
        [-0.7070, -0.5139]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1894,  0.0558],
        [-0.7940, -0.2611]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3284,  0.2629],
        [-0.9644, -0.4662]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3024,  0.1243],
        [-0.8556,  0.1953]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5701,  0.2469],
        [-0.5453, -0.2943]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4334,  0.5118],
        [-0.7265, -0.2974]], device='cuda:0'), pred_original_sample=tensor([[-0.2696,  1.0000],
        [-1.0000, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4604,  0.0638],
        [-0.6888, -0.3406]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4607,  0.0861],
        [-0.5990, -0.5533]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1221,  0.2328],
        [-0.6477, -0.7770]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1852,  0.3952],
        [-0.7147, -0.5696]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3167,  0.4863],
        [-0.8075, -0.4589]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3093,  0.4628],
        [-0.7167, -0.7713]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2415,  0.4256],
        [-0.9346, -0.7118]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-1.0000,  0.8688]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5451,  0.0265],
        [-0.8592, -0.5514]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3611,  0.1120],
        [-0.9140, -0.6394]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1412,  0.3120],
        [-0.7895, -0.5701]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1960,  0.3071],
        [-1.1917, -1.1963]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0476,  0.1481],
        [-0.9470, -0.9070]], device='cuda:0'), pred_original_sample=tensor([[-0.9214,  1.0000],
        [-1.0000, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2961,  0.2065],
        [-1.1763, -1.3017]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-1.0000,  0.7244]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0779,  0.3034],
        [-1.4677, -1.0801]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0453,  0.3274],
        [-1.4681, -0.9581]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1576,  0.0959],
        [-1.2717, -0.7728]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0149,  0.4601],
        [-1.3131, -0.5050]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0303,  0.5983],
        [-1.2488, -0.8525]], device='cuda:0'), pred_original_sample=tensor([[-0.1635,  1.0000],
        [-1.0000, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0055,  0.8997],
        [-1.1978, -0.6731]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3579,  0.7306],
        [-1.6208, -0.4516]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2588,  0.7301],
        [-1.2861, -0.4795]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  1.0000],
        [-1.0000,  0.7849]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3161,  0.6147],
        [-1.2125, -0.4911]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1806,  0.6208],
        [-0.9051, -0.7278]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2508,  0.7922],
        [-1.1779, -0.4778]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4193,  0.6023],
        [-1.3132, -0.3703]], device='cuda:0'), pred_original_sample=tensor([[ 0.3260,  1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0907,  0.3433],
        [-1.2573, -0.5210]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1176,  0.4227],
        [-1.3574, -0.4356]], device='cuda:0'), pred_original_sample=tensor([[-0.2567,  1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1079,  0.6569],
        [-1.1229, -0.7772]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-1.0000,  0.0939]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0364,  0.4794],
        [-1.0045, -0.4760]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2613,  0.3205],
        [-1.1881, -0.3386]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1685,  0.1896],
        [-0.9694, -0.4058]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4784, -0.0858],
        [-0.8461, -0.4079]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.9727],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5837, -0.2330],
        [-0.8514, -0.9834]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.6130],
        [-1.0000, -0.6003]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4984,  0.1098],
        [-0.9863, -0.7961]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.7603],
        [-1.0000, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6717, -0.3716],
        [-0.9880, -0.8296]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5382, -0.2426],
        [-1.2065, -0.8184]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3360, -0.4316],
        [-1.1382, -0.6930]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4677, -0.1477],
        [-1.0640, -0.5575]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2807, -0.3153],
        [-1.2075, -0.6868]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3647, -0.3498],
        [-1.0974, -0.2478]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2300, -0.2764],
        [-1.1822, -0.5530]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4236, -0.2515],
        [-1.1919, -0.3348]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4439, -0.2717],
        [-1.1876, -0.3706]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.3732]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3382, -0.0781],
        [-0.8753, -0.6730]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3951, -0.4783],
        [-1.0674, -0.6294]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3454, -0.4064],
        [-0.7642, -0.3115]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6275, -0.3966],
        [-0.5057, -0.6467]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3262, -0.4010],
        [-0.8861, -1.0264]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3382, -0.8425],
        [-0.6803, -0.6462]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4286, -0.7906],
        [-0.8386, -0.7684]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6092, -0.8051],
        [-0.7873, -0.8232]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-1.0000,  0.8736]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3872, -0.3421],
        [-0.9328, -0.7126]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.7011],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.9203, -0.3846],
        [-1.0227, -0.7804]], device='cuda:0'), pred_original_sample=tensor([[ 0.6391,  1.0000],
        [-1.0000, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8357, -0.4180],
        [-1.1899, -0.8759]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8951, -0.6364],
        [-1.0349, -0.7751]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8427, -0.5972],
        [-1.0096, -0.5899]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.9750, -0.4855],
        [-0.8495, -0.5172]], device='cuda:0'), pred_original_sample=tensor([[ 0.4774,  0.4229],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.0157, -0.4251],
        [-0.8184, -0.6353]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000, -0.7652],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.3345, -0.5216],
        [-0.7739, -0.3136]], device='cuda:0'), pred_original_sample=tensor([[ 0.4490,  1.0000],
        [-1.0000,  0.3224]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.3593, -0.4888],
        [-0.4770, -0.4348]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.6868, -0.4759],
        [-0.8554, -0.3086]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-1.0000, -0.4562]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.2726, -0.5147],
        [-0.9611, -0.3758]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.5193, -0.7099],
        [-0.8191, -0.2544]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-1.0000,  0.8557]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.3493, -0.9648],
        [-0.6885, -0.3536]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.0912, -0.5893],
        [-0.8309, -0.3925]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8434, -0.9116],
        [-1.1539, -0.4695]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.2552, -0.7458],
        [-0.7970, -0.2036]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.2510, -0.8587],
        [-0.8229, -0.5486]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.2965, -0.7850],
        [-0.8981, -0.4756]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.3448, -0.4195],
        [-1.0933, -0.3254]], device='cuda:0'), pred_original_sample=tensor([[-0.3894,  1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.0450, -0.9498],
        [-1.3175, -0.1826]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.0146, -0.9620],
        [-1.0463,  0.0179]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6619, -0.9168],
        [-1.1968, -0.0599]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.0244, -0.9397],
        [-1.2447,  0.1658]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.0000, -0.9870],
        [-1.3429,  0.4227]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8404, -1.2352],
        [-1.0135,  0.3511]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.0330, -1.1776],
        [-1.3025,  0.1009]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  1.0000],
        [-1.0000,  0.2416]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8215, -1.1338],
        [-0.9836,  0.1488]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  0.6707],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7202, -1.2012],
        [-1.2523,  0.5817]], device='cuda:0'), pred_original_sample=tensor([[-0.1673, -0.9843],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5899, -1.3537],
        [-1.3387,  0.7349]], device='cuda:0'), pred_original_sample=tensor([[-0.4700,  1.0000],
        [-1.0000,  0.7349]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7985, -1.3446],
        [-0.9103,  0.8353]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8171, -1.4827],
        [-1.1309,  0.8358]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8906, -1.5009],
        [-1.3311,  1.2084]], device='cuda:0'), pred_original_sample=tensor([[-0.5966,  1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5228, -1.2390],
        [-1.2751,  0.9230]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.8710],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5814, -1.2701],
        [-1.6426,  0.9285]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6483, -1.4072],
        [-1.6184,  0.7175]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.9983],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3377, -1.2929],
        [-1.4325,  1.1689]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3434, -1.2502],
        [-1.3487,  0.9214]], device='cuda:0'), pred_original_sample=tensor([[ 0.1550, -1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1316, -1.3052],
        [-1.5248,  0.8926]], device='cuda:0'), pred_original_sample=tensor([[-0.1959, -0.8207],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4573, -0.9879],
        [-1.4622,  0.6698]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5201, -1.0175],
        [-1.3702,  0.9883]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3674, -0.9423],
        [-1.1058,  1.2891]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3830, -0.7858],
        [-1.3899,  1.2945]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4228, -0.7809],
        [-1.2872,  1.3769]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.9385],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3651, -0.8351],
        [-1.7270,  1.5195]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3958, -0.8620],
        [-1.6429,  1.1674]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4480, -1.3046],
        [-1.8870,  1.2532]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.0105],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5559, -1.0970],
        [-1.6202,  1.5175]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.1571],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6830, -0.7895],
        [-1.8208,  1.1800]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.6405],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7618, -1.2294],
        [-1.4337,  1.1755]], device='cuda:0'), pred_original_sample=tensor([[ 0.2188, -0.4542],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4231, -1.1120],
        [-1.5638,  1.1286]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6492, -1.0550],
        [-1.4517,  0.9902]], device='cuda:0'), pred_original_sample=tensor([[-0.5516, -1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5062, -0.8897],
        [-1.9046,  0.8220]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7083, -0.8597],
        [-1.8962,  1.0946]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4730, -1.0331],
        [-1.7345,  1.1993]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.6568],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1093, -1.2743],
        [-1.8062,  1.0353]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.7564],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0769, -1.2842],
        [-1.9026,  0.6836]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.3688],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3171, -1.3786],
        [-2.1584,  0.8449]], device='cuda:0'), pred_original_sample=tensor([[ 1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3772, -1.3971],
        [-1.9828,  0.6087]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1504, -1.4397],
        [-1.5372,  0.6936]], device='cuda:0'), pred_original_sample=tensor([[-0.3297, -1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0439, -1.3026],
        [-1.6245,  0.6529]], device='cuda:0'), pred_original_sample=tensor([[-0.1825, -1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0812, -1.5690],
        [-1.4861,  0.6040]], device='cuda:0'), pred_original_sample=tensor([[ 0.2834, -1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1851, -1.4805],
        [-1.3298,  0.5923]], device='cuda:0'), pred_original_sample=tensor([[-0.0110, -1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0655, -1.4881],
        [-1.5954,  0.7612]], device='cuda:0'), pred_original_sample=tensor([[ 0.7078, -1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0997, -1.7047],
        [-1.3570,  0.8460]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1466, -1.7047],
        [-1.4708,  0.7672]], device='cuda:0'), pred_original_sample=tensor([[ 1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2650, -1.4743],
        [-1.5895,  0.7609]], device='cuda:0'), pred_original_sample=tensor([[ 0.5690, -1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1904, -1.8857],
        [-1.3557,  0.8255]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0435, -1.6859],
        [-1.3827,  1.0634]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2635, -1.6527],
        [-1.7413,  0.9956]], device='cuda:0'), pred_original_sample=tensor([[ 1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1372, -1.9286],
        [-1.4555,  0.8273]], device='cuda:0'), pred_original_sample=tensor([[ 1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0335, -1.4254],
        [-1.4414,  0.9603]], device='cuda:0'), pred_original_sample=tensor([[-0.8324, -1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3725, -1.5626],
        [-1.3568,  0.7596]], device='cuda:0'), pred_original_sample=tensor([[-0.3432, -1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3454, -1.1792],
        [-1.3217,  0.8707]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.4240],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2987, -1.1381],
        [-1.4847,  0.8479]], device='cuda:0'), pred_original_sample=tensor([[-0.7265, -0.1424],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0085, -1.3460],
        [-1.1827,  0.7772]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.1616],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0272, -1.2771],
        [-1.4323,  0.4625]], device='cuda:0'), pred_original_sample=tensor([[-0.6875, -0.1567],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0188, -1.3661],
        [-1.3882,  0.7845]], device='cuda:0'), pred_original_sample=tensor([[-0.6998, -0.9241],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2410, -1.3158],
        [-1.2626,  0.9920]], device='cuda:0'), pred_original_sample=tensor([[-0.5569, -0.6628],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2866, -1.5118],
        [-1.1351,  0.9823]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0026, -1.5914],
        [-1.0517,  0.8296]], device='cuda:0'), pred_original_sample=tensor([[ 0.8968, -1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0136, -1.5267],
        [-1.0581,  0.7815]], device='cuda:0'), pred_original_sample=tensor([[-0.2516, -1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1100, -1.3602],
        [-1.1601,  0.7250]], device='cuda:0'), pred_original_sample=tensor([[-0.1210, -1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1946, -1.2628],
        [-1.1329,  0.8802]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0114, -1.4279],
        [-1.3485,  0.6835]], device='cuda:0'), pred_original_sample=tensor([[-0.5498, -0.6398],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0057, -1.2803],
        [-0.8810,  0.7991]], device='cuda:0'), pred_original_sample=tensor([[-0.3896, -0.0754],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0908, -1.2765],
        [-1.2238,  0.6585]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.1889],
        [-1.0000,  0.6458]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1905, -1.2800],
        [-0.6112,  0.7354]], device='cuda:0'), pred_original_sample=tensor([[ 0.9938,  0.6934],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0057, -1.4520],
        [-1.0317,  0.9239]], device='cuda:0'), pred_original_sample=tensor([[-0.1430, -0.6493],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1958, -1.4457],
        [-0.6271,  1.0434]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.5889],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4549, -1.2700],
        [-0.4171,  0.8743]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-0.4760,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3377, -1.4750],
        [-0.3895,  0.9422]], device='cuda:0'), pred_original_sample=tensor([[-0.1790, -1.0000],
        [-0.3926,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2881, -1.5103],
        [-0.2266,  1.0294]], device='cuda:0'), pred_original_sample=tensor([[-0.9209, -0.7554],
        [-0.5677,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2834, -1.2246],
        [-0.2620,  0.8414]], device='cuda:0'), pred_original_sample=tensor([[-0.5212, -0.5782],
        [-0.8047,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3062, -1.2308],
        [-0.3500,  0.9548]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.1719],
        [-0.5554,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1344, -1.1537],
        [-0.3687,  1.1174]], device='cuda:0'), pred_original_sample=tensor([[ 0.6794, -1.0000],
        [ 0.4253,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1294, -1.6415],
        [-0.1650,  1.1035]], device='cuda:0'), pred_original_sample=tensor([[ 0.3508, -1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2953, -1.6206],
        [-0.1535,  1.2507]], device='cuda:0'), pred_original_sample=tensor([[-0.1878, -1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2520, -1.5476],
        [-0.0490,  0.8769]], device='cuda:0'), pred_original_sample=tensor([[-0.6963, -1.0000],
        [-0.2722,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2721, -1.6687],
        [-0.0782,  1.2292]], device='cuda:0'), pred_original_sample=tensor([[ 0.9641, -1.0000],
        [-0.4931,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2488, -1.7663],
        [ 0.1032,  0.9025]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [ 0.0136,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0655, -1.3783],
        [-0.4990,  0.8687]], device='cuda:0'), pred_original_sample=tensor([[-0.0969, -1.0000],
        [-0.3953,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2760, -1.3594],
        [-0.5577,  0.9637]], device='cuda:0'), pred_original_sample=tensor([[-0.8801, -1.0000],
        [ 0.4209,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0998, -1.6754],
        [-0.4252,  1.0481]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [ 0.1950,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0872, -1.2443],
        [-0.0560,  0.9410]], device='cuda:0'), pred_original_sample=tensor([[ 0.1640, -1.0000],
        [-0.5114,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3315, -1.3663],
        [-0.2689,  1.0565]], device='cuda:0'), pred_original_sample=tensor([[ 0.8671, -1.0000],
        [-0.4446,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3289, -1.3623],
        [-0.5100,  0.9270]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.6733],
        [-0.8475,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3287, -1.2564],
        [-0.5839,  0.6511]], device='cuda:0'), pred_original_sample=tensor([[-0.1374, -0.7420],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0817, -1.2131],
        [-0.6840,  0.8656]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.7602],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0568, -1.0920],
        [-0.6505,  0.6984]], device='cuda:0'), pred_original_sample=tensor([[ 0.8517,  0.5728],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1042, -1.1659],
        [-0.4866,  0.2340]], device='cuda:0'), pred_original_sample=tensor([[ 0.3146,  0.6586],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6537, -1.3199],
        [-0.5710,  0.5840]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.1107],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4178, -1.0834],
        [-0.5792,  0.6802]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.9615],
        [-0.7671,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6180, -1.2189],
        [-0.3855,  0.6500]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-0.2135,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8779, -1.2443],
        [-0.4071,  0.5867]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [ 0.1509,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.0506, -1.1749],
        [-0.0054,  0.6015]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.7525],
        [ 1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.3698, -1.0447],
        [-0.2921,  0.3872]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9605, -1.0444],
        [-0.0142,  0.5966]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [ 0.5548,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9887, -1.2214],
        [-0.1445,  0.5972]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [ 0.5925,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9976, -1.0245],
        [-0.1169,  0.9815]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.7009],
        [-0.4586,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8847, -1.0799],
        [-0.4034,  0.9015]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.5187],
        [-0.5070,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7924, -1.1377],
        [-0.5538,  0.7581]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-0.3822,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8315, -1.1638],
        [-0.2123,  0.6019]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [ 0.9641,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8488, -1.1125],
        [-0.4128,  0.3102]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-0.4039,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7135, -0.6685],
        [-0.2905,  0.4863]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-0.7746,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2870, -0.5859],
        [-0.2703,  0.3810]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.4378],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4352, -0.7487],
        [-0.3798,  0.0903]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.6108],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4497, -0.6557],
        [-0.1847,  0.1119]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.9671],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9346, -0.9168],
        [-0.4423, -0.0637]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.0763],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4466, -1.0242],
        [-0.4332,  0.1473]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.6226],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6248, -1.0723],
        [-0.7379,  0.0654]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.8609],
        [-1.0000,  0.2358]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7824, -1.0107],
        [-0.8883,  0.0775]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7827, -1.0440],
        [-0.6819,  0.1061]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.8168],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4688, -0.7577],
        [-0.5166,  0.3091]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.8881],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5869, -0.6911],
        [-0.4191,  0.0710]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.6061]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8594, -0.4474],
        [-0.6866,  0.2447]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8032, -0.6998],
        [-0.5114,  0.3001]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.1330],
        [-1.0000, -0.2574]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7214, -0.8704],
        [-0.4362,  0.2973]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.7703],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9608, -0.9091],
        [-0.3323,  0.1776]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-0.9933,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.0308, -0.9086],
        [-0.2540,  0.2504]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.1483],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9978, -0.8961],
        [-0.3955,  0.4662]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.7820],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8179, -0.7240],
        [-0.5048,  0.3646]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.0246],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.2426, -1.0100],
        [-0.5848,  0.3902]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.2850, -1.1170],
        [-0.5572,  0.4210]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000, -0.0921]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8511, -1.0317],
        [-0.4891,  0.3822]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.1624, -1.1033],
        [-0.8901,  0.7468]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.1123],
        [-0.3417,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.1284, -0.9871],
        [-1.0061,  0.4638]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.2740, -0.9189],
        [-0.7603,  0.3261]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.4640]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.4246, -1.1945],
        [-0.9986,  0.5211]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.7062]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.3953, -0.8667],
        [-1.3901,  0.4317]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.9569],
        [-1.0000,  0.5785]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.2517, -0.8271],
        [-1.2607,  0.2587]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.6723],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.4111, -1.0846],
        [-1.2546,  0.6436]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.2056, -1.4693],
        [-1.3604,  0.4014]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.1720],
        [-1.0000,  0.9379]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9827, -1.2658],
        [-1.0459,  0.3510]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.1392],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7299, -1.2622],
        [-1.2003,  0.0080]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.8392]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.0196, -1.5414],
        [-1.3336,  0.2573]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.4842],
        [-1.0000,  0.6939]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9394, -1.5341],
        [-0.9472,  0.4515]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-1.0000,  0.8617]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.1474, -1.6180],
        [-1.1833,  0.5067]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.1780]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.0313, -1.7651],
        [-1.0655,  0.2727]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.8910],
        [-1.0000,  0.6709]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.2673, -1.4100],
        [-1.0562,  0.1367]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.1824, -1.3810],
        [-1.3013,  0.5440]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.1514],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.2787, -1.5018],
        [-1.0560,  0.3910]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.7390],
        [-1.0000,  0.9990]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.5418, -1.1109],
        [-1.2278,  0.2637]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.9195]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.5156, -1.1411],
        [-1.2569,  0.2341]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.8941]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.3722, -1.1156],
        [-1.0639,  0.4858]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.3981, -0.9727],
        [-1.1792,  0.4814]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.6015, -0.8538],
        [-1.5219,  0.4754]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.5612]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.5296, -0.7693],
        [-1.5279,  0.5227]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.2648, -0.9614],
        [-1.2988,  0.5048]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.3372, -0.7673],
        [-1.2494,  0.5322]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.3351, -0.6121],
        [-1.3136,  0.5468]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.3208, -0.7603],
        [-1.2264,  0.3946]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.5168, -1.0645],
        [-1.3520,  0.4992]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.3614, -1.0076],
        [-1.1491,  0.2440]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.6831],
        [-1.0000,  0.4830]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.2364, -0.8506],
        [-1.2026,  0.6434]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.2694, -1.1057],
        [-1.1974,  0.4706]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.8734]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.1734, -1.0795],
        [-1.1241,  0.4032]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.8103]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.3105, -1.1156],
        [-1.2239,  0.3366]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.5173]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8644, -0.9535],
        [-1.0528,  0.4121]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.6650],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9434, -1.0288],
        [-1.0425,  0.3321]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.6336],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.3521, -0.9759],
        [-1.1031,  0.4050]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.7225],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.4187, -0.9492],
        [-1.0926,  0.5384]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.7719],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9938, -1.0471],
        [-0.9602,  0.5243]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.2758, -1.1318],
        [-1.0304,  0.3285]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.1728]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.4248, -1.1014],
        [-1.4211,  0.1610]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.4599],
        [-1.0000,  0.7601]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.3293, -1.0061],
        [-1.5272,  0.1788]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.5176],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.4439, -0.9591],
        [-1.1721,  0.2477]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.3961],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.3156, -1.0139],
        [-1.0216, -0.0594]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.9191],
        [-1.0000,  0.1411]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.3505, -0.9977],
        [-1.0747,  0.1856]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.5662],
        [-1.0000,  0.4218]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.1884, -1.1168],
        [-1.2426,  0.1694]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.8644]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.6160, -1.0234],
        [-1.1974, -0.0087]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.9106],
        [-1.0000,  0.9870]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.3720, -0.7460],
        [-1.0857,  0.1951]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.9599],
        [-1.0000,  0.2213]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.3903, -0.7860],
        [-1.1036,  0.2411]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.2835]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.5207, -0.6600],
        [-1.1027,  0.1327]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.4922],
        [-1.0000,  0.2580]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.6037, -0.7562],
        [-1.0372,  0.3750]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.2573]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.5136, -1.1003],
        [-1.0321,  0.1946]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.4695, -0.6794],
        [-0.8419,  0.0506]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.7862]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.4136, -0.8306],
        [-0.8736, -0.1473]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.9829],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.4270, -0.7685],
        [-0.9039, -0.0709]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.5033, -0.9073],
        [-0.7808, -0.0064]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.8109],
        [-1.0000, -0.2078]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.7740, -0.8494],
        [-0.5856,  0.1852]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.9228]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.8541, -1.0453],
        [-0.7871, -0.1245]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.7970]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.6802, -0.9211],
        [-0.7482,  0.0327]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.7834]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.4138, -0.8986],
        [-0.5830,  0.3035]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.3639],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.5131, -1.0709],
        [-0.8076,  0.1008]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.5258, -1.2072],
        [-1.1105,  0.1045]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.4728, -1.2388],
        [-1.0441, -0.1124]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.4879, -1.1253],
        [-1.0694, -0.3119]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.7028, -1.2961],
        [-1.2480, -0.2070]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.9410]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.6980, -1.1284],
        [-1.3980, -0.3599]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.8178],
        [-1.0000,  0.8058]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.5431, -1.0566],
        [-0.9833, -0.3484]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.9693],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.4019, -1.0930],
        [-1.0174, -0.2391]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.0389],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.3736, -0.8546],
        [-1.1419, -0.0769]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.5547],
        [-1.0000,  0.8200]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.5797, -0.7869],
        [-1.2389, -0.3044]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.9388],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.3424, -0.8265],
        [-1.1900, -0.1788]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.5083],
        [-1.0000,  0.6860]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.3416, -0.7538],
        [-1.3360, -0.1412]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.4164],
        [-1.0000, -0.0178]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.1368, -0.8545],
        [-1.5940,  0.0058]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.5848],
        [-1.0000,  0.1023]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.2314, -0.8576],
        [-1.1773, -0.3967]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.1182],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.4311, -0.5342],
        [-1.4078, -0.2693]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.1824, -0.9231],
        [-1.4299, -0.3448]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.6950],
        [-1.0000,  0.4752]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.3984, -0.9521],
        [-1.1158, -0.2173]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.8382],
        [-1.0000,  0.9014]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.6966, -0.8088],
        [-1.2072, -0.0887]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.3509],
        [-1.0000,  0.5541]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.7259, -1.1540],
        [-0.9889,  0.0912]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.5571]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.5997, -1.2152],
        [-1.1916,  0.0897]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.4914],
        [-1.0000,  0.5579]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.3206, -1.0812],
        [-1.0535,  0.2106]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.9760],
        [-1.0000,  0.1325]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.6158, -1.1250],
        [-0.9350,  0.4244]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.4040]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.6510, -1.3852],
        [-1.1147,  0.5360]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.2670]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.5976, -1.4098],
        [-1.1792,  0.3852]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.7646]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.5664, -1.1523],
        [-1.3585,  0.4388]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.6310]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.5688, -1.3049],
        [-1.2441,  0.3449]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.5122]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.6589, -1.0156],
        [-1.0950,  0.4274]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.7950],
        [-1.0000,  0.8460]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.2502, -1.1741],
        [-1.3647,  0.5064]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.8802],
        [-1.0000,  0.9439]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.2866, -1.0723],
        [-1.2238,  0.3108]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.2968],
        [-1.0000,  0.6608]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.4271, -1.0330],
        [-1.3312,  0.3871]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.1884],
        [-1.0000,  0.9319]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.3654, -0.9351],
        [-1.4209,  0.4686]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.8075],
        [-1.0000,  0.5108]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.4979, -0.8050],
        [-1.5072,  0.2226]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.6389]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.5238, -0.9619],
        [-1.4983,  0.3459]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.5860]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.3696, -0.9271],
        [-1.4580,  0.2663]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.0184],
        [-1.0000,  0.7723]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.1502, -0.9384],
        [-1.5639,  0.1552]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.3013],
        [-1.0000,  0.6602]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.1071, -0.5746],
        [-1.5388,  0.4481]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.7902],
        [-1.0000,  0.6059]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.2994, -0.7058],
        [-1.2647,  0.5236]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.6153],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.7306, -0.5596],
        [-1.1860,  0.3874]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.8322],
        [-1.0000,  0.5569]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.3947, -0.7002],
        [-1.1359,  0.5619]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.9029],
        [-1.0000,  0.5921]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.0857, -0.7526],
        [-1.0840,  0.4322]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.2557],
        [-1.0000,  0.0721]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.5165, -0.6371],
        [-1.0732,  0.1622]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.4896],
        [-1.0000,  0.3086]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.2585, -0.6827],
        [-1.0335, -0.1829]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.2703],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.0539, -0.4995],
        [-1.3251,  0.1008]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.4333],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.1799, -0.6988],
        [-1.3540, -0.2374]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.6873],
        [-1.0000,  0.5328]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9614, -0.3987],
        [-1.7876, -0.2422]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.1397],
        [-1.0000, -0.1095]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9077, -0.5266],
        [-1.5674, -0.3435]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.8037],
        [-1.0000, -0.1218]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8732, -0.5780],
        [-1.5385, -0.3741]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.0785],
        [-1.0000,  0.2386]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8181, -0.8405],
        [-1.9198, -0.5042]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.0417],
        [-1.0000, -0.3732]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6958, -0.5288],
        [-1.7715, -0.1233]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.0550],
        [-1.0000, -0.0027]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8223, -0.7451],
        [-2.0196, -0.1235]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.4204],
        [-1.0000, -0.4531]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7444, -0.6817],
        [-1.7876, -0.2442]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.4475],
        [-1.0000, -0.3943]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8066, -0.4165],
        [-1.7934, -0.4466]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.9118],
        [-1.0000,  0.3400]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7123, -0.4529],
        [-1.7527, -0.3825]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.7155],
        [-1.0000,  0.3447]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4914, -0.5251],
        [-1.6950, -0.6322]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.5088],
        [-1.0000, -0.3138]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8622, -0.5695],
        [-2.0908, -0.5650]], device='cuda:0'), pred_original_sample=tensor([[-0.3866,  0.8601],
        [-1.0000, -0.3977]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5881, -0.4644],
        [-1.8355, -0.6364]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.4831],
        [-1.0000,  0.1850]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5222, -0.3326],
        [-1.7098, -0.9671]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.5409],
        [-1.0000, -0.2518]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5246, -0.3742],
        [-1.8203, -1.0350]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.4348],
        [-1.0000, -0.4198]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1529, -0.2273],
        [-1.6214, -0.9600]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.5192],
        [-1.0000, -0.9880]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5022, -0.1423],
        [-1.7716, -1.0876]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.6150],
        [-1.0000, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1724, -0.1175],
        [-1.5692, -1.1797]], device='cuda:0'), pred_original_sample=tensor([[-0.9802,  0.6366],
        [-1.0000, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2527, -0.1706],
        [-1.9302, -1.1568]], device='cuda:0'), pred_original_sample=tensor([[-0.8182,  0.4200],
        [-1.0000, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1536, -0.2214],
        [-1.6886, -1.0325]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.2246],
        [-1.0000, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1548, -0.5681],
        [-1.7178, -1.1913]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.5129],
        [-1.0000, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2802, -0.5329],
        [-1.6945, -1.1266]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.2968],
        [-1.0000, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4138, -0.2391],
        [-1.7590, -1.1685]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.0893],
        [-1.0000, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4121, -0.3556],
        [-2.1368, -0.8709]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.0173],
        [-1.0000, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3568,  0.0963],
        [-2.2670, -0.8035]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.5752],
        [-1.0000, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6005, -0.2398],
        [-2.3402, -1.2448]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.1253],
        [-1.0000, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4681, -0.1419],
        [-2.1950, -1.0118]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.1768],
        [-1.0000, -0.8112]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4166, -0.2397],
        [-2.2147, -1.0671]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.6772],
        [-1.0000, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3736, -0.1682],
        [-1.9584, -0.9860]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.7216],
        [-1.0000, -0.8933]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3015, -0.1300],
        [-1.9466, -0.8437]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.6916],
        [-1.0000,  0.0630]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2251, -0.0899],
        [-1.7013, -0.5930]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.7832],
        [-1.0000, -0.0032]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0128, -0.0575],
        [-1.8882, -0.8995]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.4632],
        [-1.0000,  0.2513]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2251, -0.1865],
        [-1.8375, -0.6109]], device='cuda:0'), pred_original_sample=tensor([[-0.8730,  0.4226],
        [-1.0000,  0.0887]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1661, -0.4887],
        [-1.9782, -0.6160]], device='cuda:0'), pred_original_sample=tensor([[-0.2871,  1.0000],
        [-1.0000, -0.0516]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3110, -0.2713],
        [-1.9650, -0.5088]], device='cuda:0'), pred_original_sample=tensor([[-0.9764,  0.4464],
        [-1.0000, -0.0768]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3883, -0.1099],
        [-2.0580, -0.5739]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.5905],
        [-1.0000, -0.3470]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2040, -0.2385],
        [-2.1582, -0.6086]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.2831],
        [-1.0000, -0.6921]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4830, -0.1483],
        [-2.3655, -0.6339]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.3816],
        [-1.0000, -0.4391]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1494, -0.1127],
        [-2.0850, -0.7664]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.2361],
        [-1.0000, -0.6749]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4776,  0.1137],
        [-2.1473, -0.5792]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.4347],
        [-1.0000, -0.2883]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5337, -0.0923],
        [-2.0410, -0.7368]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.9974],
        [-1.0000, -0.6816]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5841, -0.1614],
        [-1.7830, -0.6119]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.9378],
        [-1.0000,  0.0236]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4463, -0.2017],
        [-1.7858, -0.6088]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.6399],
        [-1.0000, -0.2401]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4765, -0.3568],
        [-1.7289, -0.5575]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.0953],
        [-1.0000, -0.0177]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2821, -0.3484],
        [-1.7777, -0.6295]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.1808],
        [-1.0000, -0.2218]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1581, -0.1726],
        [-1.9762, -0.3647]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.3505],
        [-1.0000, -0.2363]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5042, -0.3164],
        [-1.7676, -0.5096]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.1478],
        [-1.0000, -0.7354]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1955, -0.3012],
        [-2.0976, -0.5039]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.7592],
        [-1.0000, -0.0388]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4333,  0.0123],
        [-2.0576, -0.6153]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.6683],
        [-1.0000, -0.0548]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6557, -0.0512],
        [-1.7072, -0.7877]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.2826],
        [-1.0000,  0.2024]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4601, -0.0133],
        [-1.9013, -0.6002]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.1993],
        [-1.0000, -0.2087]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6098,  0.0559],
        [-1.9904, -0.5927]], device='cuda:0'), pred_original_sample=tensor([[-0.6590,  0.0062],
        [-1.0000, -0.0146]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4012,  0.0161],
        [-1.7566, -0.1011]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.4728],
        [-1.0000, -0.1521]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8148, -0.0226],
        [-1.8199, -0.3168]], device='cuda:0'), pred_original_sample=tensor([[-0.9129,  0.3479],
        [-1.0000,  0.1675]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8620, -0.0850],
        [-1.8538, -0.3180]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.7480],
        [-1.0000,  0.1118]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8906, -0.3753],
        [-1.7160, -0.1353]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.0259],
        [-1.0000, -0.1809]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.0622,  0.1313],
        [-1.8104, -0.3393]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-1.0000, -0.2796]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9781,  0.1330],
        [-1.8064, -0.0743]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.4182],
        [-1.0000,  0.0114]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.0441,  0.2443],
        [-1.8002, -0.0140]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.4421],
        [-1.0000,  0.2355]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9186,  0.0812],
        [-2.1712, -0.0812]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.4309],
        [-1.0000,  0.2215]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.1640,  0.2830],
        [-2.0723, -0.2202]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.4152],
        [-1.0000,  0.2308]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6648,  0.1199],
        [-1.9924, -0.1343]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.1139],
        [-1.0000,  0.1579]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.0602e+00,  1.2156e-03],
        [-1.9380e+00, -1.6572e-01]], device='cuda:0'), pred_original_sample=tensor([[-0.9930,  0.0328],
        [-1.0000,  0.0580]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.1941,  0.0447],
        [-1.7159, -0.2125]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.9602],
        [-1.0000, -0.2890]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.1460, -0.2030],
        [-1.9991, -0.3620]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-1.0000,  0.0066]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.0858, -0.0647],
        [-1.8342, -0.3150]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-1.0000, -0.0598]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.3499, -0.0996],
        [-2.0722, -0.3621]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.8811],
        [-1.0000,  0.1280]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.3646, -0.2698],
        [-1.9619, -0.4588]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.5222],
        [-1.0000, -0.1264]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.1647, -0.2456],
        [-1.8060, -0.1628]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.4618],
        [-1.0000,  0.1844]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9423, -0.2653],
        [-1.9081, -0.2821]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.7542],
        [-1.0000, -0.2993]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.0776, -0.4596],
        [-1.5054, -0.0518]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.5709],
        [-1.0000, -0.0665]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.0773, -0.1850],
        [-1.5797, -0.5649]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.5986],
        [-1.0000, -0.1149]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.0978, -0.5172],
        [-1.7173, -0.5804]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.1388],
        [-1.0000, -0.0524]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.1125, -0.2510],
        [-1.9042, -0.3795]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.2358],
        [-1.0000,  0.1411]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.1031, -0.2461],
        [-1.7958, -0.3958]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.7716],
        [-1.0000, -0.0778]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8732, -0.3771],
        [-1.8019, -0.6241]], device='cuda:0'), pred_original_sample=tensor([[-0.5559,  0.2802],
        [-1.0000,  0.1630]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7646, -0.5111],
        [-2.1134, -0.4368]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.3244],
        [-1.0000,  0.1003]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.0043, -0.5115],
        [-2.1146, -0.5300]], device='cuda:0'), pred_original_sample=tensor([[-0.5614,  0.2546],
        [-1.0000, -0.4957]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8516, -0.1559],
        [-2.0479, -0.5761]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.3478],
        [-1.0000, -0.1077]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.0630, -0.3622],
        [-2.0723, -0.5068]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.8166],
        [-1.0000, -0.3848]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9048, -0.1371],
        [-1.8722, -0.4514]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.2105],
        [-1.0000, -0.3133]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6736, -0.3690],
        [-1.9361, -0.3091]], device='cuda:0'), pred_original_sample=tensor([[-0.8666, -0.1715],
        [-1.0000,  0.0646]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6009, -0.2721],
        [-1.9446, -0.4793]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.3042],
        [-1.0000,  0.2519]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8200, -0.3968],
        [-2.3492, -0.5075]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.2371],
        [-1.0000, -0.4936]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5784, -0.6342],
        [-2.0314, -0.5264]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.2291],
        [-1.0000, -0.0788]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2607, -0.4186],
        [-2.0450, -0.4963]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.1167],
        [-1.0000, -0.5786]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2444, -0.3904],
        [-1.9386, -0.4038]], device='cuda:0'), pred_original_sample=tensor([[-0.9839, -0.1427],
        [-1.0000, -0.1559]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3212, -0.4508],
        [-1.9199, -0.6079]], device='cuda:0'), pred_original_sample=tensor([[-0.7192, -0.0102],
        [-1.0000, -0.1676]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5138, -0.4529],
        [-1.9234, -0.3403]], device='cuda:0'), pred_original_sample=tensor([[-1.0000e+00,  1.5330e-02],
        [-1.0000e+00,  9.0296e-04]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5981, -0.2663],
        [-1.8980, -0.4559]], device='cuda:0'), pred_original_sample=tensor([[-0.9029,  0.3692],
        [-1.0000, -0.0647]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6490, -0.4502],
        [-1.8002, -0.2212]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.2106],
        [-1.0000,  0.1855]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3312, -0.4787],
        [-1.7171, -0.1745]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.5016],
        [-1.0000,  0.1452]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0681, -0.6093],
        [-1.7660, -0.1843]], device='cuda:0'), pred_original_sample=tensor([[-0.6945,  0.2246],
        [-1.0000, -0.0994]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3300, -0.5426],
        [-1.8672, -0.1681]], device='cuda:0'), pred_original_sample=tensor([[-0.5731, -0.0363],
        [-1.0000,  0.0642]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4146, -0.4226],
        [-1.7378, -0.0460]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.0513],
        [-1.0000,  0.1803]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4829, -0.4390],
        [-1.5498, -0.2166]], device='cuda:0'), pred_original_sample=tensor([[-0.9112,  0.2450],
        [-1.0000, -0.0459]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5054, -0.5106],
        [-1.6849, -0.2302]], device='cuda:0'), pred_original_sample=tensor([[-0.9248,  0.1979],
        [-1.0000,  0.1183]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4609, -0.4067],
        [-1.1367, -0.1326]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.0452],
        [-1.0000,  0.3558]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6759, -0.4654],
        [-1.2586, -0.0169]], device='cuda:0'), pred_original_sample=tensor([[-0.8997,  0.3294],
        [-1.0000,  0.6316]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6459, -0.2960],
        [-0.9021, -0.1793]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.3904],
        [-1.0000,  0.8188]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6882, -0.4296],
        [-1.0219, -0.0081]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.1621],
        [-1.0000,  0.7744]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6089, -0.5444],
        [-0.9592, -0.3555]], device='cuda:0'), pred_original_sample=tensor([[-0.8840,  0.4867],
        [-1.0000,  0.7577]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5843, -0.4154],
        [-1.0007, -0.4343]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.1216],
        [-1.0000,  0.6838]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4648, -0.6141],
        [-1.1035, -0.4862]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.0796],
        [-1.0000,  0.4097]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6884, -0.6141],
        [-1.2431, -0.2998]], device='cuda:0'), pred_original_sample=tensor([[-0.8479, -0.1094],
        [-1.0000,  0.6457]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4911, -0.3662],
        [-1.1403, -0.3052]], device='cuda:0'), pred_original_sample=tensor([[-0.8940,  0.1799],
        [-1.0000,  0.4398]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5566, -0.5083],
        [-1.1398, -0.4526]], device='cuda:0'), pred_original_sample=tensor([[-0.8554,  0.2943],
        [-1.0000,  0.4030]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5267, -0.4733],
        [-1.3048, -0.4764]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.1387],
        [-1.0000,  0.3607]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6205, -0.2490],
        [-1.6518, -0.3923]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.2123],
        [-1.0000,  0.2606]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8245, -0.3034],
        [-1.5680, -0.3535]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.5121],
        [-1.0000,  0.0887]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7511, -0.1398],
        [-1.2945, -0.6675]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.2440],
        [-1.0000, -0.1316]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6439, -0.2930],
        [-1.4606, -0.5413]], device='cuda:0'), pred_original_sample=tensor([[-0.7850, -0.1359],
        [-1.0000, -0.2482]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5014, -0.3994],
        [-1.3165, -0.7488]], device='cuda:0'), pred_original_sample=tensor([[-0.8266,  0.2922],
        [-1.0000, -0.2104]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7231, -0.5439],
        [-1.7239, -0.5513]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.2854],
        [-1.0000, -0.4331]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6601, -0.3707],
        [-1.4588, -0.8305]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.2076],
        [-1.0000, -0.7228]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9127, -0.5391],
        [-1.4136, -0.8499]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.3269],
        [-1.0000, -0.5416]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.0858, -0.4402],
        [-1.4364, -0.9681]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.1061],
        [-1.0000, -0.1426]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7201, -0.4273],
        [-1.3586, -1.0567]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.6232],
        [-1.0000, -0.6598]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6723, -0.4438],
        [-1.4857, -0.8890]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.2401],
        [-1.0000, -0.7540]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6639, -0.2763],
        [-1.1240, -1.0918]], device='cuda:0'), pred_original_sample=tensor([[-0.9843,  0.3159],
        [-1.0000, -0.5522]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4959, -0.4677],
        [-1.1579, -1.2036]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.2278],
        [-1.0000, -0.3119]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2949, -0.3790],
        [-1.2030, -1.1325]], device='cuda:0'), pred_original_sample=tensor([[-0.8828, -0.1000],
        [-1.0000, -0.1403]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5348, -0.5314],
        [-1.1342, -1.0388]], device='cuda:0'), pred_original_sample=tensor([[-0.8498,  0.1677],
        [-1.0000, -0.5914]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5203, -0.3578],
        [-0.9433, -1.0635]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.3597],
        [-1.0000, -0.7386]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8342, -0.3552],
        [-1.0939, -1.0906]], device='cuda:0'), pred_original_sample=tensor([[-0.7389, -0.0648],
        [-1.0000, -0.6452]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8877, -0.3953],
        [-0.8992, -0.9814]], device='cuda:0'), pred_original_sample=tensor([[-0.8793, -0.0470],
        [-1.0000, -0.1497]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7164, -0.2760],
        [-0.9193, -1.2752]], device='cuda:0'), pred_original_sample=tensor([[-0.7461, -0.0645],
        [-1.0000,  0.1826]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6125, -0.3038],
        [-0.8321, -1.0952]], device='cuda:0'), pred_original_sample=tensor([[-0.7315, -0.1399],
        [-1.0000,  0.4012]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6413, -0.1873],
        [-0.6217, -1.1921]], device='cuda:0'), pred_original_sample=tensor([[-0.6795,  0.1033],
        [-1.0000,  0.2922]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8863, -0.0463],
        [-0.6990, -1.1286]], device='cuda:0'), pred_original_sample=tensor([[-0.8962,  0.8745],
        [-1.0000,  0.1681]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5209, -0.0595],
        [-0.6475, -1.0824]], device='cuda:0'), pred_original_sample=tensor([[-0.7164,  0.0452],
        [-0.9907, -0.0714]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8029, -0.1220],
        [-0.5579, -1.0146]], device='cuda:0'), pred_original_sample=tensor([[-0.7057,  0.0875],
        [-0.8744, -0.0460]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7169, -0.1735],
        [-0.4898, -0.9399]], device='cuda:0'), pred_original_sample=tensor([[-0.9734,  0.3315],
        [-0.8237,  0.0429]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3872, -0.0766],
        [-0.1546, -1.0602]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.1679],
        [-0.4817,  0.1897]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4173, -0.0798],
        [-0.1712, -0.8868]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.2427],
        [-0.6349,  0.3890]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2907,  0.3109],
        [-0.4233, -1.0568]], device='cuda:0'), pred_original_sample=tensor([[-0.8513,  0.6677],
        [-0.8296,  0.0522]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2182,  0.0356],
        [-0.3007, -1.1820]], device='cuda:0'), pred_original_sample=tensor([[-0.8192,  0.6702],
        [-0.9277, -0.1055]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1760, -0.0691],
        [-0.5372, -1.0053]], device='cuda:0'), pred_original_sample=tensor([[-0.6676,  0.4563],
        [-0.6301,  0.3849]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2169,  0.2671],
        [-0.5140, -1.0569]], device='cuda:0'), pred_original_sample=tensor([[-0.7281,  0.6398],
        [-0.6386,  0.3794]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2615,  0.1135],
        [-0.4698, -0.9061]], device='cuda:0'), pred_original_sample=tensor([[-0.5787,  0.9071],
        [-0.9586,  0.3009]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1125, -0.0631],
        [-0.4738, -0.8257]], device='cuda:0'), pred_original_sample=tensor([[-0.5204,  0.4100],
        [-0.9567,  0.4067]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1796,  0.0198],
        [-0.4860, -0.9502]], device='cuda:0'), pred_original_sample=tensor([[-0.6115,  0.3575],
        [-0.9485,  0.3350]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1923, -0.1080],
        [-0.5611, -0.6301]], device='cuda:0'), pred_original_sample=tensor([[-0.5560,  0.5901],
        [-0.7543,  0.1564]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3618, -0.1858],
        [-0.4896, -0.9717]], device='cuda:0'), pred_original_sample=tensor([[-0.7075,  0.2100],
        [-0.8170,  0.3252]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1493, -0.1259],
        [-0.5104, -0.8579]], device='cuda:0'), pred_original_sample=tensor([[-0.5000,  0.5239],
        [-0.8601, -0.0505]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1767, -0.0622],
        [-0.6019, -0.9553]], device='cuda:0'), pred_original_sample=tensor([[-0.4048,  0.5113],
        [-0.9778,  0.1063]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2720,  0.0525],
        [-0.6575, -0.9775]], device='cuda:0'), pred_original_sample=tensor([[-0.5450,  0.8939],
        [-0.9231,  0.0464]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1335,  0.2563],
        [-0.4944, -1.0583]], device='cuda:0'), pred_original_sample=tensor([[-0.5525,  1.0000],
        [-0.4025,  0.0296]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1338,  0.0808],
        [-0.3336, -1.0846]], device='cuda:0'), pred_original_sample=tensor([[-0.4692,  0.4563],
        [-0.4507, -0.0487]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4151, -0.3153],
        [-0.2637, -1.2070]], device='cuda:0'), pred_original_sample=tensor([[-0.5346,  0.5312],
        [-0.1482, -0.2624]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0830, -0.0148],
        [-0.1399, -1.1237]], device='cuda:0'), pred_original_sample=tensor([[-0.4232,  0.6945],
        [-0.1685, -0.2319]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1472,  0.0734],
        [-0.3355, -1.1094]], device='cuda:0'), pred_original_sample=tensor([[-0.5299,  0.4389],
        [-0.3005, -0.1396]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1066,  0.0195],
        [-0.1492, -1.2142]], device='cuda:0'), pred_original_sample=tensor([[-0.4984,  0.6727],
        [-0.2949, -0.1790]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0417,  0.0101],
        [-0.1310, -1.2816]], device='cuda:0'), pred_original_sample=tensor([[-0.1533,  1.0000],
        [-0.2767, -0.2068]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0861, -0.0700],
        [ 0.0886, -1.4461]], device='cuda:0'), pred_original_sample=tensor([[-0.7330,  0.7595],
        [-0.1993, -0.3344]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1390,  0.1206],
        [ 0.0595, -1.5522]], device='cuda:0'), pred_original_sample=tensor([[-0.6658,  0.6067],
        [-0.0647, -0.5624]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0967,  0.1591],
        [-0.0611, -1.5515]], device='cuda:0'), pred_original_sample=tensor([[-0.4291,  0.6818],
        [-0.1035, -0.4962]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0078,  0.1509],
        [ 0.1034, -1.4628]], device='cuda:0'), pred_original_sample=tensor([[-0.1462,  0.9855],
        [-0.0129, -0.5104]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1264,  0.2567],
        [-0.3272, -1.3705]], device='cuda:0'), pred_original_sample=tensor([[-0.4807,  0.8601],
        [-0.1095, -0.4235]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0042,  0.3175],
        [-0.1415, -1.4488]], device='cuda:0'), pred_original_sample=tensor([[-0.0736,  0.9532],
        [-0.1128, -0.4923]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0183,  0.3772],
        [-0.1425, -1.2824]], device='cuda:0'), pred_original_sample=tensor([[-0.1809,  0.8964],
        [-0.2594, -0.1917]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0749,  0.2492],
        [ 0.0632, -1.3373]], device='cuda:0'), pred_original_sample=tensor([[-0.2570,  0.7338],
        [-0.0513, -0.3701]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1331,  0.0928],
        [-0.1416, -1.3734]], device='cuda:0'), pred_original_sample=tensor([[-0.1737,  0.8253],
        [ 0.0649, -0.5051]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0245,  0.1876],
        [-0.1118, -1.3428]], device='cuda:0'), pred_original_sample=tensor([[-0.0704,  0.7635],
        [ 0.0377, -0.5594]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0134,  0.1891],
        [-0.1900, -1.2847]], device='cuda:0'), pred_original_sample=tensor([[-0.2343,  0.8110],
        [-0.0452, -0.6231]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0341,  0.1955],
        [-0.1209, -1.2975]], device='cuda:0'), pred_original_sample=tensor([[-0.1330,  0.7247],
        [-0.1562, -0.3824]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1107,  0.1812],
        [-0.2291, -1.3012]], device='cuda:0'), pred_original_sample=tensor([[-0.7157,  0.4948],
        [-0.0960, -0.4374]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0927,  0.1972],
        [-0.2389, -1.3990]], device='cuda:0'), pred_original_sample=tensor([[-0.2264,  0.6269],
        [-0.1152, -0.5021]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0355,  0.3170],
        [-0.1636, -1.4214]], device='cuda:0'), pred_original_sample=tensor([[-0.2915,  0.7958],
        [-0.2102, -0.5747]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0572,  0.3110],
        [-0.2049, -1.3812]], device='cuda:0'), pred_original_sample=tensor([[-0.2563,  0.7035],
        [-0.0423, -0.3507]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1086,  0.5487],
        [-0.0937, -1.4013]], device='cuda:0'), pred_original_sample=tensor([[-0.2319,  1.0000],
        [-0.0823, -0.6911]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1513,  0.5741],
        [ 0.0542, -1.7649]], device='cuda:0'), pred_original_sample=tensor([[-0.1755,  1.0000],
        [-0.0183, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1505,  0.7745],
        [-0.0071, -1.7526]], device='cuda:0'), pred_original_sample=tensor([[ 0.0665,  0.7219],
        [ 0.1411, -0.7119]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0520,  0.5384],
        [-0.0463, -1.5860]], device='cuda:0'), pred_original_sample=tensor([[ 0.0764,  0.7268],
        [ 0.1070, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1540,  0.4536],
        [ 0.2608, -1.6853]], device='cuda:0'), pred_original_sample=tensor([[-0.0283,  0.7630],
        [ 0.0687, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2642,  0.7009],
        [ 0.0819, -1.6918]], device='cuda:0'), pred_original_sample=tensor([[ 0.0352,  0.8683],
        [ 0.1499, -0.8507]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1655,  0.6736],
        [ 0.0799, -1.7047]], device='cuda:0'), pred_original_sample=tensor([[ 0.0633,  0.7412],
        [ 0.0090, -0.9573]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3082,  0.3800],
        [-0.1088, -1.5277]], device='cuda:0'), pred_original_sample=tensor([[-0.4525,  0.4076],
        [-0.0704, -0.8762]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1398,  0.3989],
        [ 0.0573, -1.4216]], device='cuda:0'), pred_original_sample=tensor([[-0.0745,  0.7126],
        [ 0.1745, -0.5609]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1573,  0.2474],
        [ 0.3002, -1.4259]], device='cuda:0'), pred_original_sample=tensor([[-0.2284,  0.7909],
        [ 0.1602, -0.8985]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1255,  0.3593],
        [-0.0389, -1.3449]], device='cuda:0'), pred_original_sample=tensor([[-0.0357,  0.7196],
        [-0.0350, -0.5251]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0214,  0.1990],
        [-0.1535, -1.5165]], device='cuda:0'), pred_original_sample=tensor([[-0.5316,  0.5093],
        [-0.0738, -0.7324]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0242,  0.1161],
        [-0.1639, -1.6366]], device='cuda:0'), pred_original_sample=tensor([[-0.6524,  0.5210],
        [-0.2020, -0.8084]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1065,  0.1096],
        [-0.0276, -1.5976]], device='cuda:0'), pred_original_sample=tensor([[-0.3366,  0.4132],
        [-0.2869, -0.8507]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0186,  0.0064],
        [-0.0511, -1.8423]], device='cuda:0'), pred_original_sample=tensor([[-0.5702,  0.4499],
        [ 0.1800, -0.6959]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0478,  0.2880],
        [-0.2430, -1.5425]], device='cuda:0'), pred_original_sample=tensor([[-0.2347,  0.7734],
        [ 0.0897, -0.7115]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0026,  0.0983],
        [ 0.1125, -1.4789]], device='cuda:0'), pred_original_sample=tensor([[-0.6170,  0.6795],
        [-0.1580, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0358,  0.1726],
        [ 0.1764, -1.8446]], device='cuda:0'), pred_original_sample=tensor([[-0.6769,  0.6879],
        [-0.9938, -0.4318]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0794,  0.3651],
        [-0.1743, -1.5909]], device='cuda:0'), pred_original_sample=tensor([[-0.0783,  0.6585],
        [-0.1661, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1765,  0.3177],
        [ 0.1179, -1.5109]], device='cuda:0'), pred_original_sample=tensor([[-0.1472,  0.8479],
        [-0.7559, -0.4111]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3399,  0.3193],
        [-0.0582, -1.7522]], device='cuda:0'), pred_original_sample=tensor([[-0.2831,  0.5007],
        [ 0.0193, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0575,  0.5713],
        [-0.0813, -1.6380]], device='cuda:0'), pred_original_sample=tensor([[-0.1260,  0.9143],
        [ 0.2472, -0.7483]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.1086e-03,  4.8536e-01],
        [-8.4235e-02, -1.7873e+00]], device='cuda:0'), pred_original_sample=tensor([[-0.2917,  0.7629],
        [ 0.2132, -0.9048]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1185,  0.4024],
        [ 0.0754, -1.7117]], device='cuda:0'), pred_original_sample=tensor([[-0.2761,  0.9795],
        [ 0.3419, -0.9280]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1818,  0.3901],
        [ 0.1600, -1.7626]], device='cuda:0'), pred_original_sample=tensor([[-0.3082,  0.7741],
        [-0.2441, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0912,  0.2070],
        [ 0.0395, -1.6796]], device='cuda:0'), pred_original_sample=tensor([[-0.3913,  0.5410],
        [-0.7455, -0.5848]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2603,  0.3138],
        [ 0.2361, -1.6566]], device='cuda:0'), pred_original_sample=tensor([[-0.4242,  0.4337],
        [-0.7154, -0.5530]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1849,  0.3980],
        [ 0.1215, -1.8564]], device='cuda:0'), pred_original_sample=tensor([[-0.4969,  0.5044],
        [-0.6168, -0.0362]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4639,  0.2706],
        [ 0.2227, -1.6901]], device='cuda:0'), pred_original_sample=tensor([[-0.3334,  0.3953],
        [-0.7353, -0.2461]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2181,  0.2500],
        [ 0.1422, -1.7329]], device='cuda:0'), pred_original_sample=tensor([[-0.4103,  0.4939],
        [-0.9561, -0.2445]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1088,  0.4339],
        [ 0.1708, -1.7208]], device='cuda:0'), pred_original_sample=tensor([[-0.2272,  0.7792],
        [-0.2079, -0.7408]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0121,  0.2235],
        [ 0.0782, -1.6069]], device='cuda:0'), pred_original_sample=tensor([[-0.2951,  0.4680],
        [ 0.1261, -0.8691]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0948,  0.2759],
        [-0.0224, -1.6371]], device='cuda:0'), pred_original_sample=tensor([[-0.3572,  0.4432],
        [ 0.3415, -0.9288]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0794,  0.2945],
        [-0.0496, -1.8007]], device='cuda:0'), pred_original_sample=tensor([[-0.4931,  0.4906],
        [ 0.3225, -0.9104]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2143,  0.1991],
        [-0.0292, -1.5903]], device='cuda:0'), pred_original_sample=tensor([[-0.3366,  0.7174],
        [ 0.0688, -0.9663]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2031,  0.2355],
        [ 0.0896, -1.7743]], device='cuda:0'), pred_original_sample=tensor([[-0.4604,  0.3265],
        [-0.1370, -0.8869]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0143,  0.1544],
        [-0.1597, -1.6083]], device='cuda:0'), pred_original_sample=tensor([[-0.2797,  0.4975],
        [ 0.2507, -0.8089]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1011,  0.2029],
        [-0.0673, -1.6419]], device='cuda:0'), pred_original_sample=tensor([[-0.4051,  0.7081],
        [ 0.2195, -0.8010]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2141,  0.0703],
        [ 0.0098, -1.3993]], device='cuda:0'), pred_original_sample=tensor([[-0.5444,  0.4669],
        [ 0.0645, -0.8997]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2568,  0.0635],
        [-0.0794, -1.4503]], device='cuda:0'), pred_original_sample=tensor([[-0.4767,  0.4279],
        [-0.0656, -0.8952]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3697,  0.0683],
        [ 0.0280, -1.3327]], device='cuda:0'), pred_original_sample=tensor([[-0.4622,  0.3607],
        [-0.0230, -0.8215]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3108, -0.0712],
        [ 0.0850, -1.5801]], device='cuda:0'), pred_original_sample=tensor([[-0.5035,  0.2904],
        [-0.1633, -0.8385]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0662, -0.3072],
        [-0.0475, -1.3395]], device='cuda:0'), pred_original_sample=tensor([[-0.4665,  0.1386],
        [-0.2046, -0.4615]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0160, -0.2213],
        [-0.0600, -1.3056]], device='cuda:0'), pred_original_sample=tensor([[-0.5861,  0.1621],
        [-0.1540, -0.2975]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0975, -0.2859],
        [-0.1969, -1.5638]], device='cuda:0'), pred_original_sample=tensor([[-0.5300,  0.1189],
        [-0.0553, -0.4732]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2478,  0.0230],
        [ 0.0214, -1.2197]], device='cuda:0'), pred_original_sample=tensor([[-0.4503,  0.1677],
        [-0.0649, -0.4357]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0422, -0.2247],
        [-0.1930, -1.1976]], device='cuda:0'), pred_original_sample=tensor([[-0.3887,  0.2718],
        [-0.2961, -0.2420]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2052, -0.2042],
        [ 0.0723, -1.2379]], device='cuda:0'), pred_original_sample=tensor([[-0.4840,  0.2191],
        [ 0.0309, -0.3278]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.6438e-01,  1.2904e-01],
        [ 5.5159e-04, -1.3095e+00]], device='cuda:0'), pred_original_sample=tensor([[-0.3266,  0.6091],
        [-0.1407, -0.3127]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0625,  0.0875],
        [-0.0537, -1.3024]], device='cuda:0'), pred_original_sample=tensor([[-0.3063,  0.5504],
        [-0.1592, -0.2919]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2984, -0.0372],
        [ 0.0192, -1.1344]], device='cuda:0'), pred_original_sample=tensor([[-0.5740,  0.2837],
        [-0.0076, -0.3320]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3630, -0.1184],
        [-0.0135, -0.9959]], device='cuda:0'), pred_original_sample=tensor([[-0.4677,  0.3060],
        [ 0.0580, -0.3281]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2642, -0.0629],
        [-0.0170, -0.9079]], device='cuda:0'), pred_original_sample=tensor([[-0.5728,  0.2424],
        [ 0.0569, -0.3941]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1178,  0.0229],
        [ 0.1630, -1.0467]], device='cuda:0'), pred_original_sample=tensor([[-0.5222,  0.2786],
        [ 0.0181, -0.3579]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5097, -0.0105],
        [ 0.0417, -1.3985]], device='cuda:0'), pred_original_sample=tensor([[-0.6503,  0.3500],
        [ 0.1710, -0.5206]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4360, -0.0498],
        [ 0.1470, -1.2384]], device='cuda:0'), pred_original_sample=tensor([[-0.6880,  0.0463],
        [ 0.0881, -0.4283]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1387,  0.0321],
        [ 0.0224, -1.4598]], device='cuda:0'), pred_original_sample=tensor([[-0.4986,  0.2897],
        [-0.1286, -0.8559]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2044,  0.0504],
        [-0.0829, -1.6082]], device='cuda:0'), pred_original_sample=tensor([[-0.4396,  0.2952],
        [-0.1166, -0.7771]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2468,  0.1765],
        [-0.0438, -1.6660]], device='cuda:0'), pred_original_sample=tensor([[-0.4253,  0.4657],
        [ 0.0835, -0.7924]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1747,  0.3107],
        [-0.2366, -1.6208]], device='cuda:0'), pred_original_sample=tensor([[-0.3402,  0.3968],
        [-0.0967, -0.8424]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3341, -0.0334],
        [-0.1780, -1.5481]], device='cuda:0'), pred_original_sample=tensor([[-0.3964,  0.3748],
        [-0.1013, -0.8928]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2851,  0.1659],
        [-0.0294, -1.4989]], device='cuda:0'), pred_original_sample=tensor([[-0.5239,  0.4607],
        [-0.0848, -0.6571]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3287, -0.0441],
        [-0.2451, -1.3815]], device='cuda:0'), pred_original_sample=tensor([[-0.5454,  0.3286],
        [-0.2046, -0.5850]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3265,  0.0275],
        [-0.3690, -1.2273]], device='cuda:0'), pred_original_sample=tensor([[-0.6337,  0.2246],
        [-0.3155, -0.3828]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2504,  0.0066],
        [-0.1449, -1.2305]], device='cuda:0'), pred_original_sample=tensor([[-0.6278,  0.3425],
        [-0.1962, -0.2705]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4416, -0.0543],
        [-0.2671, -1.1765]], device='cuda:0'), pred_original_sample=tensor([[-0.6411,  0.3042],
        [-0.3340, -0.1898]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3988,  0.0845],
        [-0.1751, -1.1395]], device='cuda:0'), pred_original_sample=tensor([[-0.6530,  0.4756],
        [-0.1340, -0.1390]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5968,  0.0178],
        [ 0.0608, -1.0426]], device='cuda:0'), pred_original_sample=tensor([[-0.8080,  0.2627],
        [-0.0609, -0.3585]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6068, -0.0227],
        [-0.3180, -1.2065]], device='cuda:0'), pred_original_sample=tensor([[-0.6151,  0.2962],
        [-0.3194, -0.3274]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7660,  0.1047],
        [-0.2108, -1.1235]], device='cuda:0'), pred_original_sample=tensor([[-0.6127, -0.0996],
        [-0.1586, -0.5196]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8160,  0.0631],
        [-0.3076, -1.0774]], device='cuda:0'), pred_original_sample=tensor([[-0.6785, -0.0707],
        [-0.1936, -0.3193]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7065, -0.0177],
        [-0.1768, -1.1319]], device='cuda:0'), pred_original_sample=tensor([[-0.5906, -0.0655],
        [-0.3609, -0.2888]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8784, -0.1195],
        [-0.1599, -1.3467]], device='cuda:0'), pred_original_sample=tensor([[-0.5597,  0.2188],
        [-0.0751, -0.4328]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7456, -0.0128],
        [-0.1051, -1.2713]], device='cuda:0'), pred_original_sample=tensor([[-0.5666,  0.1046],
        [-0.1465, -0.3065]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5608, -0.0310],
        [-0.2055, -1.2664]], device='cuda:0'), pred_original_sample=tensor([[-0.5069,  0.0783],
        [-0.2558, -0.4071]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7533, -0.1979],
        [-0.2393, -1.1929]], device='cuda:0'), pred_original_sample=tensor([[-0.7435,  0.0662],
        [-0.2817, -0.2334]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6458, -0.0264],
        [-0.2630, -1.0676]], device='cuda:0'), pred_original_sample=tensor([[-0.6847,  0.0968],
        [-0.2423, -0.2204]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6369, -0.0385],
        [-0.2324, -1.0612]], device='cuda:0'), pred_original_sample=tensor([[-0.7233,  0.3367],
        [-0.2383, -0.0732]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6846,  0.0955],
        [-0.2063, -0.8444]], device='cuda:0'), pred_original_sample=tensor([[-0.7412,  0.3995],
        [-0.3163, -0.0433]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6712, -0.1039],
        [-0.0893, -1.0423]], device='cuda:0'), pred_original_sample=tensor([[-0.6385,  0.1675],
        [-0.2126, -0.1738]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5451, -0.1386],
        [-0.1024, -0.8884]], device='cuda:0'), pred_original_sample=tensor([[-0.5340,  0.0361],
        [-0.1316, -0.1561]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5814, -0.3036],
        [ 0.0791, -0.8595]], device='cuda:0'), pred_original_sample=tensor([[-0.5106,  0.0238],
        [-0.1406, -0.3721]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5320, -0.1591],
        [ 0.0762, -0.8565]], device='cuda:0'), pred_original_sample=tensor([[-0.5756,  0.0655],
        [-0.1803, -0.1092]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7286, -0.1957],
        [ 0.0079, -0.6201]], device='cuda:0'), pred_original_sample=tensor([[-0.5053,  0.0343],
        [-0.0653, -0.1077]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6741, -0.1358],
        [ 0.0273, -0.7312]], device='cuda:0'), pred_original_sample=tensor([[-0.5489, -0.0585],
        [-0.0762, -0.2388]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7605, -0.3388],
        [ 0.0415, -0.7783]], device='cuda:0'), pred_original_sample=tensor([[-0.6337, -0.1537],
        [-0.1013, -0.1719]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7366, -0.2423],
        [ 0.1720, -0.8297]], device='cuda:0'), pred_original_sample=tensor([[-0.6742, -0.0840],
        [-0.1450, -0.1286]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5279, -0.1651],
        [-0.1517, -0.8501]], device='cuda:0'), pred_original_sample=tensor([[-0.5091,  0.0292],
        [-0.1620, -0.1299]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3767, -0.3260],
        [-0.0407, -0.8273]], device='cuda:0'), pred_original_sample=tensor([[-0.6174, -0.0102],
        [-0.2646, -0.0576]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4322, -0.2621],
        [ 0.0903, -0.9408]], device='cuda:0'), pred_original_sample=tensor([[-0.6577, -0.0224],
        [ 0.0066, -0.3523]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3697, -0.1148],
        [-0.0610, -1.0002]], device='cuda:0'), pred_original_sample=tensor([[-0.6203,  0.0478],
        [-0.0881, -0.1712]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4891, -0.0735],
        [ 0.0224, -1.0421]], device='cuda:0'), pred_original_sample=tensor([[-0.6449,  0.0325],
        [-0.2076, -0.0649]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5377, -0.3608],
        [ 0.0369, -0.7625]], device='cuda:0'), pred_original_sample=tensor([[-0.5968, -0.0631],
        [-0.1453, -0.1675]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2725, -0.2906],
        [ 0.0025, -0.7811]], device='cuda:0'), pred_original_sample=tensor([[-0.5364,  0.0204],
        [-0.2550, -0.0135]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5384, -0.1824],
        [-0.1779, -0.8912]], device='cuda:0'), pred_original_sample=tensor([[-0.6371, -0.0847],
        [-0.2595, -0.0645]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3127, -0.2915],
        [-0.1110, -0.8105]], device='cuda:0'), pred_original_sample=tensor([[-0.6119,  0.0046],
        [-0.2515, -0.0506]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5221, -0.3338],
        [ 0.1301, -0.7932]], device='cuda:0'), pred_original_sample=tensor([[-0.6749, -0.2167],
        [-0.2274, -0.1996]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4638, -0.4800],
        [-0.1215, -0.6848]], device='cuda:0'), pred_original_sample=tensor([[-0.5666, -0.2014],
        [-0.1373, -0.1631]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5334, -0.2395],
        [-0.2179, -0.8647]], device='cuda:0'), pred_original_sample=tensor([[-0.6780, -0.0908],
        [-0.0217,  0.1670]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6291, -0.2821],
        [-0.1717, -0.7846]], device='cuda:0'), pred_original_sample=tensor([[-0.5784,  0.0100],
        [-0.0641,  0.0649]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6610, -0.2617],
        [-0.1823, -0.9400]], device='cuda:0'), pred_original_sample=tensor([[-0.7640, -0.0667],
        [-0.1674, -0.2378]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4494, -0.0865],
        [-0.3114, -0.7975]], device='cuda:0'), pred_original_sample=tensor([[-0.5873, -0.0071],
        [-0.1080,  0.1216]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6316, -0.4090],
        [-0.0280, -0.8225]], device='cuda:0'), pred_original_sample=tensor([[-0.5914,  0.0896],
        [-0.0401,  0.1277]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5709, -0.4260],
        [-0.0333, -0.8591]], device='cuda:0'), pred_original_sample=tensor([[-0.7340, -0.0339],
        [-0.2595, -0.0930]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6025, -0.2693],
        [ 0.0674, -0.9567]], device='cuda:0'), pred_original_sample=tensor([[-0.7333, -0.0477],
        [-0.1356, -0.3896]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4663, -0.4466],
        [ 0.0247, -0.9417]], device='cuda:0'), pred_original_sample=tensor([[-0.5483, -0.0129],
        [-0.1935, -0.2720]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6706, -0.3361],
        [-0.1302, -0.8265]], device='cuda:0'), pred_original_sample=tensor([[-0.7092, -0.1036],
        [-0.2839, -0.1191]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5403, -0.2646],
        [ 0.0272, -0.9767]], device='cuda:0'), pred_original_sample=tensor([[-0.5654, -0.0080],
        [-0.0745, -0.2211]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5453, -0.2805],
        [ 0.0723, -1.0310]], device='cuda:0'), pred_original_sample=tensor([[-0.7310, -0.0232],
        [-0.1486, -0.2046]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6163, -0.4206],
        [-0.1298, -1.0165]], device='cuda:0'), pred_original_sample=tensor([[-0.5635,  0.0541],
        [-0.0061, -0.2255]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5565, -0.3592],
        [-0.0967, -0.8074]], device='cuda:0'), pred_original_sample=tensor([[-0.6592, -0.0159],
        [-0.0948,  0.1023]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5380, -0.4122],
        [-0.1791, -1.0115]], device='cuda:0'), pred_original_sample=tensor([[-0.7384, -0.0897],
        [-0.1870,  0.0125]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5158, -0.3145],
        [-0.4209, -0.7243]], device='cuda:0'), pred_original_sample=tensor([[-0.7091, -0.1040],
        [-0.3765, -0.2265]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5716, -0.3910],
        [-0.2882, -0.5859]], device='cuda:0'), pred_original_sample=tensor([[-0.6736, -0.0795],
        [-0.3355, -0.1196]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4117, -0.2583],
        [-0.2670, -0.7108]], device='cuda:0'), pred_original_sample=tensor([[-0.6347, -0.0107],
        [-0.4529, -0.2484]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4795, -0.4754],
        [-0.5029, -0.7048]], device='cuda:0'), pred_original_sample=tensor([[-0.5419, -0.0609],
        [-0.3571, -0.3676]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6897, -0.2269],
        [-0.4530, -0.6928]], device='cuda:0'), pred_original_sample=tensor([[-0.6289,  0.0099],
        [-0.4190, -0.2313]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6829, -0.4494],
        [-0.5490, -0.9549]], device='cuda:0'), pred_original_sample=tensor([[-0.5362,  0.0087],
        [-0.4442, -0.2976]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5709, -0.5275],
        [-0.7066, -0.9660]], device='cuda:0'), pred_original_sample=tensor([[-0.5895, -0.0770],
        [-0.6385, -0.2933]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4831, -0.3335],
        [-0.5882, -0.8950]], device='cuda:0'), pred_original_sample=tensor([[-0.5408, -0.0371],
        [-0.7028, -0.3352]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4473, -0.2385],
        [-0.6296, -1.0491]], device='cuda:0'), pred_original_sample=tensor([[-0.6017,  0.0498],
        [-0.7031, -0.2435]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4407, -0.2938],
        [-0.6975, -1.0504]], device='cuda:0'), pred_original_sample=tensor([[-0.5222,  0.0092],
        [-0.6795, -0.2967]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6168, -0.2013],
        [-0.6130, -1.1454]], device='cuda:0'), pred_original_sample=tensor([[-0.6217,  0.0067],
        [-0.5742, -0.4790]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6794, -0.1692],
        [-0.7913, -1.1542]], device='cuda:0'), pred_original_sample=tensor([[-0.5601, -0.1283],
        [-0.7703, -0.2998]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7365, -0.1864],
        [-0.8201, -1.2020]], device='cuda:0'), pred_original_sample=tensor([[-0.5801, -0.1185],
        [-0.6086, -0.5097]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8282, -0.1403],
        [-0.8097, -1.3218]], device='cuda:0'), pred_original_sample=tensor([[-0.6460,  0.1611],
        [-0.7434, -0.3475]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9360, -0.0809],
        [-0.7999, -1.1446]], device='cuda:0'), pred_original_sample=tensor([[-0.5612,  0.1423],
        [-0.7739, -0.3214]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9096,  0.0077],
        [-0.7998, -1.2059]], device='cuda:0'), pred_original_sample=tensor([[-0.7018,  0.2252],
        [-0.7172, -0.3552]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6448, -0.1639],
        [-0.8410, -0.9768]], device='cuda:0'), pred_original_sample=tensor([[-0.7076,  0.2093],
        [-0.7662, -0.4291]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7744, -0.1359],
        [-0.8690, -1.0599]], device='cuda:0'), pred_original_sample=tensor([[-0.5777, -0.0661],
        [-0.7900, -0.3272]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7826, -0.4459],
        [-0.7197, -1.0319]], device='cuda:0'), pred_original_sample=tensor([[-0.5923, -0.1821],
        [-0.6797, -0.3904]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8643, -0.0609],
        [-0.8091, -0.9637]], device='cuda:0'), pred_original_sample=tensor([[-0.6586, -0.0788],
        [-0.7285, -0.5551]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7434, -0.3215],
        [-0.7888, -1.0425]], device='cuda:0'), pred_original_sample=tensor([[-0.5642, -0.0549],
        [-0.6484, -0.4770]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7508, -0.3069],
        [-0.7709, -0.9875]], device='cuda:0'), pred_original_sample=tensor([[-0.5309, -0.0271],
        [-0.7037, -0.4258]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6904, -0.2082],
        [-0.6473, -0.9688]], device='cuda:0'), pred_original_sample=tensor([[-0.5336, -0.0521],
        [-0.6087, -0.3909]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-6.8469e-01,  4.8733e-04],
        [-5.1737e-01, -1.0550e+00]], device='cuda:0'), pred_original_sample=tensor([[-0.5856,  0.1009],
        [-0.6378, -0.3588]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8410,  0.0061],
        [-0.7225, -0.8258]], device='cuda:0'), pred_original_sample=tensor([[-0.5175,  0.0385],
        [-0.6226, -0.4907]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7981,  0.0078],
        [-0.6396, -0.8836]], device='cuda:0'), pred_original_sample=tensor([[-0.6933,  0.2788],
        [-0.6125, -0.4355]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7219, -0.0920],
        [-0.7286, -1.0320]], device='cuda:0'), pred_original_sample=tensor([[-0.5639,  0.0951],
        [-0.6780, -0.4643]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8636, -0.1935],
        [-0.7771, -0.7269]], device='cuda:0'), pred_original_sample=tensor([[-0.5559,  0.0864],
        [-0.6646, -0.3504]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8532,  0.0460],
        [-0.8762, -0.8769]], device='cuda:0'), pred_original_sample=tensor([[-0.6724,  0.0800],
        [-0.7434, -0.4553]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8454,  0.1990],
        [-0.8978, -0.9107]], device='cuda:0'), pred_original_sample=tensor([[-0.6514,  0.2709],
        [-0.7490, -0.6323]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8246,  0.0731],
        [-0.9794, -0.9167]], device='cuda:0'), pred_original_sample=tensor([[-0.6714,  0.0011],
        [-0.8086, -0.3631]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8840,  0.0277],
        [-1.0027, -1.1119]], device='cuda:0'), pred_original_sample=tensor([[-0.5562,  0.1905],
        [-0.8353, -0.5703]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6293,  0.0839],
        [-0.9599, -0.8787]], device='cuda:0'), pred_original_sample=tensor([[-0.6068,  0.1707],
        [-0.9149, -0.4513]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5593, -0.0366],
        [-0.7777, -0.9215]], device='cuda:0'), pred_original_sample=tensor([[-0.5925,  0.0669],
        [-0.8029, -0.3785]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7656,  0.1441],
        [-0.8994, -0.6580]], device='cuda:0'), pred_original_sample=tensor([[-0.5614,  0.2057],
        [-0.7675, -0.3496]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7394,  0.0343],
        [-0.7011, -0.7486]], device='cuda:0'), pred_original_sample=tensor([[-0.5770,  0.1698],
        [-0.6846, -0.3743]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8746, -0.0096],
        [-0.8256, -0.8877]], device='cuda:0'), pred_original_sample=tensor([[-0.5725,  0.1617],
        [-0.6431, -0.4419]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8885,  0.0433],
        [-0.7214, -0.8277]], device='cuda:0'), pred_original_sample=tensor([[-0.5901,  0.1160],
        [-0.7191, -0.4202]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7249,  0.0506],
        [-0.8155, -0.8400]], device='cuda:0'), pred_original_sample=tensor([[-0.5983,  0.0433],
        [-0.5935, -0.3234]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7954,  0.0661],
        [-0.6960, -0.8693]], device='cuda:0'), pred_original_sample=tensor([[-0.5410,  0.2220],
        [-0.6564, -0.5034]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8122,  0.0731],
        [-0.7862, -0.8725]], device='cuda:0'), pred_original_sample=tensor([[-0.6904,  0.0921],
        [-0.7762, -0.4935]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7591,  0.2110],
        [-0.8495, -0.9732]], device='cuda:0'), pred_original_sample=tensor([[-0.6415,  0.2911],
        [-0.6131, -0.5715]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9283,  0.0865],
        [-0.8914, -0.8199]], device='cuda:0'), pred_original_sample=tensor([[-0.6613,  0.2422],
        [-0.7775, -0.6573]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8172,  0.3653],
        [-0.9025, -0.8092]], device='cuda:0'), pred_original_sample=tensor([[-0.6768,  0.3654],
        [-0.7979, -0.3894]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9136,  0.3512],
        [-0.8760, -0.8594]], device='cuda:0'), pred_original_sample=tensor([[-0.6990,  0.1893],
        [-0.8212, -0.3758]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9726,  0.3882],
        [-0.8640, -0.8344]], device='cuda:0'), pred_original_sample=tensor([[-0.6756,  0.2427],
        [-0.7211, -0.4711]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9985,  0.3353],
        [-0.8377, -0.7970]], device='cuda:0'), pred_original_sample=tensor([[-0.7233,  0.1969],
        [-0.7835, -0.3521]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.0801,  0.3388],
        [-0.8453, -0.7971]], device='cuda:0'), pred_original_sample=tensor([[-0.7856,  0.2086],
        [-0.7508, -0.3732]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.2184,  0.3344],
        [-0.6886, -0.6482]], device='cuda:0'), pred_original_sample=tensor([[-0.8104,  0.1778],
        [-0.5457, -0.3106]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.1803,  0.1735],
        [-0.7981, -0.5639]], device='cuda:0'), pred_original_sample=tensor([[-0.8537,  0.1374],
        [-0.5901, -0.2634]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.1398,  0.1576],
        [-0.7735, -0.8160]], device='cuda:0'), pred_original_sample=tensor([[-0.8606,  0.2004],
        [-0.6274, -0.2587]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.2133,  0.2643],
        [-0.7663, -0.6496]], device='cuda:0'), pred_original_sample=tensor([[-0.8646,  0.2092],
        [-0.6561, -0.2444]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.1553,  0.1530],
        [-0.7956, -0.6713]], device='cuda:0'), pred_original_sample=tensor([[-0.9591,  0.1409],
        [-0.7168, -0.2918]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.2891,  0.0157],
        [-0.8736, -0.4803]], device='cuda:0'), pred_original_sample=tensor([[-0.9133,  0.0941],
        [-0.6045, -0.2242]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.1604,  0.1298],
        [-0.9778, -0.6595]], device='cuda:0'), pred_original_sample=tensor([[-0.8882,  0.1497],
        [-0.7662, -0.2509]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.1875,  0.2623],
        [-1.0087, -0.6442]], device='cuda:0'), pred_original_sample=tensor([[-0.8931,  0.1550],
        [-0.8268, -0.2331]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.0928,  0.1849],
        [-0.9687, -0.6651]], device='cuda:0'), pred_original_sample=tensor([[-0.9123,  0.1367],
        [-0.6819, -0.2859]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.1212,  0.2839],
        [-1.0134, -0.6469]], device='cuda:0'), pred_original_sample=tensor([[-0.9825,  0.1485],
        [-0.7985, -0.3178]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.2266,  0.2640],
        [-1.0620, -0.4171]], device='cuda:0'), pred_original_sample=tensor([[-0.9619,  0.1365],
        [-0.8049, -0.2108]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.0877,  0.2626],
        [-0.9966, -0.6061]], device='cuda:0'), pred_original_sample=tensor([[-0.8713,  0.1723],
        [-0.7941, -0.2042]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9618,  0.1272],
        [-0.8544, -0.5118]], device='cuda:0'), pred_original_sample=tensor([[-0.7424,  0.1568],
        [-0.8330, -0.2155]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9217,  0.2524],
        [-0.7856, -0.3771]], device='cuda:0'), pred_original_sample=tensor([[-0.7092,  0.1653],
        [-0.7352, -0.1120]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9890,  0.0846],
        [-0.8849, -0.2515]], device='cuda:0'), pred_original_sample=tensor([[-0.7329,  0.1876],
        [-0.7458, -0.0423]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8875,  0.0166],
        [-0.9792, -0.2197]], device='cuda:0'), pred_original_sample=tensor([[-0.6892,  0.1827],
        [-0.7347,  0.1062]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8758,  0.1640],
        [-0.7271, -0.3454]], device='cuda:0'), pred_original_sample=tensor([[-0.6593,  0.2896],
        [-0.5705, -0.1898]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8143,  0.2862],
        [-0.7637, -0.3722]], device='cuda:0'), pred_original_sample=tensor([[-0.4880,  0.2994],
        [-0.5949, -0.2153]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7027,  0.3854],
        [-0.7424, -0.3302]], device='cuda:0'), pred_original_sample=tensor([[-0.4849,  0.4635],
        [-0.5306, -0.1331]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6797,  0.4110],
        [-0.9696, -0.3253]], device='cuda:0'), pred_original_sample=tensor([[-0.4670,  0.4914],
        [-0.7470,  0.0106]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5487,  0.4933],
        [-0.9979, -0.3060]], device='cuda:0'), pred_original_sample=tensor([[-0.4187,  0.3611],
        [-0.8433,  0.0193]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6468,  0.4555],
        [-0.9007, -0.5505]], device='cuda:0'), pred_original_sample=tensor([[-0.4841,  0.3472],
        [-0.8311, -0.1154]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6870,  0.3383],
        [-0.9908, -0.3094]], device='cuda:0'), pred_original_sample=tensor([[-0.4652,  0.2590],
        [-0.7992,  0.0119]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7268,  0.2358],
        [-0.9816, -0.3610]], device='cuda:0'), pred_original_sample=tensor([[-0.4814,  0.5128],
        [-0.8014, -0.0056]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5877,  0.3636],
        [-0.9998, -0.3117]], device='cuda:0'), pred_original_sample=tensor([[-0.4618,  0.2731],
        [-0.8686, -0.0333]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6199,  0.4164],
        [-1.0318, -0.3078]], device='cuda:0'), pred_original_sample=tensor([[-0.4246,  0.4312],
        [-0.9076,  0.0300]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6074,  0.3852],
        [-1.1396, -0.1664]], device='cuda:0'), pred_original_sample=tensor([[-0.4385,  0.3998],
        [-0.9426,  0.1618]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5080,  0.2082],
        [-1.2458, -0.0638]], device='cuda:0'), pred_original_sample=tensor([[-0.4358,  0.2579],
        [-0.8853,  0.0930]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7611,  0.4336],
        [-1.0473, -0.2224]], device='cuda:0'), pred_original_sample=tensor([[-0.4844,  0.3258],
        [-0.8708,  0.1473]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5741,  0.4136],
        [-1.1101, -0.1905]], device='cuda:0'), pred_original_sample=tensor([[-0.4519,  0.4463],
        [-0.8917,  0.1536]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6771,  0.3720],
        [-1.1653, -0.3333]], device='cuda:0'), pred_original_sample=tensor([[-0.4089,  0.3508],
        [-0.9927,  0.1200]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6747,  0.4260],
        [-1.1226, -0.1646]], device='cuda:0'), pred_original_sample=tensor([[-0.4769,  0.4354],
        [-0.9581,  0.0918]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6345,  0.2303],
        [-1.1123, -0.2811]], device='cuda:0'), pred_original_sample=tensor([[-0.5539,  0.1608],
        [-1.0000,  0.1011]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7336,  0.3505],
        [-1.1612, -0.2165]], device='cuda:0'), pred_original_sample=tensor([[-0.4792,  0.2337],
        [-0.8922,  0.1021]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8032,  0.4527],
        [-1.1647, -0.1578]], device='cuda:0'), pred_original_sample=tensor([[-0.5024,  0.3797],
        [-0.9595,  0.1164]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7827,  0.3368],
        [-1.0695, -0.1963]], device='cuda:0'), pred_original_sample=tensor([[-0.5549,  0.4342],
        [-0.8801,  0.0510]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7028,  0.3134],
        [-0.9178, -0.2467]], device='cuda:0'), pred_original_sample=tensor([[-0.5351,  0.4720],
        [-0.8206,  0.0108]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6556,  0.4108],
        [-1.0372, -0.2448]], device='cuda:0'), pred_original_sample=tensor([[-0.4515,  0.4821],
        [-0.8652,  0.0610]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6971,  0.3870],
        [-1.0072, -0.1956]], device='cuda:0'), pred_original_sample=tensor([[-0.5080,  0.4299],
        [-0.8646,  0.0679]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7900,  0.4137],
        [-0.9581, -0.2269]], device='cuda:0'), pred_original_sample=tensor([[-0.5732,  0.4390],
        [-0.7772,  0.0980]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7576,  0.2099],
        [-1.0414, -0.2566]], device='cuda:0'), pred_original_sample=tensor([[-0.5273,  0.3034],
        [-0.8547,  0.0179]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7816,  0.4359],
        [-1.0063, -0.1821]], device='cuda:0'), pred_original_sample=tensor([[-0.5321,  0.3373],
        [-0.8009,  0.0786]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8106,  0.4025],
        [-1.1338, -0.1206]], device='cuda:0'), pred_original_sample=tensor([[-0.5481,  0.3914],
        [-0.8811,  0.1226]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7634,  0.5942],
        [-1.0950, -0.2023]], device='cuda:0'), pred_original_sample=tensor([[-0.4627,  0.4427],
        [-0.8474,  0.0913]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7996,  0.6086],
        [-1.0681, -0.0896]], device='cuda:0'), pred_original_sample=tensor([[-0.5653,  0.4429],
        [-0.9008,  0.1891]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7219,  0.5331],
        [-1.1187, -0.0636]], device='cuda:0'), pred_original_sample=tensor([[-0.4543,  0.3961],
        [-0.9282,  0.1357]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6004,  0.5455],
        [-1.0639, -0.0894]], device='cuda:0'), pred_original_sample=tensor([[-0.5397,  0.3940],
        [-0.8783,  0.1865]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7677,  0.6677],
        [-1.0642, -0.1268]], device='cuda:0'), pred_original_sample=tensor([[-0.4844,  0.3939],
        [-0.8852,  0.1317]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8124,  0.6698],
        [-1.1270, -0.1624]], device='cuda:0'), pred_original_sample=tensor([[-0.4524,  0.3962],
        [-0.9090,  0.1680]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7715,  0.4494],
        [-1.0435, -0.1734]], device='cuda:0'), pred_original_sample=tensor([[-0.5155,  0.3995],
        [-0.9340,  0.1372]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7476,  0.6125],
        [-1.0169, -0.1628]], device='cuda:0'), pred_original_sample=tensor([[-0.5691,  0.5271],
        [-0.8898,  0.1463]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5854,  0.6594],
        [-1.0463, -0.1188]], device='cuda:0'), pred_original_sample=tensor([[-0.5642,  0.5478],
        [-0.8825,  0.1350]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6715,  0.6664],
        [-0.9802, -0.1027]], device='cuda:0'), pred_original_sample=tensor([[-0.5295,  0.5895],
        [-0.9048,  0.1778]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7125,  0.6917],
        [-1.1504, -0.0646]], device='cuda:0'), pred_original_sample=tensor([[-0.4794,  0.4113],
        [-0.9232,  0.0799]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7040,  0.5124],
        [-1.0558, -0.2121]], device='cuda:0'), pred_original_sample=tensor([[-0.5136,  0.3574],
        [-0.8509,  0.1056]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7109,  0.6624],
        [-1.0643, -0.1293]], device='cuda:0'), pred_original_sample=tensor([[-0.4736,  0.4317],
        [-0.8363,  0.1185]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5854,  0.6447],
        [-0.9723, -0.1262]], device='cuda:0'), pred_original_sample=tensor([[-0.5367,  0.5357],
        [-0.7612,  0.0340]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7163,  0.5347],
        [-0.9444, -0.0890]], device='cuda:0'), pred_original_sample=tensor([[-0.4997,  0.4599],
        [-0.7562,  0.0587]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6324,  0.5214],
        [-1.0836, -0.0442]], device='cuda:0'), pred_original_sample=tensor([[-0.5212,  0.4183],
        [-0.8244,  0.2030]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7348,  0.4796],
        [-1.1035, -0.0338]], device='cuda:0'), pred_original_sample=tensor([[-0.5314,  0.3441],
        [-0.9019,  0.1757]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6640,  0.3827],
        [-1.0644, -0.1619]], device='cuda:0'), pred_original_sample=tensor([[-0.4602,  0.5227],
        [-0.9041,  0.1615]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6367,  0.3408],
        [-1.2206, -0.1222]], device='cuda:0'), pred_original_sample=tensor([[-0.5518,  0.1911],
        [-0.9517,  0.0810]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6205,  0.3957],
        [-1.1720, -0.1549]], device='cuda:0'), pred_original_sample=tensor([[-0.4392,  0.3505],
        [-0.9655,  0.0337]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6455,  0.4174],
        [-1.2251, -0.0914]], device='cuda:0'), pred_original_sample=tensor([[-0.4523,  0.3239],
        [-0.9387,  0.0380]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5847,  0.3759],
        [-1.0789, -0.0684]], device='cuda:0'), pred_original_sample=tensor([[-0.4913,  0.3255],
        [-0.9135,  0.0799]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6459,  0.2731],
        [-1.1604, -0.1272]], device='cuda:0'), pred_original_sample=tensor([[-0.4565,  0.3398],
        [-0.9943,  0.0554]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7276,  0.3472],
        [-0.9423, -0.2208]], device='cuda:0'), pred_original_sample=tensor([[-5.0172e-01,  4.3519e-01],
        [-8.4743e-01, -5.1643e-04]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6162,  0.3915],
        [-1.1972, -0.2693]], device='cuda:0'), pred_original_sample=tensor([[-0.4638,  0.3600],
        [-1.0000,  0.0581]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6242,  0.3836],
        [-1.1465, -0.1321]], device='cuda:0'), pred_original_sample=tensor([[-0.5060,  0.4602],
        [-0.8920,  0.0843]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7178,  0.2746],
        [-1.1005, -0.0936]], device='cuda:0'), pred_original_sample=tensor([[-0.5245,  0.1782],
        [-0.9506,  0.0433]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5759,  0.3326],
        [-1.1824, -0.1886]], device='cuda:0'), pred_original_sample=tensor([[-0.5468,  0.2892],
        [-1.0000,  0.0011]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5707,  0.3268],
        [-1.1812, -0.0857]], device='cuda:0'), pred_original_sample=tensor([[-0.4697,  0.4882],
        [-0.9883,  0.0445]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6299,  0.3708],
        [-1.1715, -0.0835]], device='cuda:0'), pred_original_sample=tensor([[-0.5034,  0.4430],
        [-0.9191,  0.0705]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7113,  0.3655],
        [-1.3038, -0.1586]], device='cuda:0'), pred_original_sample=tensor([[-0.5112,  0.4131],
        [-1.0000, -0.0614]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7429,  0.3908],
        [-1.2461, -0.1846]], device='cuda:0'), pred_original_sample=tensor([[-0.5365,  0.3579],
        [-0.9911, -0.0055]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5847,  0.3448],
        [-1.1308, -0.1664]], device='cuda:0'), pred_original_sample=tensor([[-0.4986,  0.2323],
        [-1.0000,  0.0268]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6971,  0.3227],
        [-1.1094, -0.1227]], device='cuda:0'), pred_original_sample=tensor([[-0.5411,  0.3659],
        [-0.9767,  0.0165]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7606,  0.5154],
        [-1.2039,  0.0163]], device='cuda:0'), pred_original_sample=tensor([[-0.5266,  0.3969],
        [-1.0000,  0.0422]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7453,  0.4574],
        [-1.2223, -0.0113]], device='cuda:0'), pred_original_sample=tensor([[-0.5769,  0.3719],
        [-0.9573,  0.0600]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7272,  0.4151],
        [-1.2272, -0.0464]], device='cuda:0'), pred_original_sample=tensor([[-0.5275,  0.3791],
        [-0.9239,  0.0517]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7767,  0.3941],
        [-1.0560, -0.0740]], device='cuda:0'), pred_original_sample=tensor([[-0.5452,  0.4022],
        [-0.8875,  0.0650]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6701,  0.4442],
        [-1.3037, -0.0238]], device='cuda:0'), pred_original_sample=tensor([[-0.5028,  0.4741],
        [-0.9951,  0.0308]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6349,  0.4783],
        [-1.4041,  0.0595]], device='cuda:0'), pred_original_sample=tensor([[-0.5424,  0.4053],
        [-1.0000,  0.0628]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6150,  0.4473],
        [-1.2980, -0.1234]], device='cuda:0'), pred_original_sample=tensor([[-0.5188,  0.5110],
        [-1.0000,  0.0333]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7480,  0.4536],
        [-1.3088,  0.0017]], device='cuda:0'), pred_original_sample=tensor([[-0.4717,  0.4129],
        [-1.0000,  0.0457]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5697,  0.3941],
        [-1.1012, -0.1192]], device='cuda:0'), pred_original_sample=tensor([[-0.4455,  0.3964],
        [-0.9302,  0.0603]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4291,  0.4138],
        [-1.1613, -0.0259]], device='cuda:0'), pred_original_sample=tensor([[-0.4333,  0.3738],
        [-0.9060,  0.0684]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6714,  0.4614],
        [-1.2462,  0.1592]], device='cuda:0'), pred_original_sample=tensor([[-0.5063,  0.3495],
        [-0.9664,  0.0665]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5682,  0.3905],
        [-1.1308,  0.0502]], device='cuda:0'), pred_original_sample=tensor([[-0.4821,  0.3648],
        [-0.8979,  0.0465]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5819,  0.4601],
        [-1.2119,  0.1153]], device='cuda:0'), pred_original_sample=tensor([[-0.4604,  0.3924],
        [-0.9190,  0.0611]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7316,  0.4458],
        [-1.1826, -0.0682]], device='cuda:0'), pred_original_sample=tensor([[-0.5239,  0.3406],
        [-0.9848,  0.0284]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7782,  0.3892],
        [-1.1501,  0.1032]], device='cuda:0'), pred_original_sample=tensor([[-0.5480,  0.4073],
        [-0.9535,  0.0775]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7069,  0.4820],
        [-1.1480, -0.1094]], device='cuda:0'), pred_original_sample=tensor([[-0.5277,  0.4335],
        [-0.9339,  0.0335]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5149,  0.3862],
        [-1.2888,  0.0557]], device='cuda:0'), pred_original_sample=tensor([[-0.4786,  0.2866],
        [-0.9477,  0.0464]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5369,  0.2343],
        [-1.1948,  0.0116]], device='cuda:0'), pred_original_sample=tensor([[-0.4341,  0.2770],
        [-0.9444,  0.0506]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5860,  0.2539],
        [-1.0686, -0.0887]], device='cuda:0'), pred_original_sample=tensor([[-0.4786,  0.4182],
        [-0.8924,  0.0626]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4928,  0.3215],
        [-1.1579, -0.0240]], device='cuda:0'), pred_original_sample=tensor([[-0.4008,  0.2505],
        [-0.8890,  0.0677]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6783,  0.2879],
        [-1.1915,  0.0562]], device='cuda:0'), pred_original_sample=tensor([[-0.4779,  0.4251],
        [-0.9147,  0.0555]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5758,  0.4185],
        [-1.1393,  0.0810]], device='cuda:0'), pred_original_sample=tensor([[-0.4423,  0.2906],
        [-0.9354,  0.0834]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6127,  0.4385],
        [-1.1278,  0.1020]], device='cuda:0'), pred_original_sample=tensor([[-0.4422,  0.4131],
        [-0.9095,  0.1407]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4017,  0.3571],
        [-1.1139,  0.2114]], device='cuda:0'), pred_original_sample=tensor([[-0.3561,  0.4070],
        [-0.9259,  0.1804]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5089,  0.3574],
        [-1.1129,  0.1907]], device='cuda:0'), pred_original_sample=tensor([[-0.3647,  0.2851],
        [-0.9192,  0.1938]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4893,  0.2790],
        [-1.1618,  0.2690]], device='cuda:0'), pred_original_sample=tensor([[-0.3641,  0.2587],
        [-0.9661,  0.1991]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4298,  0.2805],
        [-1.1724,  0.1901]], device='cuda:0'), pred_original_sample=tensor([[-0.3271,  0.2458],
        [-0.9414,  0.1542]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5103,  0.2220],
        [-1.1476,  0.2015]], device='cuda:0'), pred_original_sample=tensor([[-0.3507,  0.2298],
        [-0.9411,  0.1522]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4620,  0.0930],
        [-1.0970,  0.1432]], device='cuda:0'), pred_original_sample=tensor([[-0.3734,  0.0896],
        [-0.9416,  0.1519]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5004,  0.1180],
        [-1.0222,  0.2991]], device='cuda:0'), pred_original_sample=tensor([[-0.4137,  0.0858],
        [-0.8912,  0.2104]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4729,  0.0851],
        [-1.0622,  0.3004]], device='cuda:0'), pred_original_sample=tensor([[-0.4207,  0.0788],
        [-0.8567,  0.2227]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4939,  0.0118],
        [-0.9964,  0.1801]], device='cuda:0'), pred_original_sample=tensor([[-0.5078,  0.0995],
        [-0.8076,  0.2426]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5328,  0.0707],
        [-1.0185,  0.3366]], device='cuda:0'), pred_original_sample=tensor([[-0.5261,  0.0715],
        [-0.8135,  0.2470]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4932,  0.0685],
        [-1.0178,  0.3974]], device='cuda:0'), pred_original_sample=tensor([[-0.5419,  0.0887],
        [-0.7765,  0.2637]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5488,  0.0875],
        [-0.9461,  0.3537]], device='cuda:0'), pred_original_sample=tensor([[-0.4438,  0.0856],
        [-0.7703,  0.2495]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4977,  0.0567],
        [-1.0624,  0.3920]], device='cuda:0'), pred_original_sample=tensor([[-0.4524,  0.0745],
        [-0.8550,  0.2790]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5660,  0.0958],
        [-1.0225,  0.2480]], device='cuda:0'), pred_original_sample=tensor([[-0.5032,  0.1218],
        [-0.8194,  0.2263]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5573,  0.1634],
        [-1.0360,  0.2528]], device='cuda:0'), pred_original_sample=tensor([[-0.4963,  0.0938],
        [-0.8555,  0.2316]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6767,  0.2487],
        [-0.8744,  0.1791]], device='cuda:0'), pred_original_sample=tensor([[-0.5457,  0.1727],
        [-0.7457,  0.2283]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6964,  0.2210],
        [-0.9154,  0.2319]], device='cuda:0'), pred_original_sample=tensor([[-0.5743,  0.1519],
        [-0.7580,  0.2466]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7483,  0.3874],
        [-0.8750,  0.2148]], device='cuda:0'), pred_original_sample=tensor([[-0.5976,  0.2119],
        [-0.7447,  0.2302]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7628,  0.2473],
        [-0.9383,  0.2616]], device='cuda:0'), pred_original_sample=tensor([[-0.6179,  0.1520],
        [-0.7816,  0.1830]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6801,  0.1325],
        [-0.9227,  0.2429]], device='cuda:0'), pred_original_sample=tensor([[-0.6093,  0.1574],
        [-0.7788,  0.1948]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6920,  0.2133],
        [-0.9932,  0.1283]], device='cuda:0'), pred_original_sample=tensor([[-0.5890,  0.1153],
        [-0.8441,  0.1737]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6706,  0.2029],
        [-1.0486,  0.1863]], device='cuda:0'), pred_original_sample=tensor([[-0.5873,  0.1490],
        [-0.8910,  0.1670]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5114,  0.1851],
        [-1.0911,  0.1861]], device='cuda:0'), pred_original_sample=tensor([[-0.4934,  0.1640],
        [-0.9449,  0.1688]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5337,  0.1718],
        [-1.0670,  0.2279]], device='cuda:0'), pred_original_sample=tensor([[-0.4718,  0.1869],
        [-0.9247,  0.2125]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5381,  0.2082],
        [-1.1360,  0.1913]], device='cuda:0'), pred_original_sample=tensor([[-0.4929,  0.1743],
        [-0.9764,  0.1780]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5839,  0.2768],
        [-1.1843,  0.1604]], device='cuda:0'), pred_original_sample=tensor([[-0.4978,  0.2026],
        [-0.9807,  0.1521]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4840,  0.2191],
        [-1.1670,  0.1875]], device='cuda:0'), pred_original_sample=tensor([[-0.4606,  0.1982],
        [-1.0000,  0.1690]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4543,  0.2394],
        [-1.0737,  0.1797]], device='cuda:0'), pred_original_sample=tensor([[-0.4299,  0.2073],
        [-0.9825,  0.1922]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4838,  0.2489],
        [-1.0697,  0.2858]], device='cuda:0'), pred_original_sample=tensor([[-0.4116,  0.2023],
        [-0.9485,  0.2017]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4469,  0.1990],
        [-1.0926,  0.2405]], device='cuda:0'), pred_original_sample=tensor([[-0.3652,  0.2197],
        [-0.9684,  0.2017]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4032,  0.2799],
        [-1.0103,  0.2192]], device='cuda:0'), pred_original_sample=tensor([[-0.3414,  0.2482],
        [-0.8895,  0.1875]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4181,  0.2584],
        [-1.0723,  0.2136]], device='cuda:0'), pred_original_sample=tensor([[-0.3367,  0.2611],
        [-0.9123,  0.2181]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4428,  0.2507],
        [-1.0811,  0.2033]], device='cuda:0'), pred_original_sample=tensor([[-0.4109,  0.2224],
        [-0.9504,  0.2028]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5292,  0.2823],
        [-1.1377,  0.2310]], device='cuda:0'), pred_original_sample=tensor([[-0.3895,  0.2655],
        [-0.9641,  0.1918]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4518,  0.2777],
        [-1.0304,  0.3096]], device='cuda:0'), pred_original_sample=tensor([[-0.3750,  0.2716],
        [-0.9615,  0.2047]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4320,  0.3641],
        [-1.1777,  0.1936]], device='cuda:0'), pred_original_sample=tensor([[-0.3574,  0.3108],
        [-1.0000,  0.1890]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3767,  0.3591],
        [-1.1591,  0.1520]], device='cuda:0'), pred_original_sample=tensor([[-0.3153,  0.3416],
        [-1.0000,  0.1892]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4111,  0.2871],
        [-1.2208,  0.2943]], device='cuda:0'), pred_original_sample=tensor([[-0.3107,  0.2878],
        [-1.0000,  0.1906]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3457,  0.3050],
        [-1.1526,  0.2650]], device='cuda:0'), pred_original_sample=tensor([[-0.3330,  0.2896],
        [-1.0000,  0.2008]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3828,  0.3556],
        [-1.1568,  0.1357]], device='cuda:0'), pred_original_sample=tensor([[-0.3222,  0.3167],
        [-1.0000,  0.1533]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4227,  0.3437],
        [-1.1489,  0.1587]], device='cuda:0'), pred_original_sample=tensor([[-0.3494,  0.3521],
        [-1.0000,  0.1316]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5192,  0.3634],
        [-1.1120,  0.0857]], device='cuda:0'), pred_original_sample=tensor([[-0.4329,  0.3571],
        [-0.9790,  0.1262]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5297,  0.3131],
        [-1.1775,  0.0654]], device='cuda:0'), pred_original_sample=tensor([[-0.4457,  0.3063],
        [-1.0000,  0.1451]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5380,  0.3683],
        [-1.1903,  0.0921]], device='cuda:0'), pred_original_sample=tensor([[-0.4528,  0.3034],
        [-1.0000,  0.0850]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4066,  0.2535],
        [-1.1641,  0.0775]], device='cuda:0'), pred_original_sample=tensor([[-0.4518,  0.3058],
        [-1.0000,  0.0684]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4728,  0.4116],
        [-1.1509,  0.0520]], device='cuda:0'), pred_original_sample=tensor([[-0.4600,  0.3663],
        [-1.0000,  0.0223]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5748,  0.3799],
        [-1.1029,  0.0059]], device='cuda:0'), pred_original_sample=tensor([[-0.5220,  0.3566],
        [-0.9693,  0.0301]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7007,  0.4605],
        [-1.1168,  0.0912]], device='cuda:0'), pred_original_sample=tensor([[-0.5689,  0.4079],
        [-0.9550,  0.0493]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7064,  0.4880],
        [-1.1621,  0.0669]], device='cuda:0'), pred_original_sample=tensor([[-0.6030,  0.4052],
        [-1.0000,  0.0806]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7114,  0.4664],
        [-1.1787,  0.0107]], device='cuda:0'), pred_original_sample=tensor([[-0.6079,  0.4291],
        [-1.0000,  0.0440]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6991,  0.3611],
        [-1.1335,  0.0768]], device='cuda:0'), pred_original_sample=tensor([[-0.5911,  0.3855],
        [-1.0000,  0.0602]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6962,  0.3229],
        [-1.1716,  0.0765]], device='cuda:0'), pred_original_sample=tensor([[-0.6326,  0.3484],
        [-1.0000,  0.0522]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7521,  0.3759],
        [-1.1686, -0.0446]], device='cuda:0'), pred_original_sample=tensor([[-0.6495,  0.3647],
        [-1.0000,  0.0254]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6929,  0.3323],
        [-1.2365, -0.0300]], device='cuda:0'), pred_original_sample=tensor([[-0.6159,  0.3724],
        [-1.0000, -0.0069]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-6.3510e-01,  4.7900e-01],
        [-1.2441e+00, -2.2744e-04]], device='cuda:0'), pred_original_sample=tensor([[-0.6119,  0.4294],
        [-1.0000,  0.0224]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7618,  0.3702],
        [-1.3910,  0.0205]], device='cuda:0'), pred_original_sample=tensor([[-0.6530,  0.3553],
        [-1.0000,  0.0212]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6934,  0.3441],
        [-1.2510, -0.0743]], device='cuda:0'), pred_original_sample=tensor([[-0.6042,  0.3772],
        [-1.0000, -0.0024]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7153,  0.4353],
        [-1.2506, -0.0074]], device='cuda:0'), pred_original_sample=tensor([[-0.6146,  0.4176],
        [-1.0000, -0.0037]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6585,  0.3956],
        [-1.2968, -0.0340]], device='cuda:0'), pred_original_sample=tensor([[-0.6473,  0.3914],
        [-1.0000, -0.0042]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7007,  0.3974],
        [-1.2606, -0.0602]], device='cuda:0'), pred_original_sample=tensor([[-0.6554,  0.3581],
        [-1.0000, -0.0022]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7595,  0.3429],
        [-1.3256,  0.0242]], device='cuda:0'), pred_original_sample=tensor([[-0.6941,  0.3394],
        [-1.0000,  0.0550]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7767,  0.3495],
        [-1.3223, -0.0224]], device='cuda:0'), pred_original_sample=tensor([[-0.6836,  0.3552],
        [-1.0000,  0.0140]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7303,  0.3180],
        [-1.3597, -0.0047]], device='cuda:0'), pred_original_sample=tensor([[-0.6535,  0.3614],
        [-1.0000,  0.0198]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7426,  0.3855],
        [-1.3705, -0.0087]], device='cuda:0'), pred_original_sample=tensor([[-0.6547,  0.3800],
        [-1.0000, -0.0012]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7114,  0.4296],
        [-1.3167, -0.0729]], device='cuda:0'), pred_original_sample=tensor([[-0.6563,  0.3930],
        [-1.0000, -0.0225]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6997,  0.4137],
        [-1.4164,  0.0021]], device='cuda:0'), pred_original_sample=tensor([[-0.6599,  0.3629],
        [-1.0000,  0.0211]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7364,  0.3531],
        [-1.2904,  0.0482]], device='cuda:0'), pred_original_sample=tensor([[-0.6659,  0.3653],
        [-1.0000,  0.0541]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6892,  0.3065],
        [-1.2264,  0.1047]], device='cuda:0'), pred_original_sample=tensor([[-0.6132,  0.3260],
        [-1.0000,  0.1104]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5905,  0.3151],
        [-1.1952,  0.0831]], device='cuda:0'), pred_original_sample=tensor([[-0.5864,  0.2960],
        [-1.0000,  0.1055]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5780,  0.3346],
        [-1.2162,  0.0595]], device='cuda:0'), pred_original_sample=tensor([[-0.5113,  0.2753],
        [-1.0000,  0.0894]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5094,  0.2914],
        [-1.1614,  0.0891]], device='cuda:0'), pred_original_sample=tensor([[-0.5045,  0.2886],
        [-1.0000,  0.0870]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6034,  0.2928],
        [-1.0510,  0.0985]], device='cuda:0'), pred_original_sample=tensor([[-0.5466,  0.2863],
        [-1.0000,  0.1038]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5920,  0.2604],
        [-1.1254,  0.1221]], device='cuda:0'), pred_original_sample=tensor([[-0.5177,  0.2791],
        [-1.0000,  0.1259]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5871,  0.3069],
        [-1.0910,  0.1356]], device='cuda:0'), pred_original_sample=tensor([[-0.5433,  0.2953],
        [-1.0000,  0.1025]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5259,  0.2839],
        [-1.1116,  0.0462]], device='cuda:0'), pred_original_sample=tensor([[-0.5062,  0.2685],
        [-0.9990,  0.0806]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5457,  0.2761],
        [-1.0839,  0.0031]], device='cuda:0'), pred_original_sample=tensor([[-0.4895,  0.2910],
        [-1.0000,  0.0478]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5083,  0.2775],
        [-1.1148,  0.0218]], device='cuda:0'), pred_original_sample=tensor([[-0.4741,  0.2649],
        [-1.0000,  0.0505]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5187,  0.2436],
        [-1.0809,  0.0245]], device='cuda:0'), pred_original_sample=tensor([[-0.4768,  0.2566],
        [-1.0000,  0.0479]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5050,  0.3026],
        [-1.0644,  0.0135]], device='cuda:0'), pred_original_sample=tensor([[-0.4579,  0.2742],
        [-1.0000,  0.0047]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5305,  0.2501],
        [-1.1208, -0.0259]], device='cuda:0'), pred_original_sample=tensor([[-0.4794,  0.2700],
        [-1.0000,  0.0076]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4767,  0.3522],
        [-1.1181, -0.0337]], device='cuda:0'), pred_original_sample=tensor([[-0.4874,  0.3510],
        [-1.0000,  0.0128]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5070,  0.3724],
        [-1.1668, -0.0153]], device='cuda:0'), pred_original_sample=tensor([[-0.5145,  0.3397],
        [-1.0000,  0.0041]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5237,  0.3881],
        [-1.0968,  0.0293]], device='cuda:0'), pred_original_sample=tensor([[-0.5266,  0.3508],
        [-0.9996,  0.0160]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5357,  0.3650],
        [-1.0565,  0.0164]], device='cuda:0'), pred_original_sample=tensor([[-0.5694,  0.3175],
        [-0.9592,  0.0461]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5860,  0.3510],
        [-1.0199,  0.0227]], device='cuda:0'), pred_original_sample=tensor([[-0.5670,  0.3390],
        [-0.9809,  0.0522]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5954,  0.3129],
        [-1.0402,  0.0082]], device='cuda:0'), pred_original_sample=tensor([[-0.5761,  0.3457],
        [-1.0000,  0.0334]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6486,  0.2916],
        [-1.0900, -0.0191]], device='cuda:0'), pred_original_sample=tensor([[-0.5554,  0.2731],
        [-1.0000,  0.0093]], device='cuda:0'))
0it [00:00, ?it/s]
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8824,  0.7410],
        [ 0.0118, -1.0438]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.9632,  1.1007],
        [-0.1272, -1.3313]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.0029,  0.5973],
        [-0.2588, -1.0990]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000, -0.2693],
        [-1.0000, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.1881,  0.4436],
        [-0.2374, -1.3127]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.3717,  0.6747],
        [-0.2039, -1.3799]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.4315,  0.6183],
        [-0.3959, -1.1841]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.5157,  1.0913],
        [-0.3067, -0.9445]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.6043,  0.6542],
        [ 0.0563, -0.4994]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.6098,  0.6801],
        [-0.6000, -0.7449]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.3128,  0.9289],
        [-0.4780, -0.2595]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.6351,  0.8432],
        [-0.4686, -0.4006]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.3844,  0.9624],
        [-0.5005, -0.3122]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [ 1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.2410,  0.7486],
        [-0.5679, -0.1902]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [ 1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.1729,  0.7604],
        [-0.6104, -0.5239]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.0603,  0.9613],
        [-0.6123, -0.4566]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [ 1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8126,  1.0238],
        [-0.3733, -0.3657]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7893,  0.7528],
        [-0.3146, -0.1996]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8682,  1.1815],
        [ 0.3989, -0.1924]], device='cuda:0'), pred_original_sample=tensor([[ 1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8549,  0.5735],
        [ 0.0672, -0.4393]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 1.0000],
        [0.9864, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8053,  0.8271],
        [-0.0386, -0.3681]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.0357,  0.6920],
        [ 0.0305, -0.7100]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.5073, 0.8577],
        [0.0353, 0.0429]], device='cuda:0'), pred_original_sample=tensor([[ 1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6462,  0.6774],
        [-0.0601, -0.3285]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5006,  0.9309],
        [ 0.0937, -0.1025]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3779,  0.9438],
        [ 0.4588, -0.5172]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6424,  0.7241],
        [ 0.2900, -0.3122]], device='cuda:0'), pred_original_sample=tensor([[-0.7237, -1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4339,  0.6301],
        [-0.0300, -0.2977]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-1.0000, -0.1074]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5606,  0.3698],
        [-0.0187, -0.4973]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7709,  0.6383],
        [-0.0523, -0.3230]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7086,  0.5181],
        [ 0.2018, -0.3446]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5330,  0.6371],
        [-0.0355, -0.3207]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5509,  0.7290],
        [-0.0622, -0.3864]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6637,  1.0163],
        [ 0.2031, -0.3242]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3863,  0.8912],
        [-0.0209, -0.4630]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5942,  0.4291],
        [-0.0746, -0.3409]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3411,  0.5479],
        [ 0.3782, -0.2008]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0842,  0.8917],
        [ 0.1189, -0.2876]], device='cuda:0'), pred_original_sample=tensor([[ 1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1934,  0.6581],
        [ 0.0931, -0.2524]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1507,  0.7508],
        [ 0.0386, -0.2300]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.0022, 0.5288],
        [0.6475, 0.0916]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3918,  0.5485],
        [ 0.6588, -0.1485]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2383,  0.8361],
        [ 0.8312, -0.0928]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  1.0000],
        [-1.0000,  0.6451]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1824,  0.4875],
        [ 0.7982, -0.3808]], device='cuda:0'), pred_original_sample=tensor([[ 1., -1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0065,  0.6361],
        [ 0.5313, -0.7213]], device='cuda:0'), pred_original_sample=tensor([[ 1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0579,  0.6836],
        [ 0.6442, -0.3546]], device='cuda:0'), pred_original_sample=tensor([[ 1., -1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2651,  0.7377],
        [ 0.4232, -0.4434]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1227,  0.5015],
        [ 0.1126, -0.4412]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [ 0.9355, -0.1264]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0402,  0.5674],
        [ 0.1666, -0.3480]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000, -1.0000],
        [ 0.6326,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1618,  0.8994],
        [-0.0252, -0.2611]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2133,  0.5891],
        [ 0.0276, -0.1900]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3078,  0.3323],
        [-0.2495, -0.4746]], device='cuda:0'), pred_original_sample=tensor([[-0.5880,  1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3869,  0.6169],
        [ 0.1617, -0.2654]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0963,  0.5983],
        [ 0.0332, -0.5694]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6337,  0.5943],
        [ 0.3039, -0.6525]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6107,  0.5686],
        [ 0.0407, -0.4878]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  1.0000],
        [-1.0000,  0.2382]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3313,  0.5985],
        [ 0.1710, -0.3679]], device='cuda:0'), pred_original_sample=tensor([[ 0.3535,  1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0986,  0.7420],
        [ 0.1513, -0.4111]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2710,  0.6139],
        [ 0.1420, -0.0874]], device='cuda:0'), pred_original_sample=tensor([[ 1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1223,  0.5878],
        [ 0.2346, -0.4039]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  0.0848],
        [-0.3026,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1219,  0.3630],
        [ 0.2043, -0.3008]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2381,  0.1847],
        [ 0.1509, -0.4277]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1218,  0.1960],
        [ 0.4500, -0.5838]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [ 1.0000,  0.0952]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1087,  0.3253],
        [ 0.2893, -0.3243]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1587,  0.3825],
        [ 0.3555, -0.7198]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1739,  0.4265],
        [ 0.3994, -0.4816]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0422,  0.3720],
        [ 0.6178, -0.5913]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [ 1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2867,  0.8738],
        [ 0.6183, -0.5344]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3734,  0.4009],
        [ 0.3293, -0.4382]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2402,  0.7383],
        [ 0.4455, -0.2613]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1877,  0.6438],
        [ 0.1764, -0.2116]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0035,  0.6347],
        [ 0.1961, -0.1529]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2975,  0.3665],
        [ 0.0656, -0.2818]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0878,  0.4783],
        [ 0.3402, -0.5674]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0487,  0.4684],
        [ 0.2799, -0.1252]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2797,  0.5779],
        [ 0.3100, -0.3804]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.1698, 0.4197],
        [0.2685, 0.0523]], device='cuda:0'), pred_original_sample=tensor([[-0.7873, -1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2884,  0.4232],
        [ 0.4534, -0.2692]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3416,  0.1978],
        [ 0.5102, -0.3558]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.5075]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3316, -0.1141],
        [ 0.4831, -0.5881]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2245, -0.0039],
        [ 0.5728, -0.6339]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2857, -0.0319],
        [ 0.6289, -0.0948]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5394, -0.2287],
        [ 0.7831, -0.2644]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6163, -0.1650],
        [ 0.6543, -0.2279]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4784,  0.0516],
        [ 0.9098, -0.4512]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [ 0.2680, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5724,  0.1335],
        [ 0.8215, -0.3569]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3160,  0.3377],
        [ 0.5953, -0.4438]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0562, -0.1796],
        [ 0.5992,  0.0163]], device='cuda:0'), pred_original_sample=tensor([[ 1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0713, -0.1809],
        [ 0.9359,  0.0107]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0971, -0.1917],
        [ 0.8889, -0.2626]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1381, -0.1759],
        [ 1.1454, -0.3503]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4325, -0.0881],
        [ 0.9574, -0.5633]], device='cuda:0'), pred_original_sample=tensor([[ 1., -1.],
        [ 1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2005, -0.0626],
        [ 0.8834,  0.0052]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-1.0000, -0.7400]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1888, -0.0040],
        [ 0.8318, -0.1099]], device='cuda:0'), pred_original_sample=tensor([[ 1., -1.],
        [ 1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1019, -0.3618],
        [ 0.4434, -0.4671]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-0.8518, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0200, -0.4534],
        [ 0.6844, -0.6869]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [ 1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1682, -0.5798],
        [ 0.5383, -0.6961]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [ 1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1831, -0.7884],
        [ 0.8078, -0.8023]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-0.5161, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3355, -0.5187],
        [ 0.7843, -0.5333]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [ 1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3878, -0.4950],
        [ 0.9528, -1.0564]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.0913]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0619, -0.3955],
        [ 0.5233, -0.9492]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [ 1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4380, -0.8970],
        [ 0.5774, -0.9382]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1424, -0.7189],
        [ 0.3572, -1.0178]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5866, -0.8876],
        [ 0.0924, -1.1329]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3331, -0.4679],
        [ 0.2167, -1.0227]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [ 1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0200, -0.5009],
        [ 0.4881, -0.5340]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6230, -0.2532],
        [ 0.0490, -0.5449]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7114, -0.6147],
        [ 0.2725, -0.5519]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4061, -0.4805],
        [ 0.5142, -0.3773]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [ 0.2415,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.3323, -0.6753],
        [ 0.4320, -0.2515]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000,  0.3578]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6921, -0.8006],
        [ 0.2287, -0.2618]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6984, -0.8741],
        [ 0.2235, -0.3155]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4434, -0.8169],
        [ 0.3631, -0.1943]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4483, -1.1486],
        [ 0.1059, -0.1842]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4572, -0.6165],
        [ 0.2527, -0.3098]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5769, -0.6616],
        [ 0.4251, -0.4526]], device='cuda:0'), pred_original_sample=tensor([[ 1., -1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8605, -0.9126],
        [ 0.5042, -0.5690]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000, -0.2929]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9784, -0.9487],
        [ 0.2915, -0.3610]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8815, -0.6065],
        [ 0.2641, -0.3153]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9466, -0.6175],
        [ 0.5419, -0.1673]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.8760],
        [ 0.3653,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8111, -0.4907],
        [ 0.4708, -0.1204]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5385, -0.6067],
        [ 0.4885,  0.0020]], device='cuda:0'), pred_original_sample=tensor([[ 1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4368, -0.3253],
        [ 0.5732, -0.1235]], device='cuda:0'), pred_original_sample=tensor([[ 0.3075, -1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8183, -0.3222],
        [ 0.5550,  0.1255]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7053, -0.1249],
        [ 0.4933, -0.0520]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6358, -0.1993],
        [ 0.4573, -0.2616]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6435, -0.1953],
        [ 0.4623, -0.1928]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-1.0000,  0.2481]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5360, -0.4396],
        [ 0.1043, -0.1709]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8426, -0.0917],
        [ 0.2984, -0.1828]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-0.8878,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9322, -0.4827],
        [ 0.0924, -0.0868]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9453, -0.3407],
        [ 0.1839,  0.0229]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-0.5976,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7702, -0.4205],
        [ 0.1156, -0.0738]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.3180],
        [ 1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8958, -0.1626],
        [ 0.2561, -0.3436]], device='cuda:0'), pred_original_sample=tensor([[-0.9395, -1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9210, -0.0039],
        [ 0.1380, -0.2608]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.2700],
        [ 1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8127, -0.8813],
        [ 0.5773, -0.1491]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.4352],
        [ 1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.0425, -0.7080],
        [ 0.2374, -0.1989]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-0.8906,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9155, -0.6962],
        [ 0.4687, -0.3238]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8038, -0.5912],
        [ 0.7065,  0.0089]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7261, -0.3960],
        [ 0.6257,  0.1918]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.4969],
        [-0.3781,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5711, -0.4432],
        [ 0.9453,  0.4492]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8391,  0.1410],
        [ 0.8291,  0.5949]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9834, -0.4494],
        [ 0.8459,  0.3232]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.2435, -0.1854],
        [ 0.4800,  0.2373]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [ 0.4724, -0.8765]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9910,  0.0650],
        [ 0.8275,  0.2014]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8997,  0.6134],
        [ 0.8256,  0.3537]], device='cuda:0'), pred_original_sample=tensor([[-0.7021,  1.0000],
        [-1.0000,  0.6112]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9776,  0.3809],
        [ 0.7778,  0.3745]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.1912,  0.4678],
        [ 0.4252,  0.3501]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.1256,  0.4758],
        [ 0.5083,  0.2290]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.1062,  0.4443],
        [ 0.7768,  0.0780]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.1927,  0.6736],
        [ 0.9147, -0.1426]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.1552],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9902,  0.1700],
        [ 1.2287, -0.0259]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.3384,  0.0660],
        [ 1.2690,  0.0753]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-0.7973,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.0779,  0.3585],
        [ 1.2132, -0.2011]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.0022, -0.0919],
        [ 1.5174, -0.2130]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.1279,  0.2255],
        [ 1.1794, -0.0750]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [ 0.2759, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.0825,  0.2843],
        [ 1.1866, -0.1037]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-1.0000,  0.2864]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.4378,  0.2333],
        [ 1.2130, -0.1156]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.2510,  0.1116],
        [ 0.9825, -0.1174]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-0.8042,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9109,  0.1629],
        [ 0.7719, -0.1661]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8531, -0.0824],
        [ 0.9322, -0.3615]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-0.6257, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6093,  0.1252],
        [ 1.1571, -0.2440]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6276, -0.3736],
        [ 0.9760, -0.2394]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8144,  0.2728],
        [ 1.2055, -0.4258]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-0.2329, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8545,  0.1233],
        [ 1.2033, -0.4012]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-0.6365, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6079, -0.0161],
        [ 1.3848,  0.0526]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.8202,  0.1040],
        [ 1.0818, -0.2122]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7314,  0.3236],
        [ 1.2954, -0.0044]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-1.0000,  0.7916]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4338,  0.4295],
        [ 1.2343, -0.2358]], device='cuda:0'), pred_original_sample=tensor([[-0.0425, -1.0000],
        [ 0.6293, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6879,  0.3389],
        [ 1.2594, -0.2966]], device='cuda:0'), pred_original_sample=tensor([[-0.7541, -1.0000],
        [-0.1131, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7694,  0.4269],
        [ 0.9391, -0.3523]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [ 1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.0243,  0.3408],
        [ 1.0251, -0.0897]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [-1.0000, -0.1038]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7089,  0.1514],
        [ 1.2359, -0.0654]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.0509,  0.2105],
        [ 0.7440, -0.1210]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9228, -0.1168],
        [ 0.6433, -0.0844]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.2072,  0.0253],
        [ 0.8136, -0.0494]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.1205,  0.2585],
        [ 0.5921, -0.1789]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-1.0000,  0.5563]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.0643,  0.4782],
        [ 0.3291,  0.0416]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [ 0.0108,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7680,  0.1936],
        [ 0.8540,  0.1166]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-0.7916,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9288,  0.0261],
        [ 0.9646,  0.1662]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.0422, -0.1183],
        [ 0.7084,  0.3137]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-0.8243,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.9395, -0.0333],
        [ 0.6711,  0.4170]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6720, -0.0265],
        [ 0.7476,  0.1605]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6284,  0.0120],
        [ 0.7687,  0.5562]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [-0.2297,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3969,  0.1106],
        [ 0.6476,  0.4756]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4983,  0.2189],
        [ 0.7511,  0.4563]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4525,  0.4598],
        [ 1.0809,  0.2917]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4797,  0.2886],
        [ 1.0834,  0.6558]], device='cuda:0'), pred_original_sample=tensor([[-1., -1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0772,  0.1920],
        [ 0.9422,  0.6411]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3791,  0.4049],
        [ 1.0217,  0.2828]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6537,  0.6650],
        [ 0.7746,  0.0834]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-1.0626,  0.4474],
        [ 0.5377,  0.3818]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -1.0000],
        [ 0.4814,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7834,  0.4660],
        [ 0.6625,  0.4854]], device='cuda:0'), pred_original_sample=tensor([[-0.9515, -1.0000],
        [ 0.2314, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7401,  0.4155],
        [ 0.7872,  0.5275]], device='cuda:0'), pred_original_sample=tensor([[ 0.4350, -1.0000],
        [-0.8939,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5264,  0.7510],
        [ 0.6048,  0.4228]], device='cuda:0'), pred_original_sample=tensor([[-0.8163,  0.7799],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4601,  0.5002],
        [ 0.8079, -0.0411]], device='cuda:0'), pred_original_sample=tensor([[-0.9593,  1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5572,  0.8809],
        [ 0.7612, -0.1602]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4792,  0.6547],
        [ 0.5859,  0.2022]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2257,  0.8177],
        [ 0.6734,  0.1851]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5633,  1.2246],
        [ 0.9875,  0.1568]], device='cuda:0'), pred_original_sample=tensor([[ 0.3746,  1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.7798,  0.9319],
        [ 0.6352,  0.2134]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 1.0000],
        [0.2026, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4776,  0.4932],
        [ 0.4511,  0.1074]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.5493,  0.9749],
        [ 0.5843,  0.1390]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4556,  1.0883],
        [ 0.4563,  0.0681]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 1.0000],
        [0.2621, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2445,  0.6820],
        [ 0.5276,  0.1871]], device='cuda:0'), pred_original_sample=tensor([[ 0.4941, -1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.6744,  1.0192],
        [ 0.5104,  0.0852]], device='cuda:0'), pred_original_sample=tensor([[ 0.6890,  1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2391,  1.2086],
        [ 0.6215,  0.2116]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3468,  0.9819],
        [ 0.4613,  0.5037]], device='cuda:0'), pred_original_sample=tensor([[-1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0249,  1.2828],
        [ 0.0985,  0.1255]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  1.0000],
        [-1.0000, -0.9850]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3489,  1.5281],
        [ 0.0820,  0.0585]], device='cuda:0'), pred_original_sample=tensor([[-0.6828,  0.4137],
        [-1.0000, -0.0772]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0658,  1.6594],
        [ 0.0588,  0.3051]], device='cuda:0'), pred_original_sample=tensor([[-0.0218,  1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2245,  1.5904],
        [-0.1597,  0.2007]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0822,  1.5064],
        [ 0.3941,  0.4789]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3577,  1.5133],
        [ 0.5315,  0.6541]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000, -0.1071],
        [ 1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.1781, 1.5426],
        [0.2381, 0.7449]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 0.7924],
        [0.9129, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0227,  1.5327],
        [ 0.2890,  0.7231]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1060,  1.8045],
        [ 0.1257,  0.9934]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 1.0000],
        [0.9247, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1740,  1.5516],
        [ 0.6861,  0.9799]], device='cuda:0'), pred_original_sample=tensor([[ 1., -1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0920,  1.4501],
        [ 0.3764,  0.8855]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 1.0000],
        [1.0000, 0.9325]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.1110, 1.3967],
        [0.5942, 1.2776]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [ 1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.2776, 1.2038],
        [0.7639, 1.0563]], device='cuda:0'), pred_original_sample=tensor([[ 1., -1.],
        [ 1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.3020, 1.4807],
        [0.1216, 1.0801]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [ 0.7840,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.3227, 1.2487],
        [0.4639, 0.9123]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000, -1.0000],
        [-0.1861,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.1867, 1.4543],
        [0.6032, 0.9961]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [ 1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.0644, 1.3087],
        [0.5376, 1.1355]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.2818, 1.3905],
        [0.5093, 1.1319]], device='cuda:0'), pred_original_sample=tensor([[-0.3479,  1.0000],
        [ 1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.0954, 1.5881],
        [0.6359, 1.4481]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.2862],
        [ 1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1100,  1.7283],
        [ 0.4649,  1.3873]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000, -1.0000],
        [ 1.0000,  0.3840]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.1271, 1.8729],
        [0.4192, 1.5989]], device='cuda:0'), pred_original_sample=tensor([[-0.4905,  1.0000],
        [ 0.2361, -0.2578]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.2924,  1.9655],
        [ 0.4945,  1.6344]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1544,  1.8594],
        [ 0.3602,  1.7738]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 1.0000],
        [1.0000, 0.3438]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3628,  1.8446],
        [ 0.1028,  1.6697]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.4609,  1.5371],
        [ 0.0386,  1.6472]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000, -0.7191],
        [ 1.0000, -0.2044]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3115,  1.5341],
        [ 0.0293,  1.5308]], device='cuda:0'), pred_original_sample=tensor([[-0.4834,  0.4372],
        [ 1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3183,  1.5913],
        [ 0.0831,  1.7074]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.3586,  1.8239],
        [-0.2658,  1.1814]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 0.2082],
        [1.0000, 0.5990]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1138,  2.1132],
        [-0.2972,  1.2708]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  1.0000],
        [-0.3247,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0112,  1.9387],
        [-0.1910,  1.3570]], device='cuda:0'), pred_original_sample=tensor([[ 0.8678,  1.0000],
        [ 1.0000, -0.4768]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0263,  1.8962],
        [-0.1724,  1.5129]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000, -0.0629],
        [ 1.0000, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.0433, 2.0045],
        [0.0168, 1.3963]], device='cuda:0'), pred_original_sample=tensor([[0.0091, 1.0000],
        [1.0000, 0.1461]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2299,  2.1616],
        [-0.2772,  1.4806]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  1.0000],
        [-0.9710,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5955,  2.0182],
        [-0.3287,  1.7397]], device='cuda:0'), pred_original_sample=tensor([[ 0.1280,  1.0000],
        [ 1.0000, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5251,  2.2245],
        [-0.2878,  1.6120]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [ 1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.5228, 2.0199],
        [0.0428, 1.4770]], device='cuda:0'), pred_original_sample=tensor([[ 0.5008,  1.0000],
        [ 1.0000, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0927,  2.2886],
        [-0.1101,  1.9419]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 1.0000],
        [1.0000, 0.5488]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.3364, 2.1741],
        [0.0055, 1.2580]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1509,  2.0477],
        [-0.1240,  1.5118]], device='cuda:0'), pred_original_sample=tensor([[ 0.1541,  1.0000],
        [ 1.0000, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4889,  2.0265],
        [-0.0855,  1.6495]], device='cuda:0'), pred_original_sample=tensor([[-0.0391,  1.0000],
        [ 1.0000, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5833,  2.1098],
        [-0.0980,  1.5065]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [ 1., -1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7778,  1.8442],
        [-0.0612,  1.8856]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.9503, 1.8065],
        [0.0638, 1.7086]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.9226, 1.6353],
        [0.0640, 1.3468]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8137,  1.5632],
        [-0.0230,  1.3883]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  1.0000],
        [ 1.0000, -0.9200]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.6881, 1.6292],
        [0.1625, 1.2977]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000, -0.8039],
        [ 1.0000, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.6206, 1.4935],
        [0.5420, 1.3569]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  1.0000],
        [ 1.0000, -0.6679]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.4832, 1.4432],
        [0.2578, 0.7060]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  0.8396],
        [ 1.0000, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.5448, 1.4180],
        [0.2917, 0.6868]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.8090, 1.5583],
        [0.2393, 0.8382]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000, -0.2703],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.4031, 1.7726],
        [0.1348, 0.8711]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.6779, 1.6291],
        [0.6240, 0.4654]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  1.0000],
        [-0.3541, -0.6727]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.5091, 1.3070],
        [0.2326, 0.4259]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  0.7184],
        [-0.8994,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.7004, 1.5711],
        [0.3113, 0.4502]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  1.0000],
        [-1.0000,  0.1144]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.7434, 1.6204],
        [0.2165, 0.5590]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.7010, 1.3126],
        [0.3441, 0.5151]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  1.0000],
        [-1.0000,  0.3062]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.8946, 1.4729],
        [0.2855, 0.4884]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  1.0000],
        [-0.4538,  0.6319]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.6151, 1.4378],
        [0.4031, 0.6035]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 0.9058],
        [1.0000, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.6338, 1.4697],
        [0.6529, 0.7599]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 0.8630],
        [1.0000, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.8272, 1.2380],
        [0.6504, 0.7294]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000, -0.5747],
        [-0.9658,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.6634, 1.7341],
        [0.8874, 0.5731]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  1.0000],
        [-0.5036,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.6227, 1.4504],
        [0.7354, 0.7697]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 1.0000],
        [0.8400, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.6294, 1.4601],
        [0.5358, 0.3763]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  1.0000],
        [-0.0867,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.8569, 1.6160],
        [0.9946, 0.8137]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 0.5321],
        [0.1447, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.5876, 1.6579],
        [0.8862, 0.4112]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  0.7582],
        [ 0.9817, -0.3422]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.5095, 1.4859],
        [0.5985, 0.5859]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  0.2079],
        [-1.0000, -0.0516]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.7990, 1.6237],
        [0.8731, 0.7990]], device='cuda:0'), pred_original_sample=tensor([[ 1., -1.],
        [ 1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.7913, 1.4701],
        [0.7118, 0.4403]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  0.5470],
        [ 0.3042, -0.1765]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.0873, 1.4592],
        [0.8299, 0.5042]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  0.5447],
        [-1.0000, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.7375, 1.7303],
        [0.4869, 0.4836]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 0.4195],
        [0.5414, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.5951, 1.2489],
        [0.6329, 0.2912]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000, -0.2602],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.3410, 1.2793],
        [0.8779, 0.2157]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.6979, 1.1148],
        [0.5636, 0.3397]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  0.4860],
        [-1.0000,  0.7132]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.9206, 0.9486],
        [0.6561, 0.3533]], device='cuda:0'), pred_original_sample=tensor([[ 0.6113,  1.0000],
        [ 0.9461, -0.3452]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.1765, 0.9787],
        [0.7207, 0.3066]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.9746, 1.0569],
        [0.8910, 0.2964]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.9169, 0.9637],
        [0.6344, 0.1600]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  1.0000],
        [-0.0426,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.4422, 1.2304],
        [0.7713, 0.4095]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  1.0000],
        [-0.8738,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.0348, 1.4183],
        [0.6262, 0.4332]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  1.0000],
        [-0.5950,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.1816, 1.0165],
        [0.4869, 0.1261]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.0499, 1.1290],
        [0.2608, 0.1609]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  1.0000],
        [-1.0000, -0.5688]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.4211, 1.5356],
        [0.4671, 0.2157]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.1067, 1.8001],
        [0.4881, 0.2668]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  1.0000],
        [-0.6214,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.3531,  1.4232],
        [ 0.3333, -0.2088]], device='cuda:0'), pred_original_sample=tensor([[ 0.8656,  1.0000],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.1102, 1.2763],
        [0.2555, 0.1848]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.9820,  1.3672],
        [ 0.4757, -0.0749]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6449,  1.4424],
        [ 0.6250, -0.0197]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000, -0.1280],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.0110, 1.3987],
        [0.4595, 0.2621]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.0875, 1.2339],
        [0.6204, 0.0724]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.4993, 1.0675],
        [0.4609, 0.2405]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.1900, 1.0947],
        [0.6014, 0.1041]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  1.0000],
        [-0.5335,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.3365, 1.2248],
        [0.9126, 0.3293]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  0.6564],
        [-1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.3593, 1.4321],
        [0.7214, 0.3080]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  1.0000],
        [-0.5141,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.3274, 1.1888],
        [0.7496, 0.2658]], device='cuda:0'), pred_original_sample=tensor([[ 1.,  1.],
        [-1.,  1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.7931, 1.3869],
        [1.0186, 0.4230]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  1.0000],
        [-0.5536,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.6988, 1.3255],
        [0.8550, 0.5399]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 1.0000],
        [0.6656, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.3924, 1.5085],
        [0.8369, 0.6027]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 1.0000],
        [0.0246, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.5011, 1.5085],
        [1.1643, 0.4624]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 1.0000],
        [0.5375, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.3333, 1.6237],
        [1.4602, 0.4909]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.1630, 1.5498],
        [1.5710, 0.6677]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.3605, 1.3218],
        [1.4235, 0.8257]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.3259, 1.5124],
        [1.5939, 0.9636]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.0786, 1.3408],
        [1.5723, 1.0166]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  1.0000],
        [ 1.0000, -0.6327]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.2017, 1.2035],
        [1.3208, 1.2126]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 1.0000],
        [1.0000, 0.3316]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.1101, 1.1617],
        [1.2315, 0.8065]], device='cuda:0'), pred_original_sample=tensor([[-0.2958,  1.0000],
        [ 1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.4288, 1.1650],
        [1.3402, 1.1743]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.1761, 1.3278],
        [1.2607, 1.1465]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.3801, 1.2837],
        [0.8734, 1.0099]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.2546, 1.2373],
        [0.8319, 0.6885]], device='cuda:0'), pred_original_sample=tensor([[ 0.3491,  1.0000],
        [-0.0275,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.4575, 1.0556],
        [0.8416, 0.8585]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 1.0000],
        [0.4768, 0.0859]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.0321, 0.8925],
        [0.8144, 0.8068]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 1.0000],
        [0.4993, 0.1110]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.0108, 1.2045],
        [0.7589, 0.9579]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  1.0000],
        [-0.0639,  0.7105]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.8761, 1.2165],
        [0.6355, 0.9338]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 1.0000],
        [0.9522, 0.7816]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.0353, 1.1034],
        [1.0817, 0.9849]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.1697, 0.9389],
        [1.1377, 1.0404]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 1.0000],
        [1.0000, 0.5351]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.8746, 1.1413],
        [1.3402, 1.0825]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 0.6843],
        [1.0000, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.9723, 1.1908],
        [1.3413, 1.0192]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.9414, 1.5321],
        [1.4432, 1.0421]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.9505, 1.1384],
        [1.2159, 0.9316]], device='cuda:0'), pred_original_sample=tensor([[0.2583, 1.0000],
        [1.0000, 0.5953]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.8587, 1.5872],
        [1.2979, 0.7705]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 0.7885],
        [1.0000, 0.6308]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.9132, 1.4280],
        [1.3659, 0.6400]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.0014, 1.5561],
        [1.0236, 0.8728]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.1023, 1.5232],
        [1.5287, 0.9671]], device='cuda:0'), pred_original_sample=tensor([[0.6124, 1.0000],
        [1.0000, 0.9342]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.1510, 1.1943],
        [1.0825, 0.7926]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 1.0000],
        [1.0000, 0.7388]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.1237, 1.3772],
        [1.2141, 0.8918]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.1816, 1.2911],
        [1.2771, 1.0914]], device='cuda:0'), pred_original_sample=tensor([[0.0252, 1.0000],
        [1.0000, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.0020, 1.4022],
        [1.0520, 1.0102]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  1.0000],
        [ 1.0000, -0.0169]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.0180, 1.2319],
        [0.8222, 0.4708]], device='cuda:0'), pred_original_sample=tensor([[0.4776, 1.0000],
        [0.4458, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.2831, 1.0618],
        [1.0506, 0.5010]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 1.0000],
        [0.5573, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.1537, 1.1284],
        [1.1234, 0.6140]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.4960, 1.0052],
        [1.3025, 0.8856]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 0.2481],
        [0.8126, 0.8015]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.5152, 0.9135],
        [1.1989, 0.5553]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 0.6312],
        [0.4984, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.3023, 1.3291],
        [1.3175, 0.6832]], device='cuda:0'), pred_original_sample=tensor([[0.8503, 1.0000],
        [0.8159, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.0297, 1.3231],
        [0.9456, 0.8190]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 1.0000],
        [0.3873, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.0309, 1.4982],
        [0.9529, 0.3540]], device='cuda:0'), pred_original_sample=tensor([[ 0.1885,  1.0000],
        [-0.2478,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.0448, 1.7666],
        [0.9377, 0.7723]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000, -0.1129],
        [ 1.0000, -0.5285]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.0402, 1.7960],
        [1.1718, 0.5735]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.1143, 1.8100],
        [1.1001, 0.7993]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  1.0000],
        [ 1.0000, -0.3117]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.7949, 1.9243],
        [1.0783, 1.0282]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.6525, 1.9634],
        [1.0712, 1.1065]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.4568, 1.7116],
        [0.8967, 0.7844]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 0.7133],
        [1.0000, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.4896, 1.4433],
        [1.0445, 0.8569]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 0.4018],
        [1.0000, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.9097, 1.3968],
        [1.0959, 0.8098]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 0.3729],
        [1.0000, 0.1680]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.7344, 1.3449],
        [1.1825, 0.7219]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000, -0.0642],
        [ 1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.8832, 1.4431],
        [1.0748, 0.8870]], device='cuda:0'), pred_original_sample=tensor([[0.0486, 1.0000],
        [1.0000, 0.9689]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.6244, 1.1956],
        [1.0055, 0.8995]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000, -0.5008],
        [ 1.0000, -0.0353]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.7247, 1.3551],
        [0.9631, 0.9081]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 0.4596],
        [1.0000, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.7675, 1.0726],
        [1.2205, 1.2046]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000, -0.0515],
        [ 1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.9820, 1.1189],
        [1.3219, 1.1775]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000, -0.6410],
        [ 1.0000,  0.8868]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.6864, 1.2022],
        [1.2569, 1.3490]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 0.0318],
        [1.0000, 0.1886]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.0446, 0.9844],
        [1.2908, 1.3755]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 0.7554],
        [1.0000, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.8614, 0.7364],
        [1.3588, 1.0753]], device='cuda:0'), pred_original_sample=tensor([[0.5607, 0.6828],
        [1.0000, 0.4476]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.7745, 0.8644],
        [1.4876, 0.8188]], device='cuda:0'), pred_original_sample=tensor([[0.9179, 0.4819],
        [1.0000, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.8659, 1.0562],
        [1.1695, 0.8003]], device='cuda:0'), pred_original_sample=tensor([[0.5294, 1.0000],
        [1.0000, 0.7835]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.5830, 0.8319],
        [1.2158, 0.9491]], device='cuda:0'), pred_original_sample=tensor([[-0.2380,  0.8482],
        [ 1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.3545, 1.0557],
        [1.0369, 0.9760]], device='cuda:0'), pred_original_sample=tensor([[1., 1.],
        [1., 1.]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.8357, 0.8814],
        [1.0887, 1.3433]], device='cuda:0'), pred_original_sample=tensor([[0.0604, 0.2146],
        [1.0000, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.5806, 0.4723],
        [1.0987, 1.1453]], device='cuda:0'), pred_original_sample=tensor([[-0.5571,  0.7738],
        [ 1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.5632, 0.8132],
        [1.2643, 0.7794]], device='cuda:0'), pred_original_sample=tensor([[-0.2716,  0.9594],
        [ 1.0000, -0.0744]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.8777, 0.7014],
        [0.9086, 0.9151]], device='cuda:0'), pred_original_sample=tensor([[ 0.2959, -1.0000],
        [ 1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.9530, 0.5032],
        [1.0144, 0.9763]], device='cuda:0'), pred_original_sample=tensor([[0.0322, 1.0000],
        [1.0000, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.1287, 0.2627],
        [0.8487, 0.8007]], device='cuda:0'), pred_original_sample=tensor([[-0.0112,  1.0000],
        [ 0.3295, -0.1266]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.0542, 0.6661],
        [1.0246, 0.8837]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000,  1.0000],
        [ 1.0000, -0.2339]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.7942, 0.4270],
        [1.3707, 0.9809]], device='cuda:0'), pred_original_sample=tensor([[-0.7263,  1.0000],
        [ 1.0000,  0.4417]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.6470, 0.4681],
        [1.2816, 0.8672]], device='cuda:0'), pred_original_sample=tensor([[-0.6701,  1.0000],
        [ 1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.0181, 0.3925],
        [1.1118, 0.7267]], device='cuda:0'), pred_original_sample=tensor([[-0.7596,  1.0000],
        [ 0.9269, -0.1133]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[1.0455, 0.3660],
        [1.1076, 0.9188]], device='cuda:0'), pred_original_sample=tensor([[0.6165, 0.3171],
        [0.7066, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.9253, 0.2114],
        [1.1674, 0.7559]], device='cuda:0'), pred_original_sample=tensor([[-0.4273,  1.0000],
        [ 0.6084,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.6195, 0.2709],
        [1.0360, 0.9410]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [ 0.8736,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.6049, 0.1749],
        [0.7461, 0.9098]], device='cuda:0'), pred_original_sample=tensor([[-0.3302,  1.0000],
        [ 0.9884,  0.6349]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7868, -0.1196],
        [ 0.8982,  0.7953]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [ 0.9403,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.7449, 0.1129],
        [0.9136, 0.9324]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [ 1.0000,  0.5629]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.7422, 0.0897],
        [0.9710, 0.9030]], device='cuda:0'), pred_original_sample=tensor([[-0.3138,  1.0000],
        [ 0.8397,  0.3675]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.8100, 0.2861],
        [0.4319, 0.9325]], device='cuda:0'), pred_original_sample=tensor([[-0.3476,  1.0000],
        [ 1.0000, -0.6144]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6076, -0.0794],
        [ 0.5934,  1.2880]], device='cuda:0'), pred_original_sample=tensor([[-0.1979,  1.0000],
        [ 0.2032,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.5271, 0.0926],
        [0.5283, 1.1065]], device='cuda:0'), pred_original_sample=tensor([[-0.0399,  1.0000],
        [-0.0187,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6175, -0.2941],
        [ 0.2910,  1.1316]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.5063],
        [ 0.7268,  0.1719]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.5076, 0.0869],
        [0.6971, 1.2133]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.7091],
        [-0.4168,  0.2069]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5165, -0.1183],
        [ 0.4610,  1.0090]], device='cuda:0'), pred_original_sample=tensor([[-0.9640,  0.6172],
        [ 1.0000,  0.3389]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.6770, 0.0426],
        [0.8689, 0.9483]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  1.0000],
        [ 0.8987,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[0.5076, 0.1772],
        [0.5874, 0.9939]], device='cuda:0'), pred_original_sample=tensor([[-0.3190,  0.6960],
        [ 1.0000, -0.0318]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4580, -0.0460],
        [ 0.6155,  1.4195]], device='cuda:0'), pred_original_sample=tensor([[-0.0897,  0.0490],
        [ 1.0000, -0.0044]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5343, -0.2288],
        [ 0.7837,  1.1163]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.1708],
        [ 1.0000,  0.6806]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7117, -0.3800],
        [ 0.3067,  1.1136]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.5329],
        [ 1.0000,  0.5813]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8515, -0.1550],
        [ 0.8646,  0.8330]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 0.9254],
        [0.5342, 0.5070]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8595, -0.5747],
        [ 0.5504,  1.1402]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000, -0.2898],
        [ 1.0000, -1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.9069, -0.4240],
        [ 0.5547,  1.2803]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000, -0.4929],
        [-0.0092,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7783, -0.9109],
        [ 0.4988,  1.2589]], device='cuda:0'), pred_original_sample=tensor([[ 0.4505, -0.1973],
        [ 1.0000, -0.6067]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6278, -0.8183],
        [ 0.6140,  1.4198]], device='cuda:0'), pred_original_sample=tensor([[ 0.1410, -1.0000],
        [ 0.1454,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6366, -0.7458],
        [ 0.6820,  0.9916]], device='cuda:0'), pred_original_sample=tensor([[ 0.6749, -0.5883],
        [ 0.6601,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6832, -0.5995],
        [ 0.6531,  0.9868]], device='cuda:0'), pred_original_sample=tensor([[-0.9335,  0.0123],
        [ 0.7529,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6725, -1.1263],
        [ 0.4580,  1.1695]], device='cuda:0'), pred_original_sample=tensor([[-0.5760, -0.0917],
        [ 0.3432,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5635, -0.7258],
        [ 0.4394,  1.4421]], device='cuda:0'), pred_original_sample=tensor([[-0.9363, -0.5962],
        [ 1.0000,  0.4177]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7076, -0.7068],
        [ 0.5229,  1.4401]], device='cuda:0'), pred_original_sample=tensor([[-0.1423, -1.0000],
        [ 1.0000,  0.9620]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8038, -0.6230],
        [ 0.4350,  1.3568]], device='cuda:0'), pred_original_sample=tensor([[ 0.1257, -0.0963],
        [ 1.0000,  0.8465]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7469, -0.6501],
        [ 0.4911,  1.7629]], device='cuda:0'), pred_original_sample=tensor([[-0.6921, -0.3671],
        [ 1.0000,  0.6092]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5631, -0.6499],
        [ 0.5475,  1.2400]], device='cuda:0'), pred_original_sample=tensor([[ 0.0189, -0.2427],
        [ 1.0000,  0.0103]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4527, -0.9515],
        [ 0.8628,  1.0997]], device='cuda:0'), pred_original_sample=tensor([[ 0.2463, -1.0000],
        [ 0.9360,  0.1952]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6495, -0.7506],
        [ 0.9837,  1.2303]], device='cuda:0'), pred_original_sample=tensor([[ 0.0384, -1.0000],
        [ 1.0000,  0.9402]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2663, -0.7153],
        [ 0.9797,  1.0818]], device='cuda:0'), pred_original_sample=tensor([[-0.7246, -1.0000],
        [-0.0374,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3750, -0.6618],
        [ 1.2167,  1.1071]], device='cuda:0'), pred_original_sample=tensor([[-0.6435, -1.0000],
        [ 0.8654,  0.4916]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4103, -0.8717],
        [ 0.7725,  1.0906]], device='cuda:0'), pred_original_sample=tensor([[ 0.0368, -0.3469],
        [ 1.0000,  0.5857]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4159, -0.8882],
        [ 0.7381,  0.8918]], device='cuda:0'), pred_original_sample=tensor([[-0.5148, -0.4401],
        [ 0.0141,  0.1966]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6182, -0.4477],
        [ 0.8551,  1.2160]], device='cuda:0'), pred_original_sample=tensor([[ 0.7074, -0.5832],
        [ 0.8744,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6038, -0.3604],
        [ 0.5496,  1.3097]], device='cuda:0'), pred_original_sample=tensor([[-0.0460, -0.5238],
        [ 0.6562,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7884, -0.4815],
        [ 0.4684,  1.2476]], device='cuda:0'), pred_original_sample=tensor([[ 0.7092, -0.5567],
        [ 1.0000,  0.5763]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5269, -0.7219],
        [ 0.5605,  1.1202]], device='cuda:0'), pred_original_sample=tensor([[-0.6827, -0.2129],
        [ 1.0000,  0.2432]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7981, -1.0681],
        [ 0.4340,  1.2780]], device='cuda:0'), pred_original_sample=tensor([[-0.5922, -0.2175],
        [ 1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.9898, -1.0070],
        [ 0.5790,  1.1182]], device='cuda:0'), pred_original_sample=tensor([[-0.0504, -0.2066],
        [ 0.3596,  0.6784]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.1262, -0.7562],
        [ 0.8122,  1.1002]], device='cuda:0'), pred_original_sample=tensor([[ 0.1512, -0.8831],
        [ 0.3945,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7126, -0.9094],
        [ 0.5054,  1.0664]], device='cuda:0'), pred_original_sample=tensor([[ 0.1977, -0.9423],
        [ 1.0000,  0.5667]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.0415, -0.7866],
        [ 0.3763,  1.1938]], device='cuda:0'), pred_original_sample=tensor([[1.0000, 0.0595],
        [0.4102, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.1683, -0.9676],
        [ 0.2892,  1.3243]], device='cuda:0'), pred_original_sample=tensor([[ 1.0000, -0.4917],
        [-0.1543,  0.7556]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.9626, -0.8849],
        [ 0.4500,  1.6041]], device='cuda:0'), pred_original_sample=tensor([[-0.0054, -0.4777],
        [ 1.0000,  0.3765]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.9792, -0.7982],
        [ 0.3126,  1.3321]], device='cuda:0'), pred_original_sample=tensor([[-0.0061, -0.3730],
        [-0.1131,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.1863, -0.8136],
        [ 0.3696,  1.4043]], device='cuda:0'), pred_original_sample=tensor([[ 0.2902, -0.7955],
        [-0.0792,  0.8946]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.0408, -0.9059],
        [ 0.2472,  1.3110]], device='cuda:0'), pred_original_sample=tensor([[-0.1561, -1.0000],
        [ 1.0000,  0.2016]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8150, -0.9072],
        [ 0.0630,  1.3459]], device='cuda:0'), pred_original_sample=tensor([[-0.1659, -0.3115],
        [ 1.0000,  0.1634]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8244, -0.8572],
        [ 0.3492,  1.2347]], device='cuda:0'), pred_original_sample=tensor([[ 0.7992,  0.2279],
        [-0.1597,  0.6035]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.9421, -0.9164],
        [ 0.0889,  1.5269]], device='cuda:0'), pred_original_sample=tensor([[-0.1807, -0.1921],
        [ 0.3930,  0.7199]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5931, -1.0938],
        [ 0.2020,  1.3847]], device='cuda:0'), pred_original_sample=tensor([[-0.3306, -1.0000],
        [ 0.7172,  0.7311]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7644, -0.9037],
        [ 0.0723,  1.1589]], device='cuda:0'), pred_original_sample=tensor([[-0.7288, -0.6051],
        [ 0.9619,  0.1073]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5649, -0.7263],
        [ 0.3284,  1.6272]], device='cuda:0'), pred_original_sample=tensor([[ 0.3680, -0.2990],
        [ 0.5306,  0.8687]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5515, -1.0621],
        [ 0.3110,  1.3720]], device='cuda:0'), pred_original_sample=tensor([[ 0.3217, -1.0000],
        [ 0.3900,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6980, -1.2846],
        [ 0.1734,  1.5175]], device='cuda:0'), pred_original_sample=tensor([[-0.9483, -1.0000],
        [ 0.4815,  0.9698]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5984, -0.9066],
        [ 0.0788,  1.5409]], device='cuda:0'), pred_original_sample=tensor([[-0.0690, -0.8539],
        [ 0.4326,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4595, -1.1090],
        [ 0.0305,  1.6144]], device='cuda:0'), pred_original_sample=tensor([[ 0.4653, -1.0000],
        [-0.1467,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2088, -0.8128],
        [ 0.2019,  1.6475]], device='cuda:0'), pred_original_sample=tensor([[-0.5942,  0.2062],
        [ 0.6598,  0.0075]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4228, -0.7900],
        [ 0.2332,  1.7756]], device='cuda:0'), pred_original_sample=tensor([[-0.2866, -1.0000],
        [ 0.7072,  0.3975]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2215, -0.9573],
        [ 0.1663,  1.6737]], device='cuda:0'), pred_original_sample=tensor([[-0.5089, -1.0000],
        [ 0.6539,  0.9291]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3727, -0.8276],
        [ 0.3591,  2.0557]], device='cuda:0'), pred_original_sample=tensor([[-0.5718, -0.9949],
        [ 0.6523,  0.7453]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1017, -0.6224],
        [ 0.0400,  1.9595]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.5067],
        [ 0.3353,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0738, -0.6816],
        [ 0.3991,  1.9269]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.5925],
        [ 0.3427,  0.3030]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.1470, -0.5094],
        [ 0.3958,  1.8827]], device='cuda:0'), pred_original_sample=tensor([[-0.8239, -0.1669],
        [-0.0864,  0.4794]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1015, -0.5117],
        [ 0.2679,  1.7524]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.0790],
        [ 0.5089, -0.0738]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1456, -0.4055],
        [ 0.4814,  1.5838]], device='cuda:0'), pred_original_sample=tensor([[-1.0000,  0.1917],
        [ 0.9157,  0.6851]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2971, -0.7029],
        [ 0.4319,  1.4629]], device='cuda:0'), pred_original_sample=tensor([[-0.8795, -0.0402],
        [ 1.0000,  0.4058]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2250, -0.7424],
        [ 0.5115,  1.1479]], device='cuda:0'), pred_original_sample=tensor([[-0.4994, -0.2347],
        [ 1.0000,  0.1424]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1569, -0.3895],
        [ 0.5393,  1.5638]], device='cuda:0'), pred_original_sample=tensor([[-0.0401,  0.9553],
        [ 1.0000,  0.6564]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2809, -0.3924],
        [ 0.4231,  1.5962]], device='cuda:0'), pred_original_sample=tensor([[0.4165, 0.3066],
        [0.8057, 0.8681]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0224, -0.2984],
        [ 0.4557,  1.6480]], device='cuda:0'), pred_original_sample=tensor([[-0.1144,  0.4602],
        [ 0.4548,  0.3171]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3037, -0.2477],
        [ 0.3601,  1.8338]], device='cuda:0'), pred_original_sample=tensor([[-0.4205,  1.0000],
        [ 0.7387,  0.9142]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[-0.0067, -0.0242],
        [ 0.1943,  1.4994]], device='cuda:0'), pred_original_sample=tensor([[-0.2463,  1.0000],
        [ 0.3266,  0.6432]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2332, -0.4021],
        [ 0.0296,  1.4463]], device='cuda:0'), pred_original_sample=tensor([[-0.5025,  1.0000],
        [ 0.5979,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0811, -0.5712],
        [ 0.0909,  1.5434]], device='cuda:0'), pred_original_sample=tensor([[0.0073, 0.6750],
        [0.5461, 1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1718, -0.5073],
        [ 0.0890,  1.4354]], device='cuda:0'), pred_original_sample=tensor([[-0.3247, -0.0553],
        [ 0.1566,  0.3816]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0279, -0.7424],
        [-0.0500,  1.5825]], device='cuda:0'), pred_original_sample=tensor([[-0.5962, -0.3689],
        [-0.2177,  0.7520]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3468, -0.6159],
        [ 0.1689,  1.3896]], device='cuda:0'), pred_original_sample=tensor([[-0.4241, -0.7463],
        [ 0.7875,  0.8555]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0545, -0.5725],
        [ 0.3996,  1.4873]], device='cuda:0'), pred_original_sample=tensor([[-0.7255, -0.3434],
        [ 0.4985,  0.5648]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3015, -0.4415],
        [ 0.3337,  1.1255]], device='cuda:0'), pred_original_sample=tensor([[-0.8474,  0.6153],
        [ 1.0000,  0.0422]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2506, -0.4005],
        [ 0.3188,  1.4312]], device='cuda:0'), pred_original_sample=tensor([[-0.2099, -0.1813],
        [-0.1618,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5629, -0.5418],
        [ 0.4131,  1.2740]], device='cuda:0'), pred_original_sample=tensor([[-0.5362, -0.4122],
        [ 1.0000,  0.1403]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5662, -0.7235],
        [ 0.4363,  1.3801]], device='cuda:0'), pred_original_sample=tensor([[-0.3958,  0.1786],
        [ 1.0000,  0.5372]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4663, -0.6926],
        [ 0.2489,  1.3156]], device='cuda:0'), pred_original_sample=tensor([[-0.1993, -0.7129],
        [ 1.0000,  0.8274]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5336, -0.9310],
        [ 0.4736,  1.5611]], device='cuda:0'), pred_original_sample=tensor([[ 0.4047, -1.0000],
        [ 1.0000,  0.7234]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4525, -0.9658],
        [ 0.5923,  1.4968]], device='cuda:0'), pred_original_sample=tensor([[-0.5161, -0.5571],
        [ 1.0000,  0.2594]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6239, -0.9109],
        [ 1.2288,  1.5730]], device='cuda:0'), pred_original_sample=tensor([[ 0.2977, -1.0000],
        [ 0.9091, -0.0291]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3406, -0.8743],
        [ 0.6968,  1.5561]], device='cuda:0'), pred_original_sample=tensor([[ 0.4544, -1.0000],
        [ 1.0000, -0.3303]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4434, -1.2480],
        [ 0.9940,  1.2909]], device='cuda:0'), pred_original_sample=tensor([[ 0.2596, -1.0000],
        [ 0.7952,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2801, -1.1022],
        [ 1.2846,  1.0622]], device='cuda:0'), pred_original_sample=tensor([[-0.8367, -0.4749],
        [ 0.0795,  0.7367]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0586, -1.2757],
        [ 1.0270,  1.2167]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.2728],
        [ 1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1593, -1.3727],
        [ 1.1229,  1.1229]], device='cuda:0'), pred_original_sample=tensor([[-1.0000, -0.3561],
        [ 1.0000, -0.2312]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2804, -1.4379],
        [ 1.5929,  0.9794]], device='cuda:0'), pred_original_sample=tensor([[-0.8938, -0.7809],
        [ 1.0000,  0.5664]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3846, -1.2786],
        [ 1.3955,  1.0296]], device='cuda:0'), pred_original_sample=tensor([[-0.5430, -0.3825],
        [ 1.0000,  0.8961]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2087, -1.3971],
        [ 1.5115,  1.0784]], device='cuda:0'), pred_original_sample=tensor([[-0.9259, -0.3446],
        [ 0.6831,  0.2844]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3116, -1.4293],
        [ 1.0941,  1.3344]], device='cuda:0'), pred_original_sample=tensor([[-0.2081, -0.4762],
        [ 0.2227,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6206, -1.2329],
        [ 0.9995,  1.4628]], device='cuda:0'), pred_original_sample=tensor([[-0.5541, -1.0000],
        [ 0.4668,  0.9849]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4275, -1.2102],
        [ 1.2456,  1.4765]], device='cuda:0'), pred_original_sample=tensor([[-0.6034, -1.0000],
        [ 1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5830, -1.3172],
        [ 1.3954,  1.0514]], device='cuda:0'), pred_original_sample=tensor([[-0.6915, -1.0000],
        [ 0.4472,  0.8622]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8220, -1.4107],
        [ 0.9588,  1.1056]], device='cuda:0'), pred_original_sample=tensor([[-0.0520, -1.0000],
        [ 0.8900,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.9593, -1.3706],
        [ 1.1064,  1.1661]], device='cuda:0'), pred_original_sample=tensor([[ 0.4942, -1.0000],
        [ 1.0000,  0.8210]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8877, -1.4672],
        [ 1.2664,  1.0196]], device='cuda:0'), pred_original_sample=tensor([[ 0.2355, -1.0000],
        [ 1.0000,  0.6856]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.0272, -1.2808],
        [ 1.4259,  0.9706]], device='cuda:0'), pred_original_sample=tensor([[ 0.5090, -1.0000],
        [ 1.0000,  0.7574]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8435, -1.2340],
        [ 1.3224,  1.0035]], device='cuda:0'), pred_original_sample=tensor([[-0.1710, -1.0000],
        [ 0.8487, -0.0729]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7774, -1.0152],
        [ 1.6852,  1.0799]], device='cuda:0'), pred_original_sample=tensor([[ 0.3037, -0.8091],
        [ 1.0000,  0.7096]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8074, -1.0883],
        [ 1.6580,  1.1338]], device='cuda:0'), pred_original_sample=tensor([[-0.0170, -0.8512],
        [ 1.0000,  0.3645]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.9341, -1.0290],
        [ 1.4861,  1.2839]], device='cuda:0'), pred_original_sample=tensor([[ 0.1556, -0.6101],
        [ 1.0000,  0.4929]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.9284, -0.9093],
        [ 1.6847,  1.4604]], device='cuda:0'), pred_original_sample=tensor([[ 0.1321, -0.4573],
        [ 1.0000,  0.7680]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5939, -0.7619],
        [ 1.5786,  1.3132]], device='cuda:0'), pred_original_sample=tensor([[ 0.3164, -1.0000],
        [ 1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7566, -0.7204],
        [ 1.6039,  1.2730]], device='cuda:0'), pred_original_sample=tensor([[ 0.2706, -1.0000],
        [ 1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5878, -1.0038],
        [ 1.6266,  1.1990]], device='cuda:0'), pred_original_sample=tensor([[ 0.4251, -0.5429],
        [ 1.0000,  0.7941]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5095, -1.0909],
        [ 1.5726,  1.1976]], device='cuda:0'), pred_original_sample=tensor([[-0.7025, -0.5602],
        [ 1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6560, -1.2429],
        [ 1.5181,  1.1531]], device='cuda:0'), pred_original_sample=tensor([[-0.0545, -1.0000],
        [ 1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7842, -1.1628],
        [ 1.6181,  1.2201]], device='cuda:0'), pred_original_sample=tensor([[ 0.0519, -1.0000],
        [ 1.0000,  0.9837]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8133, -1.3454],
        [ 1.5967,  1.2814]], device='cuda:0'), pred_original_sample=tensor([[ 0.3579, -1.0000],
        [ 1.0000,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 1.0351, -1.3616],
        [ 1.7980,  1.1655]], device='cuda:0'), pred_original_sample=tensor([[ 0.6041, -1.0000],
        [ 1.0000,  0.5133]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.8070, -1.1451],
        [ 1.5668,  1.0773]], device='cuda:0'), pred_original_sample=tensor([[ 0.2260, -1.0000],
        [ 1.0000,  0.5278]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6916, -1.3605],
        [ 1.5912,  1.0098]], device='cuda:0'), pred_original_sample=tensor([[-0.6877, -0.9769],
        [ 1.0000,  0.2776]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7332, -1.1617],
        [ 1.5342,  0.9490]], device='cuda:0'), pred_original_sample=tensor([[-0.3793, -1.0000],
        [ 1.0000,  0.5769]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4762, -1.2645],
        [ 1.2503,  0.9353]], device='cuda:0'), pred_original_sample=tensor([[-0.7023, -1.0000],
        [ 1.0000,  0.9272]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.9831, -1.2500],
        [ 1.5206,  1.2112]], device='cuda:0'), pred_original_sample=tensor([[ 0.2372, -1.0000],
        [ 1.0000,  0.7422]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6993, -1.1204],
        [ 1.5624,  0.6141]], device='cuda:0'), pred_original_sample=tensor([[ 0.1930, -1.0000],
        [ 1.0000,  0.8323]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5881, -1.1033],
        [ 1.2411,  0.8575]], device='cuda:0'), pred_original_sample=tensor([[-0.3612, -1.0000],
        [ 1.0000,  0.4958]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.9537, -1.1168],
        [ 1.2720,  0.8671]], device='cuda:0'), pred_original_sample=tensor([[-0.4404, -1.0000],
        [ 1.0000,  0.6357]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6698, -1.0768],
        [ 1.3616,  1.0554]], device='cuda:0'), pred_original_sample=tensor([[-0.7321, -1.0000],
        [ 1.0000,  0.8209]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4615, -1.1242],
        [ 1.1132,  0.7115]], device='cuda:0'), pred_original_sample=tensor([[-0.6730, -0.9789],
        [ 1.0000,  0.6966]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5418, -1.1549],
        [ 1.2109,  0.9134]], device='cuda:0'), pred_original_sample=tensor([[-0.6253, -1.0000],
        [ 1.0000,  0.6502]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.9089, -1.0963],
        [ 1.2062,  1.2525]], device='cuda:0'), pred_original_sample=tensor([[-0.3671, -1.0000],
        [ 0.4376,  0.7698]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5422, -1.0419],
        [ 0.9821,  1.0748]], device='cuda:0'), pred_original_sample=tensor([[-0.6271, -1.0000],
        [ 1.0000,  0.7501]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4771, -1.1465],
        [ 1.0886,  1.0407]], device='cuda:0'), pred_original_sample=tensor([[-0.0261, -0.9883],
        [ 0.8677,  0.5743]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6150, -1.3656],
        [ 1.0230,  1.0853]], device='cuda:0'), pred_original_sample=tensor([[-0.6430, -1.0000],
        [ 0.8724,  0.5791]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5188, -1.0182],
        [ 0.9081,  0.9211]], device='cuda:0'), pred_original_sample=tensor([[-0.2213, -0.2958],
        [ 0.8438,  0.3980]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5738, -1.2023],
        [ 0.8394,  0.8002]], device='cuda:0'), pred_original_sample=tensor([[-0.3208, -0.8685],
        [ 0.2124,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4137, -1.0826],
        [ 0.7780,  0.9962]], device='cuda:0'), pred_original_sample=tensor([[-0.4596, -0.2677],
        [ 0.0608,  1.0000]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4077, -0.8823],
        [ 1.1772,  0.7766]], device='cuda:0'), pred_original_sample=tensor([[-0.5134,  0.0245],
        [ 0.5853,  0.6070]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5699, -1.0060],
        [ 1.1770,  1.2009]], device='cuda:0'), pred_original_sample=tensor([[ 0.3072, -0.8599],
        [ 1.0000,  0.7381]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2388, -0.9211],
        [ 1.1180,  1.1459]], device='cuda:0'), pred_original_sample=tensor([[ 0.3129, -0.7659],
        [ 1.0000,  0.8377]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5529, -1.0101],
        [ 1.0297,  1.0214]], device='cuda:0'), pred_original_sample=tensor([[-0.5924, -0.4230],
        [ 1.0000,  0.5792]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7613, -1.1417],
        [ 1.0798,  0.9621]], device='cuda:0'), pred_original_sample=tensor([[-0.4631, -0.3658],
        [ 1.0000,  0.9820]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.5723, -0.7956],
        [ 0.8024,  1.3196]], device='cuda:0'), pred_original_sample=tensor([[ 0.1454, -0.4660],
        [ 0.1508,  0.7051]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.7079, -0.9164],
        [ 0.9275,  1.2025]], device='cuda:0'), pred_original_sample=tensor([[ 0.0836, -0.8115],
        [ 0.1275,  0.6938]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3815, -0.6108],
        [ 0.7719,  1.1793]], device='cuda:0'), pred_original_sample=tensor([[-0.2157, -0.8325],
        [ 1.0000,  0.2821]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.4463, -0.6559],
        [ 0.9001,  1.2913]], device='cuda:0'), pred_original_sample=tensor([[-0.2041, -0.7355],
        [ 1.0000,  0.7548]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.6829, -0.5905],
        [ 0.8008,  1.4445]], device='cuda:0'), pred_original_sample=tensor([[-0.2322, -0.0059],
        [ 0.8162,  0.7501]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.3218, -0.6304],
        [ 0.9754,  1.4298]], device='cuda:0'), pred_original_sample=tensor([[-0.5573, -0.3361],
        [ 0.8976,  0.8621]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.2998, -0.6508],
        [ 0.8404,  1.7518]], device='cuda:0'), pred_original_sample=tensor([[-0.3958, -0.7991],
        [ 0.9886,  0.2274]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1053, -0.7301],
        [ 1.0261,  1.4371]], device='cuda:0'), pred_original_sample=tensor([[-0.5489, -0.9237],
        [ 0.9837,  0.3456]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.0852, -0.8764],
        [ 0.7264,  1.6381]], device='cuda:0'), pred_original_sample=tensor([[-0.6662, -1.0000],
        [ 0.5788,  0.3613]], device='cuda:0'))
DDPMSchedulerOutput(prev_sample=tensor([[ 0.1362, -0.7500],
        [ 0.7993,  1.6931]], device='cuda:0'), pred_original_sample=tensor([[-0.6319, -0.8944],
        [ 0.4948,  0.3813]], device='cuda:0'))
1000it [00:04, 230.38it/s]
tensor([[-0.3133,  0.2239],
        [ 0.8985,  0.6241]])
tensor([[ 0.6501,  0.2818],
        [-0.0813, -0.4879]], device='cuda:0')
Input shape: torch.Size([5])
Number of weights: 219617
Generated 100000 samples
/tmp/ipykernel_52532/2790516992.py:21: RuntimeWarning: covariance is not symmetric positive-semidefinite.
  act = np.random.multivariate_normal(mean=obs, cov=self.cov)
